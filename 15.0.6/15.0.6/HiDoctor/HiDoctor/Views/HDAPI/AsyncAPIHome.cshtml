@{
    ViewBag.Title = "Async APIHome";
    Layout = null;
}
<link href="~/Content/API.css" rel="stylesheet" />
<style type="text/css">
    .simple_overlay_white {
        z-index: 10;
    }

    .api-div {
        padding: 5px;
    }

    .api-header {
        background: #F8F8F8;
        padding: 5px;
        color: #00ACEE;
        font-weight: bold;
        font-size: 15px;
    }

    .simple_overlay .close {
        background-image: url(../Images/close.png);
        position: absolute;
        right: -15px;
        top: -15px;
        cursor: pointer;
        height: 35px;
        width: 35px;
        z-index: 999999;
    }
</style>


<div style="font-weight: bold">(Click on the service name to call)</div>
<br />

<div id="dvRptMenu">
    <div id="dvSideMenu">
        <div id="dvSideMenuContent" style="margin: 5%;"></div>
    </div>

    <div id="dvDesc">
        <div id="dvDescContent" style="margin: 2% 3% 3% 3%;"></div>
    </div>
    <div style="clear: both;"></div>

    <a href="#" class="scrollup">Scroll</a>
</div>

<div class="simple_overlay" id="dvAPIUI" style="overflow-y:auto;">
    <div class="details">
        <a class="close" onclick="$('#dvAPIUI').overlay().close();"></a>
        <div id="dvSerName" class="api-header"></div>
        <div id="dvElements"></div>
        <input type="hidden" id="hdnAPIId" />
        <input type="hidden" id="hdnServiceId" />

        <input type="button" class="input-button" style="display: none;margin-left: 40%;" id="btnExecService" value="Get Report" onclick="fnExecuteAPI()" />
        <div id="dvload" style="display: none">
            <img src="../Areas/HiDoctor_Activity/Content/images/Web/hd/load.gif" />
        </div>

        <!--<div id="dvURL" class="div-alert" style="display: none">Test</div>-->
        <div id="dvXLAPIQueuePanel" style="padding:10px; display:none">
            <div id="dvAsynMsg" style="display:none"></div>
            <div>
                <input type="button" class="btn btn-primary" value="Refresh" onclick="fnRefreshReportQueueStatus(hdnAPIId.value);" /><br />
            </div>
            <div>
                <div id="dvXLAPIQueue" style="height: 300px;overflow: auto;"></div>
            </div>
            <br />
        </div>
    </div>
</div>
<a href="#" class="scrollup">Scroll</a>
<script src="~/Scripts/HD/AsyncAPIServices.js?v=@HiDoctor.BuildNumber.BuildNo"></script>

<script>
    $(window).scroll(function () {
        if ($(this).scrollTop() > 100) {
            $('.scrollup').fadeIn();
        } else {
            $('.scrollup').fadeOut();
        }
    });


    $(document).ready(function () {
        fnBindAPIServices();
        $("#dvAPIUI").overlay({
            onBeforeLoad: function () {
            },
            onLoad: function () {
            }
        });
        $("#dvAjaxLoad").hide();
        $("#dvXLAPIQueuePanel").show();        
       
    });
    (function ($) {

        $.fn.tablePagination = function (settings) {
            var defaults = {
                firstArrow: (new Image()).src = "./images/first.gif",
                prevArrow: (new Image()).src = "./images/prev.gif",
                lastArrow: (new Image()).src = "./images/last.gif",
                nextArrow: (new Image()).src = "./images/next.gif",
                rowsPerPage: 5,
                currPage: 1,
                optionsForRows: [5, 10, 25, 50, 100],
                ignoreRows: [],
                topNav: false
            };
            settings = $.extend(defaults, settings);

            return this.each(function () {
                var table = $(this)[0];
                var totalPagesId, currPageId, rowsPerPageId, firstPageId, prevPageId, nextPageId, lastPageId;
                totalPagesId = '#tablePagination_totalPages';
                currPageId = '#tablePagination_currPage';
                rowsPerPageId = '#tablePagination_rowsPerPage';
                firstPageId = '#tablePagination_firstPage';
                prevPageId = '#tablePagination_prevPage';
                nextPageId = '#tablePagination_nextPage';
                lastPageId = '#tablePagination_lastPage';
                var tblLocation = (defaults.topNav) ? "prev" : "next";

                var possibleTableRows = $.makeArray($('tbody tr', table));
                var tableRows = $.grep(possibleTableRows, function (value, index) {
                    return ($.inArray(value, defaults.ignoreRows) == -1);
                }, false)

                var numRows = tableRows.length
                var totalPages = resetTotalPages();
                var currPageNumber = (defaults.currPage > totalPages) ? 1 : defaults.currPage;
                if ($.inArray(defaults.rowsPerPage, defaults.optionsForRows) == -1)
                    defaults.optionsForRows.push(defaults.rowsPerPage);


                function hideOtherPages(pageNum) {
                    if (pageNum == 0 || pageNum > totalPages)
                        return;
                    var startIndex = (pageNum - 1) * defaults.rowsPerPage;
                    var endIndex = (startIndex + defaults.rowsPerPage - 1);
                    $(tableRows).show();
                    for (var i = 0; i < tableRows.length; i++) {
                        if (i < startIndex || i > endIndex) {
                            $(tableRows[i]).hide()
                        }
                    }
                }

                function resetTotalPages() {
                    var preTotalPages = Math.round(numRows / defaults.rowsPerPage);
                    var totalPages = (preTotalPages * defaults.rowsPerPage < numRows) ? preTotalPages + 1 : preTotalPages;
                    if ($(table)[tblLocation]().find(totalPagesId).length > 0)
                        $(table)[tblLocation]().find(totalPagesId).html(totalPages);
                    return totalPages;
                }

                function resetCurrentPage(currPageNum) {
                    if (currPageNum < 1 || currPageNum > totalPages)
                        return;
                    currPageNumber = currPageNum;
                    hideOtherPages(currPageNumber);
                    $(table)[tblLocation]().find(currPageId).val(currPageNumber)
                }

                function resetPerPageValues() {
                    var isRowsPerPageMatched = false;
                    var optsPerPage = defaults.optionsForRows;
                    optsPerPage.sort(function (a, b) { return a - b; });
                    var perPageDropdown = $(table)[tblLocation]().find(rowsPerPageId)[0];
                    perPageDropdown.length = 0;
                    for (var i = 0; i < optsPerPage.length; i++) {
                        if (optsPerPage[i] == defaults.rowsPerPage) {
                            perPageDropdown.options[i] = new Option(optsPerPage[i], optsPerPage[i], true, true);
                            isRowsPerPageMatched = true;
                        }
                        else {
                            perPageDropdown.options[i] = new Option(optsPerPage[i], optsPerPage[i]);
                        }
                    }
                    if (!isRowsPerPageMatched) {
                        defaults.optionsForRows == optsPerPage[0];
                    }
                }

                function createPaginationElements() {
                    var htmlBuffer = [];
                    htmlBuffer.push("<div id='tablePagination'>");
                    htmlBuffer.push("<span id='tablePagination_perPage'>");
                    htmlBuffer.push("<select id='tablePagination_rowsPerPage'><option value='5'>5</option></select>");
                    htmlBuffer.push("per page");
                    htmlBuffer.push("</span>");
                    htmlBuffer.push("<span id='tablePagination_paginater'>");
                    htmlBuffer.push("<img id='tablePagination_firstPage' src='" + defaults.firstArrow + "'>");
                    htmlBuffer.push("<img id='tablePagination_prevPage' src='" + defaults.prevArrow + "'>");
                    htmlBuffer.push("Page");
                    htmlBuffer.push("<input id='tablePagination_currPage' type='input' value='" + currPageNumber + "' size='1'>");
                    htmlBuffer.push("of <span id='tablePagination_totalPages'>" + totalPages + "</span>");
                    htmlBuffer.push("<img id='tablePagination_nextPage' src='" + defaults.nextArrow + "'>");
                    htmlBuffer.push("<img id='tablePagination_lastPage' src='" + defaults.lastArrow + "'>");
                    htmlBuffer.push("</span>");
                    htmlBuffer.push("</div>");
                    return htmlBuffer.join("").toString();
                }

                if ($(table)[tblLocation]().find(totalPagesId).length == 0) {
                    if (defaults.topNav) {
                        $(this).before(createPaginationElements());
                    } else {
                        $(this).after(createPaginationElements());
                    }
                }
                else {
                    $(table)[tblLocation]().find(currPageId).val(currPageNumber);
                }
                resetPerPageValues();
                hideOtherPages(currPageNumber);

                $(table)[tblLocation]().find(firstPageId).bind('click', function (e) {
                    resetCurrentPage(1)
                });

                $(table)[tblLocation]().find(prevPageId).bind('click', function (e) {
                    resetCurrentPage(currPageNumber - 1)
                });

                $(table)[tblLocation]().find(nextPageId).bind('click', function (e) {
                    resetCurrentPage(parseInt(currPageNumber) + 1)
                });

                $(table)[tblLocation]().find(lastPageId).bind('click', function (e) {
                    resetCurrentPage(totalPages)
                });

                $(table)[tblLocation]().find(currPageId).bind('change', function (e) {
                    resetCurrentPage(this.value)
                });

                $(table)[tblLocation]().find(rowsPerPageId).bind('change', function (e) {
                    defaults.rowsPerPage = parseInt(this.value, 10);
                    totalPages = resetTotalPages();
                    resetCurrentPage(1)
                });

            })
        };
    })(jQuery);

</script>
