(function (e) { e.fn.tablePagination = function (t) { var n = { firstArrow: (new Image).src = "./Images/first.gif", prevArrow: (new Image).src = "./Images/prev.gif", lastArrow: (new Image).src = "./Images/last.gif", nextArrow: (new Image).src = "./Images/next.gif", rowsPerPage: 5, currPage: 1, optionsForRows: [5, 10, 25, 50, 100], ignoreRows: [], topNav: false }; t = e.extend(n, t); return this.each(function () { function m(t) { if (t == 0 || t > d) return; var r = (t - 1) * n.rowsPerPage; var i = r + n.rowsPerPage - 1; e(h).show(); for (var s = 0; s < h.length; s++) { if (s < r || s > i) { e(h[s]).hide() } } } function g() { var i = Math.round(p / n.rowsPerPage); var s = i * n.rowsPerPage < p ? i + 1 : i; if (e(t)[l]().find(r).length > 0) e(t)[l]().find(r).html(s); return s } function y(n) { if (n < 1 || n > d) return; v = n; m(v); e(t)[l]().find(i).val(v) } function b() { var r = false; var i = n.optionsForRows; i.sort(function (e, t) { return e - t }); var o = e(t)[l]().find(s)[0]; o.length = 0; for (var u = 0; u < i.length; u++) { if (i[u] == n.rowsPerPage) { o.options[u] = new Option(i[u], i[u], true, true); r = true } else { o.options[u] = new Option(i[u], i[u]) } } if (!r) { n.optionsForRows == i[0] } } function w() { var e = []; e.push("<div id='tablePagination'>"); e.push("<span id='tablePagination_perPage'>"); e.push("<select id='tablePagination_rowsPerPage'><option value='5'>5</option></select>"); e.push("per page"); e.push("</span>"); e.push("<span id='tablePagination_paginater'>"); e.push("<img id='tablePagination_firstPage' src='" + n.firstArrow + "'>"); e.push("<img id='tablePagination_prevPage' src='" + n.prevArrow + "'>"); e.push("Page"); e.push("<input id='tablePagination_currPage' type='input' value='" + v + "' size='1'>"); e.push("of <span id='tablePagination_totalPages'>" + d + "</span>"); e.push("<img id='tablePagination_nextPage' src='" + n.nextArrow + "'>"); e.push("<img id='tablePagination_lastPage' src='" + n.lastArrow + "'>"); e.push("</span>"); e.push("</div>"); return e.join("").toString() } var t = e(this)[0]; var r, i, s, o, u, a, f; r = "#tablePagination_totalPages"; i = "#tablePagination_currPage"; s = "#tablePagination_rowsPerPage"; o = "#tablePagination_firstPage"; u = "#tablePagination_prevPage"; a = "#tablePagination_nextPage"; f = "#tablePagination_lastPage"; var l = n.topNav ? "prev" : "next"; var c = e.makeArray(e("tbody tr", t)); var h = e.grep(c, function (t, r) { return e.inArray(t, n.ignoreRows) == -1 }, false); var p = h.length; var d = g(); var v = n.currPage > d ? 1 : n.currPage; if (e.inArray(n.rowsPerPage, n.optionsForRows) == -1) n.optionsForRows.push(n.rowsPerPage); if (e(t)[l]().find(r).length == 0) { if (n.topNav) { e(this).before(w()) } else { e(this).after(w()) } } else { e(t)[l]().find(i).val(v) } b(); m(v); e(t)[l]().find(o).bind("click", function (e) { y(1) }); e(t)[l]().find(u).bind("click", function (e) { y(v - 1) }); e(t)[l]().find(a).bind("click", function (e) { y(parseInt(v) + 1) }); e(t)[l]().find(f).bind("click", function (e) { y(d) }); e(t)[l]().find(i).bind("change", function (e) { y(this.value) }); e(t)[l]().find(s).bind("change", function (e) { n.rowsPerPage = parseInt(this.value, 10); d = g(); y(1) }) }) } })(jQuery)