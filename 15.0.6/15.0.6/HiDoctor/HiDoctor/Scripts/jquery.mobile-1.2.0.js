(function (e, t, n) { if (typeof define === "function" && define.amd) { define(["jquery"], function (r) { n(r, e, t); return r.mobile }) } else { n(e.jQuery, e, t) } })(this, document, function (e, t, n, r) { (function (e, t, r) { var i = {}; e.mobile = e.extend({}, { version: "1.2.0", ns: "", subPageUrlKey: "ui-page", activePageClass: "ui-page-active", activeBtnClass: "ui-btn-active", focusClass: "ui-focus", ajaxEnabled: true, hashListeningEnabled: true, linkBindingEnabled: true, defaultPageTransition: "fade", maxTransitionWidth: false, minScrollBack: 250, touchOverflowEnabled: false, defaultDialogTransition: "pop", pageLoadErrorMessage: "Error Loading Page", pageLoadErrorMessageTheme: "e", phonegapNavigationEnabled: false, autoInitializePage: true, pushStateEnabled: true, ignoreContentEnabled: false, orientationChangeEnabled: true, buttonMarkup: { hoverDelay: 200 }, keyCode: { ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91 }, silentScroll: function (r) { if (e.type(r) !== "number") { r = e.mobile.defaultHomeScroll } e.event.special.scrollstart.enabled = false; setTimeout(function () { t.scrollTo(0, r); e(n).trigger("silentscroll", { x: 0, y: r }) }, 20); setTimeout(function () { e.event.special.scrollstart.enabled = true }, 150) }, nsNormalizeDict: i, nsNormalize: function (t) { if (!t) { return } return i[t] || (i[t] = e.camelCase(e.mobile.ns + t)) }, getInheritedTheme: function (e, t) { var n = e[0], r = "", i = /ui-(bar|body|overlay)-([a-z])\b/, s, o; while (n) { s = n.className || ""; if (s && (o = i.exec(s)) && (r = o[2])) { break } n = n.parentNode } return r || t || "a" }, closestPageData: function (e) { return e.closest(':jqmData(role="page"), :jqmData(role="dialog")').data("page") }, enhanceable: function (e) { return this.haveParents(e, "enhance") }, hijackable: function (e) { return this.haveParents(e, "ajax") }, haveParents: function (t, n) { if (!e.mobile.ignoreContentEnabled) { return t } var r = t.length, i = e(), s, o, u; for (var a = 0; a < r; a++) { o = t.eq(a); u = false; s = t[a]; while (s) { var f = s.getAttribute ? s.getAttribute("data-" + e.mobile.ns + n) : ""; if (f === "false") { u = true; break } s = s.parentNode } if (!u) { i = i.add(o) } } return i }, getScreenHeight: function () { return t.innerHeight || e(t).height() } }, e.mobile); e.fn.jqmData = function (t, n) { var i; if (typeof t !== "undefined") { if (t) { t = e.mobile.nsNormalize(t) } if (arguments.length < 2 || n === r) { i = this.data(t) } else { i = this.data(t, n) } } return i }; e.jqmData = function (t, n, r) { var i; if (typeof n !== "undefined") { i = e.data(t, n ? e.mobile.nsNormalize(n) : n, r) } return i }; e.fn.jqmRemoveData = function (t) { return this.removeData(e.mobile.nsNormalize(t)) }; e.jqmRemoveData = function (t, n) { return e.removeData(t, e.mobile.nsNormalize(n)) }; e.fn.removeWithDependents = function () { e.removeWithDependents(this) }; e.removeWithDependents = function (t) { var n = e(t); (n.jqmData("dependents") || e()).remove(); n.remove() }; e.fn.addDependents = function (t) { e.addDependents(e(this), t) }; e.addDependents = function (t, n) { var r = e(t).jqmData("dependents") || e(); e(t).jqmData("dependents", e.merge(r, n)) }; e.fn.getEncodedText = function () { return e("<div/>").text(e(this).text()).html() }; e.fn.jqmEnhanceable = function () { return e.mobile.enhanceable(this) }; e.fn.jqmHijackable = function () { return e.mobile.hijackable(this) }; var s = e.find, o = /:jqmData\(([^)]*)\)/g; e.find = function (t, n, r, i) { t = t.replace(o, "[data-" + (e.mobile.ns || "") + "$1]"); return s.call(this, t, n, r, i) }; e.extend(e.find, s); e.find.matches = function (t, n) { return e.find(t, null, null, n) }; e.find.matchesSelector = function (t, n) { return e.find(n, null, null, [t]).length > 0 } })(e, this); (function (e, t) { var n = 0, r = Array.prototype.slice, i = e.cleanData; e.cleanData = function (t) { for (var n = 0, r; (r = t[n]) != null; n++) { try { e(r).triggerHandler("remove") } catch (s) { } } i(t) }; e.widget = function (t, n, r) { var i, s, o, u, a = t.split(".")[0]; t = t.split(".")[1]; i = a + "-" + t; if (!r) { r = n; n = e.Widget } e.expr[":"][i] = function (t) { return !!e.data(t, i) }; e[a] = e[a] || {}; s = e[a][t]; o = e[a][t] = function (e, t) { if (!this._createWidget) { return new o(e, t) } if (arguments.length) { this._createWidget(e, t) } }; e.extend(o, s, { version: r.version, _proto: e.extend({}, r), _childConstructors: [] }); u = new n; u.options = e.widget.extend({}, u.options); e.each(r, function (t, i) { if (e.isFunction(i)) { r[t] = function () { var e = function () { return n.prototype[t].apply(this, arguments) }, r = function (e) { return n.prototype[t].apply(this, e) }; return function () { var t = this._super, n = this._superApply, s; this._super = e; this._superApply = r; s = i.apply(this, arguments); this._super = t; this._superApply = n; return s } }() } }); o.prototype = e.widget.extend(u, { widgetEventPrefix: t }, r, { constructor: o, namespace: a, widgetName: t, widgetBaseClass: i, widgetFullName: i }); if (s) { e.each(s._childConstructors, function (t, n) { var r = n.prototype; e.widget(r.namespace + "." + r.widgetName, o, n._proto) }); delete s._childConstructors } else { n._childConstructors.push(o) } e.widget.bridge(t, o) }; e.widget.extend = function (n) { var i = r.call(arguments, 1), s = 0, o = i.length, u, a; for (; s < o; s++) { for (u in i[s]) { a = i[s][u]; if (i[s].hasOwnProperty(u) && a !== t) { n[u] = e.isPlainObject(a) ? e.widget.extend({}, n[u], a) : a } } } return n }; e.widget.bridge = function (n, i) { var s = i.prototype.widgetFullName; e.fn[n] = function (o) { var u = typeof o === "string", a = r.call(arguments, 1), f = this; o = !u && a.length ? e.widget.extend.apply(null, [o].concat(a)) : o; if (u) { this.each(function () { var r, i = e.data(this, s); if (!i) { return e.error("cannot call methods on " + n + " prior to initialization; " + "attempted to call method '" + o + "'") } if (!e.isFunction(i[o]) || o.charAt(0) === "_") { return e.error("no such method '" + o + "' for " + n + " widget instance") } r = i[o].apply(i, a); if (r !== i && r !== t) { f = r && r.jquery ? f.pushStack(r.get()) : r; return false } }) } else { this.each(function () { var t = e.data(this, s); if (t) { t.option(o || {})._init() } else { new i(o, this) } }) } return f } }; e.Widget = function (e, t) { }; e.Widget._childConstructors = []; e.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { disabled: false, create: null }, _createWidget: function (t, r) { r = e(r || this.defaultElement || this)[0]; this.element = e(r); this.uuid = n++; this.eventNamespace = "." + this.widgetName + this.uuid; this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t); this.bindings = e(); this.hoverable = e(); this.focusable = e(); if (r !== this) { e.data(r, this.widgetName, this); e.data(r, this.widgetFullName, this); this._on({ remove: "destroy" }); this.document = e(r.style ? r.ownerDocument : r.document || r); this.window = e(this.document[0].defaultView || this.document[0].parentWindow) } this._create(); this._trigger("create", null, this._getCreateEventData()); this._init() }, _getCreateOptions: e.noop, _getCreateEventData: e.noop, _create: e.noop, _init: e.noop, destroy: function () { this._destroy(); this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)); this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"); this.bindings.unbind(this.eventNamespace); this.hoverable.removeClass("ui-state-hover"); this.focusable.removeClass("ui-state-focus") }, _destroy: e.noop, widget: function () { return this.element }, option: function (n, r) { var i = n, s, o, u; if (arguments.length === 0) { return e.widget.extend({}, this.options) } if (typeof n === "string") { i = {}; s = n.split("."); n = s.shift(); if (s.length) { o = i[n] = e.widget.extend({}, this.options[n]); for (u = 0; u < s.length - 1; u++) { o[s[u]] = o[s[u]] || {}; o = o[s[u]] } n = s.pop(); if (r === t) { return o[n] === t ? null : o[n] } o[n] = r } else { if (r === t) { return this.options[n] === t ? null : this.options[n] } i[n] = r } } this._setOptions(i); return this }, _setOptions: function (e) { var t; for (t in e) { this._setOption(t, e[t]) } return this }, _setOption: function (e, t) { this.options[e] = t; if (e === "disabled") { this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t); this.hoverable.removeClass("ui-state-hover"); this.focusable.removeClass("ui-state-focus") } return this }, enable: function () { return this._setOption("disabled", false) }, disable: function () { return this._setOption("disabled", true) }, _on: function (t, n) { if (!n) { n = t; t = this.element } else { t = e(t); this.bindings = this.bindings.add(t) } var r = this; e.each(n, function (n, i) { function s() { if (r.options.disabled === true || e(this).hasClass("ui-state-disabled")) { return } return (typeof i === "string" ? r[i] : i).apply(r, arguments) } if (typeof i !== "string") { s.guid = i.guid = i.guid || s.guid || e.guid++ } var o = n.match(/^(\w+)\s*(.*)$/), u = o[1] + r.eventNamespace, a = o[2]; if (a) { r.widget().delegate(a, u, s) } else { t.bind(u, s) } }) }, _off: function (e, t) { t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace; e.unbind(t).undelegate(t) }, _delay: function (e, t) { function n() { return (typeof e === "string" ? r[e] : e).apply(r, arguments) } var r = this; return setTimeout(n, t || 0) }, _hoverable: function (t) { this.hoverable = this.hoverable.add(t); this._on(t, { mouseenter: function (t) { e(t.currentTarget).addClass("ui-state-hover") }, mouseleave: function (t) { e(t.currentTarget).removeClass("ui-state-hover") } }) }, _focusable: function (t) { this.focusable = this.focusable.add(t); this._on(t, { focusin: function (t) { e(t.currentTarget).addClass("ui-state-focus") }, focusout: function (t) { e(t.currentTarget).removeClass("ui-state-focus") } }) }, _trigger: function (t, n, r) { var i, s, o = this.options[t]; r = r || {}; n = e.Event(n); n.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(); n.target = this.element[0]; s = n.originalEvent; if (s) { for (i in s) { if (!(i in n)) { n[i] = s[i] } } } this.element.trigger(n, r); return !(e.isFunction(o) && o.apply(this.element[0], [n].concat(r)) === false || n.isDefaultPrevented()) } }; e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, n) { e.Widget.prototype["_" + t] = function (r, i, s) { if (typeof i === "string") { i = { effect: i } } var o, u = !i ? t : i === true || typeof i === "number" ? n : i.effect || n; i = i || {}; if (typeof i === "number") { i = { duration: i } } o = !e.isEmptyObject(i); i.complete = s; if (i.delay) { r.delay(i.delay) } if (o && e.effects && (e.effects.effect[u] || e.uiBackCompat !== false && e.effects[u])) { r[t](i) } else if (u !== t && r[u]) { r[u](i.duration, i.easing, s) } else { r.queue(function (n) { e(this)[t](); if (s) { s.call(r[0]) } n() }) } } }); if (e.uiBackCompat !== false) { e.Widget.prototype._getCreateOptions = function () { return e.metadata && e.metadata.get(this.element[0])[this.widgetName] } } })(e); (function (e, t) { e.widget("mobile.widget", { _createWidget: function () { e.Widget.prototype._createWidget.apply(this, arguments); this._trigger("init") }, _getCreateOptions: function () { var n = this.element, r = {}; e.each(this.options, function (e) { var i = n.jqmData(e.replace(/[A-Z]/g, function (e) { return "-" + e.toLowerCase() })); if (i !== t) { r[e] = i } }); return r }, enhanceWithin: function (t, n) { this.enhance(e(this.options.initSelector, e(t)), n) }, enhance: function (t, n) { var r, i, s = e(t), o = this; s = e.mobile.enhanceable(s); if (n && s.length) { r = e.mobile.closestPageData(s); i = r && r.keepNativeSelector() || ""; s = s.not(i) } s[this.widgetName]() }, raise: function (e) { throw "Widget [" + this.widgetName + "]: " + e } }) })(e); (function (e, t) { e.extend(e.mobile, { loadingMessageTextVisible: r, loadingMessageTheme: r, loadingMessage: r, showPageLoadingMsg: function (t, n, r) { e.mobile.loading("show", t, n, r) }, hidePageLoadingMsg: function () { e.mobile.loading("hide") }, loading: function () { this.loaderWidget.loader.apply(this.loaderWidget, arguments) } }); var n = "ui-loader", i = e("html"), s = e(t); e.widget("mobile.loader", { options: { theme: "a", textVisible: false, html: "", text: "loading" }, defaultHtml: "<div class='" + n + "'>" + "<span class='ui-icon ui-icon-loading'></span>" + "<h1></h1>" + "</div>", fakeFixLoader: function () { var t = e("." + e.mobile.activeBtnClass).first(); this.element.css({ top: e.support.scrollTop && s.scrollTop() + s.height() / 2 || t.length && t.offset().top || 100 }) }, checkLoaderPosition: function () { var t = this.element.offset(), n = s.scrollTop(), r = e.mobile.getScreenHeight(); if (t.top < n || t.top - n > r) { this.element.addClass("ui-loader-fakefix"); this.fakeFixLoader(); s.unbind("scroll", this.checkLoaderPosition).bind("scroll", this.fakeFixLoader) } }, resetHtml: function () { this.element.html(e(this.defaultHtml).html()) }, show: function (t, o, u) { var a, f, l, c; this.resetHtml(); if (e.type(t) === "object") { c = e.extend({}, this.options, t); t = c.theme || e.mobile.loadingMessageTheme } else { c = this.options; t = t || e.mobile.loadingMessageTheme || c.theme } f = o || e.mobile.loadingMessage || c.text; i.addClass("ui-loading"); if (e.mobile.loadingMessage !== false || c.html) { if (e.mobile.loadingMessageTextVisible !== r) { a = e.mobile.loadingMessageTextVisible } else { a = c.textVisible } this.element.attr("class", n + " ui-corner-all ui-body-" + t + " ui-loader-" + (a || o || t.text ? "verbose" : "default") + (c.textonly || u ? " ui-loader-textonly" : "")); if (c.html) { this.element.html(c.html) } else { this.element.find("h1").text(f) } this.element.appendTo(e.mobile.pageContainer); this.checkLoaderPosition(); s.bind("scroll", e.proxy(this.checkLoaderPosition, this)) } }, hide: function () { i.removeClass("ui-loading"); if (e.mobile.loadingMessage) { this.element.removeClass("ui-loader-fakefix") } e(t).unbind("scroll", e.proxy(this.fakeFixLoader, this)); e(t).unbind("scroll", e.proxy(this.checkLoaderPosition, this)) } }); s.bind("pagecontainercreate", function () { e.mobile.loaderWidget = e.mobile.loaderWidget || e(e.mobile.loader.prototype.defaultHtml).loader() }) })(e, this); (function (e, t, n, r) { function x(e) { while (e && typeof e.originalEvent !== "undefined") { e = e.originalEvent } return e } function T(t, n) { var i = t.type, s, o, a, l, c, h, p, d, v; t = e.Event(t); t.type = n; s = t.originalEvent; o = e.event.props; if (i.search(/^(mouse|click)/) > -1) { o = f } if (s) { for (p = o.length, l; p;) { l = o[--p]; t[l] = s[l] } } if (i.search(/mouse(down|up)|click/) > -1 && !t.which) { t.which = 1 } if (i.search(/^touch/) !== -1) { a = x(s); i = a.touches; c = a.changedTouches; h = i && i.length ? i[0] : c && c.length ? c[0] : r; if (h) { for (d = 0, v = u.length; d < v; d++) { l = u[d]; t[l] = h[l] } } } return t } function N(t) { var n = {}, r, s; while (t) { r = e.data(t, i); for (s in r) { if (r[s]) { n[s] = n.hasVirtualBinding = true } } t = t.parentNode } return n } function C(t, n) { var r; while (t) { r = e.data(t, i); if (r && (!n || r[n])) { return t } t = t.parentNode } return null } function k() { g = false } function L() { g = true } function A() { E = 0; v.length = 0; m = false; L() } function O() { k() } function M() { _(); c = setTimeout(function () { c = 0; A() }, e.vmouse.resetTimerDuration) } function _() { if (c) { clearTimeout(c); c = 0 } } function D(t, n, r) { var i; if (r && r[t] || !r && C(n.target, t)) { i = T(n, t); e(n.target).trigger(i) } return i } function P(t) { var n = e.data(t.target, s); if (!m && (!E || E !== n)) { var r = D("v" + t.type, t); if (r) { if (r.isDefaultPrevented()) { t.preventDefault() } if (r.isPropagationStopped()) { t.stopPropagation() } if (r.isImmediatePropagationStopped()) { t.stopImmediatePropagation() } } } } function H(t) { var n = x(t).touches, r, i; if (n && n.length === 1) { r = t.target; i = N(r); if (i.hasVirtualBinding) { E = w++; e.data(r, s, E); _(); O(); d = false; var o = x(t).touches[0]; h = o.pageX; p = o.pageY; D("vmouseover", t, i); D("vmousedown", t, i) } } } function B(e) { if (g) { return } if (!d) { D("vmousecancel", e, N(e.target)) } d = true; M() } function j(t) { if (g) { return } var n = x(t).touches[0], r = d, i = e.vmouse.moveDistanceThreshold, s = N(t.target); d = d || Math.abs(n.pageX - h) > i || Math.abs(n.pageY - p) > i; if (d && !r) { D("vmousecancel", t, s) } D("vmousemove", t, s); M() } function F(e) { if (g) { return } L(); var t = N(e.target), n; D("vmouseup", e, t); if (!d) { var r = D("vclick", e, t); if (r && r.isDefaultPrevented()) { n = x(e).changedTouches[0]; v.push({ touchID: E, x: n.clientX, y: n.clientY }); m = true } } D("vmouseout", e, t); d = false; M() } function I(t) { var n = e.data(t, i), r; if (n) { for (r in n) { if (n[r]) { return true } } } return false } function q() { } function R(t) { var n = t.substr(1); return { setup: function (r, s) { if (!I(this)) { e.data(this, i, {}) } var o = e.data(this, i); o[t] = true; l[t] = (l[t] || 0) + 1; if (l[t] === 1) { b.bind(n, P) } e(this).bind(n, q); if (y) { l["touchstart"] = (l["touchstart"] || 0) + 1; if (l["touchstart"] === 1) { b.bind("touchstart", H).bind("touchend", F).bind("touchmove", j).bind("scroll", B) } } }, teardown: function (r, s) { --l[t]; if (!l[t]) { b.unbind(n, P) } if (y) { --l["touchstart"]; if (!l["touchstart"]) { b.unbind("touchstart", H).unbind("touchmove", j).unbind("touchend", F).unbind("scroll", B) } } var o = e(this), u = e.data(this, i); if (u) { u[t] = false } o.unbind(n, q); if (!I(this)) { o.removeData(i) } } } } var i = "virtualMouseBindings", s = "virtualTouchID", o = "vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" "), u = "clientX clientY pageX pageY screenX screenY".split(" "), a = e.event.mouseHooks ? e.event.mouseHooks.props : [], f = e.event.props.concat(a), l = {}, c = 0, h = 0, p = 0, d = false, v = [], m = false, g = false, y = "addEventListener" in n, b = e(n), w = 1, E = 0, S; e.vmouse = { moveDistanceThreshold: 10, clickDistanceThreshold: 10, resetTimerDuration: 1500 }; for (var U = 0; U < o.length; U++) { e.event.special[o[U]] = R(o[U]) } if (y) { n.addEventListener("click", function (t) { var n = v.length, r = t.target, i, o, u, a, f, l; if (n) { i = t.clientX; o = t.clientY; S = e.vmouse.clickDistanceThreshold; u = r; while (u) { for (a = 0; a < n; a++) { f = v[a]; l = 0; if (u === r && Math.abs(f.x - i) < S && Math.abs(f.y - o) < S || e.data(u, s) === f.touchID) { t.preventDefault(); t.stopPropagation(); return } } u = u.parentNode } } }, true) } })(e, t, n); (function (e, t) { var r = { touch: "ontouchend" in n }; e.mobile = e.mobile || {}; e.mobile.support = e.mobile.support || {}; e.extend(e.support, r); e.extend(e.mobile.support, r) })(e); (function (e, t, r) { function f(t, n, r) { var i = r.type; r.type = n; e.event.handle.call(t, r); r.type = i } e.each(("touchstart touchmove touchend " + "tap taphold " + "swipe swipeleft swiperight " + "scrollstart scrollstop").split(" "), function (t, n) { e.fn[n] = function (e) { return e ? this.bind(n, e) : this.trigger(n) }; if (e.attrFn) { e.attrFn[n] = true } }); var i = e.mobile.support.touch, s = "touchmove scroll", o = i ? "touchstart" : "mousedown", u = i ? "touchend" : "mouseup", a = i ? "touchmove" : "mousemove"; e.event.special.scrollstart = { enabled: true, setup: function () { function o(e, n) { r = n; f(t, r ? "scrollstart" : "scrollstop", e) } var t = this, n = e(t), r, i; n.bind(s, function (t) { if (!e.event.special.scrollstart.enabled) { return } if (!r) { o(t, true) } clearTimeout(i); i = setTimeout(function () { o(t, false) }, 50) }) } }; e.event.special.tap = { tapholdThreshold: 750, setup: function () { var t = this, r = e(t); r.bind("vmousedown", function (i) { function a() { clearTimeout(u) } function l() { a(); r.unbind("vclick", c).unbind("vmouseup", a); e(n).unbind("vmousecancel", l) } function c(e) { l(); if (s === e.target) { f(t, "tap", e) } } if (i.which && i.which !== 1) { return false } var s = i.target, o = i.originalEvent, u; r.bind("vmouseup", a).bind("vclick", c); e(n).bind("vmousecancel", l); u = setTimeout(function () { f(t, "taphold", e.Event("taphold", { target: s })) }, e.event.special.tap.tapholdThreshold) }) } }; e.event.special.swipe = { scrollSupressionThreshold: 30, durationThreshold: 1e3, horizontalDistanceThreshold: 30, verticalDistanceThreshold: 75, setup: function () { var t = this, n = e(t); n.bind(o, function (t) { function f(t) { if (!s) { return } var n = t.originalEvent.touches ? t.originalEvent.touches[0] : t; o = { time: (new Date).getTime(), coords: [n.pageX, n.pageY] }; if (Math.abs(s.coords[0] - o.coords[0]) > e.event.special.swipe.scrollSupressionThreshold) { t.preventDefault() } } var i = t.originalEvent.touches ? t.originalEvent.touches[0] : t, s = { time: (new Date).getTime(), coords: [i.pageX, i.pageY], origin: e(t.target) }, o; n.bind(a, f).one(u, function (t) { n.unbind(a, f); if (s && o) { if (o.time - s.time < e.event.special.swipe.durationThreshold && Math.abs(s.coords[0] - o.coords[0]) > e.event.special.swipe.horizontalDistanceThreshold && Math.abs(s.coords[1] - o.coords[1]) < e.event.special.swipe.verticalDistanceThreshold) { s.origin.trigger("swipe").trigger(s.coords[0] > o.coords[0] ? "swipeleft" : "swiperight") } } s = o = r }) }) } }; e.each({ scrollstop: "scrollstart", taphold: "tap", swipeleft: "swipe", swiperight: "swipe" }, function (t, n) { e.event.special[t] = { setup: function () { e(this).bind(n, e.noop) } } }) })(e, this); (function (e, n) { e.extend(e.support, { orientation: "orientation" in t && "onorientationchange" in t }) })(e); (function (e) { e.event.special.throttledresize = { setup: function () { e(this).bind("resize", n) }, teardown: function () { e(this).unbind("resize", n) } }; var t = 250, n = function () { s = (new Date).getTime(); o = s - r; if (o >= t) { r = s; e(this).trigger("throttledresize") } else { if (i) { clearTimeout(i) } i = setTimeout(n, t - o) } }, r = 0, i, s, o })(e); (function (e, t) { function d() { var e = o(); if (e !== u) { u = e; r.trigger(i) } } var r = e(t), i = "orientationchange", s, o, u, a, f, l = { 0: true, 180: true }; if (e.support.orientation) { var c = t.innerWidth || e(t).width(), h = t.innerHeight || e(t).height(), p = 50; a = c > h && c - h > p; f = l[t.orientation]; if (a && f || !a && !f) { l = { "-90": true, 90: true } } } e.event.special.orientationchange = e.extend({}, e.event.special.orientationchange, { setup: function () { if (e.support.orientation && !e.event.special.orientationchange.disabled) { return false } u = o(); r.bind("throttledresize", d) }, teardown: function () { if (e.support.orientation && !e.event.special.orientationchange.disabled) { return false } r.unbind("throttledresize", d) }, add: function (e) { var t = e.handler; e.handler = function (e) { e.orientation = o(); return t.apply(this, arguments) } } }); e.event.special.orientationchange.orientation = o = function () { var r = true, i = n.documentElement; if (e.support.orientation) { r = l[t.orientation] } else { r = i && i.clientWidth / i.clientHeight < 1.1 } return r ? "portrait" : "landscape" }; e.fn[i] = function (e) { return e ? this.bind(i, e) : this.trigger(i) }; if (e.attrFn) { e.attrFn[i] = true } })(e, this); (function (e, r) { var i = e(t), s = e("html"); e.mobile.media = function () { var t = {}, r = e("<div id='jquery-mediatest'></div>"), i = e("<body>").append(r); return function (e) { if (!(e in t)) { var o = n.createElement("style"), u = "@media " + e + " { #jquery-mediatest { position:absolute; } }"; o.type = "text/css"; if (o.styleSheet) { o.styleSheet.cssText = u } else { o.appendChild(n.createTextNode(u)) } s.prepend(i).prepend(o); t[e] = r.css("position") === "absolute"; i.add(o).remove() } return t[e] } }() })(e); (function (e, r) { function i(e) { var t = e.charAt(0).toUpperCase() + e.substr(1), n = (e + " " + u.join(t + " ") + t).split(" "); for (var i in n) { if (o[n[i]] !== r) { return true } } } function h(e, t, r) { var i = n.createElement("div"), s = function (e) { return e.charAt(0).toUpperCase() + e.substr(1) }, o = function (e) { return "-" + e.charAt(0).toLowerCase() + e.substr(1) + "-" }, a = function (n) { var r = o(n) + e + ": " + t + ";", u = s(n), a = u + s(e); i.setAttribute("style", r); if (!!i.style[a]) { l = true } }, f = r ? [r] : u, l; for (var c = 0; c < f.length; c++) { a(f[c]) } return !!l } function p() { var t = "transform-3d"; return h("perspective", "10px", "moz") || e.mobile.media("(-" + u.join("-" + t + "),(-") + "-" + t + "),(" + t + ")") } function d() { var t = location.protocol + "//" + location.host + location.pathname + "ui-dir/", n = e("head base"), r = null, i = "", o, u; if (!n.length) { n = r = e("<base>", { href: t }).appendTo("head") } else { i = n.attr("href") } o = e("<a href='testurl' />").prependTo(s); u = o[0].href; n[0].href = i || location.pathname; if (r) { r.remove() } return u.indexOf(t) === 0 } function v() { var e = n.createElement("x"), r = n.documentElement, i = t.getComputedStyle, s; if (!("pointerEvents" in e.style)) { return false } e.style.pointerEvents = "auto"; e.style.pointerEvents = "x"; r.appendChild(e); s = i && i(e, "").pointerEvents === "auto"; r.removeChild(e); return !!s } function m() { var e = n.createElement("div"); return typeof e.getBoundingClientRect !== "undefined" } var s = e("<body>").prependTo("html"), o = s[0].style, u = ["Webkit", "Moz", "O"], a = "palmGetResource" in t, f = t.opera, l = t.operamini && {}.toString.call(t.operamini) === "[object OperaMini]", c = t.blackberry && !i("-webkit-transform"); e.extend(e.mobile, { browser: {} }); e.mobile.browser.ie = function () { var e = 3, t = n.createElement("div"), r = t.all || []; do { t.innerHTML = "<!--[if gt IE " + ++e + "]><br><![endif]-->" } while (r[0]); return e > 4 ? e : !e }(); e.extend(e.support, { cssTransitions: "WebKitTransitionEvent" in t || h("transition", "height 100ms linear") && !f, pushState: "pushState" in history && "replaceState" in history, mediaquery: e.mobile.media("only all"), cssPseudoElement: !!i("content"), touchOverflow: !!i("overflowScrolling"), cssTransform3d: p(), boxShadow: !!i("boxShadow") && !c, scrollTop: ("pageXOffset" in t || "scrollTop" in n.documentElement || "scrollTop" in s[0]) && !a && !l, dynamicBaseTag: d(), cssPointerEvents: v(), boundingRect: m() }); s.remove(); var g = function () { var e = t.navigator.userAgent; return e.indexOf("Nokia") > -1 && (e.indexOf("Symbian/3") > -1 || e.indexOf("Series60/5") > -1) && e.indexOf("AppleWebKit") > -1 && e.match(/(BrowserNG|NokiaBrowser)\/7\.[0-3]/) }(); e.mobile.gradeA = function () { return (e.support.mediaquery || e.mobile.browser.ie && e.mobile.browser.ie >= 7) && (e.support.boundingRect || e.fn.jquery.match(/1\.[0-7+]\.[0-9+]?/) !== null) }; e.mobile.ajaxBlacklist = t.blackberry && !t.WebKitPoint || l || g; if (g) { e(function () { e("head link[rel='stylesheet']").attr("rel", "alternate stylesheet").attr("rel", "stylesheet") }) } if (!e.support.boxShadow) { e("html").addClass("ui-mobile-nosupport-boxshadow") } })(e); (function (e, t) { e.widget("mobile.page", e.mobile.widget, { options: { theme: "c", domCache: false, keepNativeDefault: ":jqmData(role='none'), :jqmData(role='nojs')" }, _create: function () { var e = this; if (e._trigger("beforecreate") === false) { return false } e.element.attr("tabindex", "0").addClass("ui-page ui-body-" + e.options.theme).bind("pagebeforehide", function () { e.removeContainerBackground() }).bind("pagebeforeshow", function () { e.setContainerBackground() }) }, removeContainerBackground: function () { e.mobile.pageContainer.removeClass("ui-overlay-" + e.mobile.getInheritedTheme(this.element.parent())) }, setContainerBackground: function (t) { if (this.options.theme) { e.mobile.pageContainer.addClass("ui-overlay-" + (t || this.options.theme)) } }, keepNativeSelector: function () { var t = this.options, n = t.keepNative && e.trim(t.keepNative); if (n && t.keepNative !== t.keepNativeDefault) { return [t.keepNative, t.keepNativeDefault].join(", ") } return t.keepNativeDefault } }) })(e); (function (e, t, r) { function l(e) { e = e || location.href; return "#" + e.replace(/^[^#]*#?(.*)$/, "$1") } var i = "hashchange", s = n, o, u = e.event.special, a = s.documentMode, f = "on" + i in t && (a === r || a > 7); e.fn[i] = function (e) { return e ? this.bind(i, e) : this.trigger(i) }; e.fn[i].delay = 50; u[i] = e.extend(u[i], { setup: function () { if (f) { return false } e(o.start) }, teardown: function () { if (f) { return false } e(o.stop) } }); o = function () { function p() { var n = l(), r = h(u); if (n !== u) { c(u = n, r); e(t).trigger(i) } else if (r !== u) { location.href = location.href.replace(/#.*/, "") + r } o = setTimeout(p, e.fn[i].delay) } var n = {}, o, u = l(), a = function (e) { return e }, c = a, h = a; n.start = function () { o || p() }; n.stop = function () { o && clearTimeout(o); o = r }; e.browser.msie && !f && function () { var t, r; n.start = function () { if (!t) { r = e.fn[i].src; r = r && r + l(); t = e('<iframe tabindex="-1" title="empty"/>').hide().one("load", function () { r || c(l()); p() }).attr("src", r || "javascript:0").insertAfter("body")[0].contentWindow; s.onpropertychange = function () { try { if (event.propertyName === "title") { t.document.title = s.title } } catch (e) { } } } }; n.stop = a; h = function () { return l(t.location.href) }; c = function (n, r) { var o = t.document, u = e.fn[i].domain; if (n !== r) { o.title = s.title; o.open(); u && o.write('<script>document.domain="' + u + '"</script>'); o.close(); t.location.hash = n } } }(); return n }() })(e, this); (function (e, t, n) { var r = function (r) { if (r === n) { r = true } return function (n, i, s, o) { var u = new e.Deferred, a = i ? " reverse" : "", f = e.mobile.urlHistory.getActive(), l = f.lastScroll || e.mobile.defaultHomeScroll, c = e.mobile.getScreenHeight(), h = e.mobile.maxTransitionWidth !== false && e(t).width() > e.mobile.maxTransitionWidth, p = !e.support.cssTransitions || h || !n || n === "none" || Math.max(e(t).scrollTop(), l) > e.mobile.getMaxScrollForTransition(), d = " ui-page-pre-in", v = function () { e.mobile.pageContainer.toggleClass("ui-mobile-viewport-transitioning viewport-" + n) }, m = function () { e.event.special.scrollstart.enabled = false; t.scrollTo(0, l); setTimeout(function () { e.event.special.scrollstart.enabled = true }, 150) }, g = function () { o.removeClass(e.mobile.activePageClass + " out in reverse " + n).height("") }, y = function () { if (!r) { b() } else { o.animationComplete(b) } o.height(c + e(t).scrollTop()).addClass(n + " out" + a) }, b = function () { if (o && r) { g() } w() }, w = function () { s.css("z-index", -10); s.addClass(e.mobile.activePageClass + d); e.mobile.focusPage(s); s.height(c + l); m(); s.css("z-index", ""); if (!p) { s.animationComplete(E) } s.removeClass(d).addClass(n + " in" + a); if (p) { E() } }, E = function () { if (!r) { if (o) { g() } } s.removeClass("out in reverse " + n).height(""); v(); if (e(t).scrollTop() !== l) { m() } u.resolve(n, i, s, o, true) }; v(); if (o && !p) { y() } else { b() } return u.promise() } }; var i = r(), s = r(false), o = function () { return e.mobile.getScreenHeight() * 3 }; e.mobile.defaultTransitionHandler = i; e.mobile.transitionHandlers = { "default": e.mobile.defaultTransitionHandler, sequential: i, simultaneous: s }; e.mobile.transitionFallbacks = {}; e.mobile._maybeDegradeTransition = function (t) { if (t && !e.support.cssTransform3d && e.mobile.transitionFallbacks[t]) { t = e.mobile.transitionFallbacks[t] } return t }; e.mobile.getMaxScrollForTransition = e.mobile.getMaxScrollForTransition || o })(e, this); (function (e, r) { function w(t) { if (!!a && (!a.closest("." + e.mobile.activePageClass).length || t)) { a.removeClass(e.mobile.activeBtnClass) } a = null } function E() { h = false; if (c.length > 0) { e.mobile.changePage.apply(null, c.pop()) } } function N(t, n, r, i) { if (n) { n.data("page")._trigger("beforehide", null, { nextPage: t }) } t.data("page")._trigger("beforeshow", null, { prevPage: n || e("") }); e.mobile.hidePageLoadingMsg(); r = e.mobile._maybeDegradeTransition(r); var s = e.mobile.transitionHandlers[r || "default"] || e.mobile.defaultTransitionHandler, o = s(r, i, t, n); o.done(function () { if (n) { n.data("page")._trigger("hide", null, { nextPage: t }) } t.data("page")._trigger("show", null, { prevPage: n || e("") }) }); return o } function C() { var t = e("." + e.mobile.activePageClass), n = parseFloat(t.css("padding-top")), r = parseFloat(t.css("padding-bottom")), i = parseFloat(t.css("border-top-width")), s = parseFloat(t.css("border-bottom-width")); t.css("min-height", y() - n - r - i - s) } function k(t, n) { if (n) { t.attr("data-" + e.mobile.ns + "role", n) } t.page() } function L(e) { while (e) { if (typeof e.nodeName === "string" && e.nodeName.toLowerCase() === "a") { break } e = e.parentNode } return e } function A(t) { var n = e(t).closest(".ui-page").jqmData("url"), r = m.hrefNoHash; if (!n || !u.isPath(n)) { n = r } return u.makeUrlAbsolute(n, r) } var i = e(t), s = e("html"), o = e("head"), u = { urlParseRE: /^(((([^:\/#\?]+:)?(?:(\/\/)((?:(([^:@\/#\?]+)(?:\:([^:@\/#\?]+))?)@)?(([^:\/#\?\]\[]+|\[[^\/\]@#?]+\])(?:\:([0-9]+))?))?)?)?((\/?(?:[^\/\?#]+\/+)*)([^\?#]*)))?(\?[^#]+)?)(#.*)?/, getLocation: function (e) { var t = e ? this.parseUrl(e) : location, n = this.parseUrl(e || location.href).hash; n = n === "#" ? "" : n; return t.protocol + "//" + t.host + t.pathname + t.search + n }, parseLocation: function () { return this.parseUrl(this.getLocation()) }, parseUrl: function (t) { if (e.type(t) === "object") { return t } var n = u.urlParseRE.exec(t || "") || []; return { href: n[0] || "", hrefNoHash: n[1] || "", hrefNoSearch: n[2] || "", domain: n[3] || "", protocol: n[4] || "", doubleSlash: n[5] || "", authority: n[6] || "", username: n[8] || "", password: n[9] || "", host: n[10] || "", hostname: n[11] || "", port: n[12] || "", pathname: n[13] || "", directory: n[14] || "", filename: n[15] || "", search: n[16] || "", hash: n[17] || "" } }, makePathAbsolute: function (e, t) { if (e && e.charAt(0) === "/") { return e } e = e || ""; t = t ? t.replace(/^\/|(\/[^\/]*|[^\/]+)$/g, "") : ""; var n = t ? t.split("/") : [], r = e.split("/"); for (var i = 0; i < r.length; i++) { var s = r[i]; switch (s) { case ".": break; case "..": if (n.length) { n.pop() } break; default: n.push(s); break } } return "/" + n.join("/") }, isSameDomain: function (e, t) { return u.parseUrl(e).domain === u.parseUrl(t).domain }, isRelativeUrl: function (e) { return u.parseUrl(e).protocol === "" }, isAbsoluteUrl: function (e) { return u.parseUrl(e).protocol !== "" }, makeUrlAbsolute: function (e, t) { if (!u.isRelativeUrl(e)) { return e } if (t === r) { t = m } var n = u.parseUrl(e), i = u.parseUrl(t), s = n.protocol || i.protocol, o = n.protocol ? n.doubleSlash : n.doubleSlash || i.doubleSlash, a = n.authority || i.authority, f = n.pathname !== "", l = u.makePathAbsolute(n.pathname || i.filename, i.pathname), c = n.search || !f && i.search || "", h = n.hash; return s + o + a + l + c + h }, addSearchParams: function (t, n) { var r = u.parseUrl(t), i = typeof n === "object" ? e.param(n) : n, s = r.search || "?"; return r.hrefNoSearch + s + (s.charAt(s.length - 1) !== "?" ? "&" : "") + i + (r.hash || "") }, convertUrlToDataUrl: function (e) { var n = u.parseUrl(e); if (u.isEmbeddedPage(n)) { return n.hash.split(p)[0].replace(/^#/, "") } else if (u.isSameDomain(n, m)) { return n.hrefNoHash.replace(m.domain, "").split(p)[0] } return t.decodeURIComponent(e) }, get: function (e) { if (e === r) { e = u.parseLocation().hash } return u.stripHash(e).replace(/[^\/]*\.[^\/*]+$/, "") }, getFilePath: function (t) { var n = "&" + e.mobile.subPageUrlKey; return t && t.split(n)[0].split(p)[0] }, set: function (e) { location.hash = e }, isPath: function (e) { return /\//.test(e) }, clean: function (e) { return e.replace(m.domain, "") }, stripHash: function (e) { return e.replace(/^#/, "") }, cleanHash: function (e) { return u.stripHash(e.replace(/\?.*$/, "").replace(p, "")) }, isHashValid: function (e) { return /^#[^#]+$/.test(e) }, isExternal: function (e) { var t = u.parseUrl(e); return t.protocol && t.domain !== v.domain ? true : false }, hasProtocol: function (e) { return /^(:?\w+:)/.test(e) }, isFirstPageUrl: function (t) { var n = u.parseUrl(u.makeUrlAbsolute(t, m)), i = n.hrefNoHash === v.hrefNoHash || g && n.hrefNoHash === m.hrefNoHash, s = e.mobile.firstPage, o = s && s[0] ? s[0].id : r; return i && (!n.hash || n.hash === "#" || o && n.hash.replace(/^#/, "") === o) }, isEmbeddedPage: function (e) { var t = u.parseUrl(e); if (t.protocol !== "") { return t.hash && (t.hrefNoHash === v.hrefNoHash || g && t.hrefNoHash === m.hrefNoHash) } return /^#/.test(t.href) }, isPermittedCrossDomainRequest: function (t, n) { return e.mobile.allowCrossDomainPages && t.protocol === "file:" && n.search(/^https?:/) !== -1 } }, a = null, f = { stack: [], activeIndex: 0, getActive: function () { return f.stack[f.activeIndex] }, getPrev: function () { return f.stack[f.activeIndex - 1] }, getNext: function () { return f.stack[f.activeIndex + 1] }, addNew: function (e, t, n, r, i) { if (f.getNext()) { f.clearForward() } f.stack.push({ url: e, transition: t, title: n, pageUrl: r, role: i }); f.activeIndex = f.stack.length - 1 }, clearForward: function () { f.stack = f.stack.slice(0, f.activeIndex + 1) }, directHashChange: function (t) { var n, i, s, o = this.getActive(); e.each(f.stack, function (e, r) { if (decodeURIComponent(t.currentUrl) === decodeURIComponent(r.url)) { n = e < f.activeIndex; i = !n; s = e } }); this.activeIndex = s !== r ? s : this.activeIndex; if (n) { (t.either || t.isBack)(true) } else if (i) { (t.either || t.isForward)(false) } }, ignoreNextHashChange: false }, l = "[tabindex],a,button:visible,select:visible,input", c = [], h = false, p = "&ui-state=dialog", d = o.children("base"), v = u.parseLocation(), m = d.length ? u.parseUrl(u.makeUrlAbsolute(d.attr("href"), v.href)) : v, g = v.hrefNoHash !== m.hrefNoHash, y = e.mobile.getScreenHeight; var b = e.support.dynamicBaseTag ? { element: d.length ? d : e("<base>", { href: m.hrefNoHash }).prependTo(o), set: function (e) { b.element.attr("href", u.makeUrlAbsolute(e, m)) }, reset: function () { b.element.attr("href", m.hrefNoHash) } } : r; e.mobile.back = function () { var e = t.navigator; if (this.phonegapNavigationEnabled && e && e.app && e.app.backHistory) { e.app.backHistory() } else { t.history.back() } }; e.mobile.focusPage = function (e) { var t = e.find("[autofocus]"), n = e.find(".ui-title:eq(0)"); if (t.length) { t.focus(); return } if (n.length) { n.focus() } else { e.focus() } }; var S = true, x, T; x = function () { if (!S) { return } var t = e.mobile.urlHistory.getActive(); if (t) { var n = i.scrollTop(); t.lastScroll = n < e.mobile.minScrollBack ? e.mobile.defaultHomeScroll : n } }; T = function () { setTimeout(x, 100) }; i.bind(e.support.pushState ? "popstate" : "hashchange", function () { S = false }); i.one(e.support.pushState ? "popstate" : "hashchange", function () { S = true }); i.one("pagecontainercreate", function () { e.mobile.pageContainer.bind("pagechange", function () { S = true; i.unbind("scrollstop", T); i.bind("scrollstop", T) }) }); i.bind("scrollstop", T); e.mobile._maybeDegradeTransition = e.mobile._maybeDegradeTransition || function (e) { return e }; e.fn.animationComplete = function (t) { if (e.support.cssTransitions) { return e(this).one("webkitAnimationEnd animationend", t) } else { setTimeout(t, 0); return e(this) } }; e.mobile.path = u; e.mobile.base = b; e.mobile.urlHistory = f; e.mobile.dialogHashKey = p; e.mobile.allowCrossDomainPages = false; e.mobile.getDocumentUrl = function (t) { return t ? e.extend({}, v) : v.href }; e.mobile.getDocumentBase = function (t) { return t ? e.extend({}, m) : m.href }; e.mobile._bindPageRemove = function () { var t = e(this); if (!t.data("page").options.domCache && t.is(":jqmData(external-page='true')")) { t.bind("pagehide.remove", function () { var t = e(this), n = new e.Event("pageremove"); t.trigger(n); if (!n.isDefaultPrevented()) { t.removeWithDependents() } }) } }; e.mobile.loadPage = function (t, n) { var i = e.Deferred(), s = e.extend({}, e.mobile.loadPage.defaults, n), o = null, a = null, f = function () { var t = e.mobile.activePage && A(e.mobile.activePage); return t || m.hrefNoHash }, l = u.makeUrlAbsolute(t, f()); if (s.data && s.type === "get") { l = u.addSearchParams(l, s.data); s.data = r } if (s.data && s.type === "post") { s.reloadPage = true } var c = u.getFilePath(l), h = u.convertUrlToDataUrl(l); s.pageContainer = s.pageContainer || e.mobile.pageContainer; o = s.pageContainer.children("[data-" + e.mobile.ns + "url='" + h + "']"); if (o.length === 0 && h && !u.isPath(h)) { o = s.pageContainer.children("#" + h).attr("data-" + e.mobile.ns + "url", h).jqmData("url", h) } if (o.length === 0) { if (e.mobile.firstPage && u.isFirstPageUrl(c)) { if (e.mobile.firstPage.parent().length) { o = e(e.mobile.firstPage) } } else if (u.isEmbeddedPage(c)) { i.reject(l, n); return i.promise() } } if (o.length) { if (!s.reloadPage) { k(o, s.role); i.resolve(l, n, o); return i.promise() } a = o } var p = s.pageContainer, d = new e.Event("pagebeforeload"), g = { url: t, absUrl: l, dataUrl: h, deferred: i, options: s }; p.trigger(d, g); if (d.isDefaultPrevented()) { return i.promise() } if (s.showLoadMsg) { var y = setTimeout(function () { e.mobile.showPageLoadingMsg() }, s.loadMsgDelay), w = function () { clearTimeout(y); e.mobile.hidePageLoadingMsg() } } if (b) { b.reset() } if (!(e.mobile.allowCrossDomainPages || u.isSameDomain(v, l))) { i.reject(l, n) } else { e.ajax({ url: c, type: s.type, data: s.data, dataType: "html", success: function (r, f, p) { var d = e("<div></div>"), v = r.match(/<title[^>]*>([^<]*)/) && RegExp.$1, m = new RegExp("(<[^>]+\\bdata-" + e.mobile.ns + "role=[\"']?page[\"']?[^>]*>)"), y = new RegExp("\\bdata-" + e.mobile.ns + "url=[\"']?([^\"'>]*)[\"']?"); if (m.test(r) && RegExp.$1 && y.test(RegExp.$1) && RegExp.$1) { t = c = u.getFilePath(e("<div>" + RegExp.$1 + "</div>").text()) } if (b) { b.set(c) } d.get(0).innerHTML = r; o = d.find(":jqmData(role='page'), :jqmData(role='dialog')").first(); if (!o.length) { o = e("<div data-" + e.mobile.ns + "role='page'>" + r.split(/<\/?body[^>]*>/gmi)[1] + "</div>") } if (v && !o.jqmData("title")) { if (~v.indexOf("&")) { v = e("<div>" + v + "</div>").text() } o.jqmData("title", v) } if (!e.support.dynamicBaseTag) { var E = u.get(c); o.find("[src], link[href], a[rel='external'], :jqmData(ajax='false'), a[target]").each(function () { var t = e(this).is("[href]") ? "href" : e(this).is("[src]") ? "src" : "action", n = e(this).attr(t); n = n.replace(location.protocol + "//" + location.host + location.pathname, ""); if (!/^(\w+:|#|\/)/.test(n)) { e(this).attr(t, E + n) } }) } o.attr("data-" + e.mobile.ns + "url", u.convertUrlToDataUrl(c)).attr("data-" + e.mobile.ns + "external-page", true).appendTo(s.pageContainer); o.one("pagecreate", e.mobile._bindPageRemove); k(o, s.role); if (l.indexOf("&" + e.mobile.subPageUrlKey) > -1) { o = s.pageContainer.children("[data-" + e.mobile.ns + "url='" + h + "']") } if (s.showLoadMsg) { w() } g.xhr = p; g.textStatus = f; g.page = o; s.pageContainer.trigger("pageload", g); i.resolve(l, n, o, a) }, error: function (t, r, o) { if (b) { b.set(u.get()) } g.xhr = t; g.textStatus = r; g.errorThrown = o; var a = new e.Event("pageloadfailed"); s.pageContainer.trigger(a, g); if (a.isDefaultPrevented()) { return } if (s.showLoadMsg) { w(); e.mobile.showPageLoadingMsg(e.mobile.pageLoadErrorMessageTheme, e.mobile.pageLoadErrorMessage, true); setTimeout(e.mobile.hidePageLoadingMsg, 1500) } i.reject(l, n) } }) } return i.promise() }; e.mobile.loadPage.defaults = { type: "get", data: r, reloadPage: false, role: r, showLoadMsg: false, pageContainer: r, loadMsgDelay: 50 }; e.mobile.changePage = function (t, i) { if (h) { c.unshift(arguments); return } var s = e.extend({}, e.mobile.changePage.defaults, i); s.pageContainer = s.pageContainer || e.mobile.pageContainer; s.fromPage = s.fromPage || e.mobile.activePage; var o = s.pageContainer, a = new e.Event("pagebeforechange"), l = { toPage: t, options: s }; o.trigger(a, l); if (a.isDefaultPrevented()) { return } t = l.toPage; h = true; if (typeof t === "string") { e.mobile.loadPage(t, s).done(function (t, n, r, i) { h = false; n.duplicateCachedPage = i; e.mobile.changePage(r, n) }).fail(function (e, t) { h = false; w(true); E(); s.pageContainer.trigger("pagechangefailed", l) }); return } if (t[0] === e.mobile.firstPage[0] && !s.dataUrl) { s.dataUrl = v.hrefNoHash } var d = s.fromPage, m = s.dataUrl && u.convertUrlToDataUrl(s.dataUrl) || t.jqmData("url"), g = m, y = u.getFilePath(m), b = f.getActive(), S = f.activeIndex === 0, x = 0, T = n.title, C = s.role === "dialog" || t.jqmData("role") === "dialog"; if (d && d[0] === t[0] && !s.allowSamePageTransition) { h = false; o.trigger("pagechange", l); if (s.fromHashChange) { f.directHashChange({ currentUrl: m, isBack: function () { }, isForward: function () { } }) } return } k(t, s.role); if (s.fromHashChange) { f.directHashChange({ currentUrl: m, isBack: function () { x = -1 }, isForward: function () { x = 1 } }) } try { if (n.activeElement && n.activeElement.nodeName.toLowerCase() !== "body") { e(n.activeElement).blur() } else { e("input:focus, textarea:focus, select:focus").blur() } } catch (L) { } var A = false; if (C && b) { if (b.url.indexOf(p) > -1 && !e.mobile.activePage.is(".ui-dialog")) { s.changeHash = false; A = true } m = (b.url || "") + (A ? "" : p); if (f.activeIndex === 0 && m === f.initialDst) { m += p } } if (s.changeHash !== false && m) { f.ignoreNextHashChange = true; u.set(m) } var O = !b ? T : t.jqmData("title") || t.children(":jqmData(role='header')").find(".ui-title").getEncodedText(); if (!!O && T === n.title) { T = O } if (!t.jqmData("title")) { t.jqmData("title", T) } s.transition = s.transition || (x && !S ? b.transition : r) || (C ? e.mobile.defaultDialogTransition : e.mobile.defaultPageTransition); if (!x) { if (A) { f.activeIndex = Math.max(0, f.activeIndex - 1) } f.addNew(m, s.transition, T, g, s.role) } n.title = f.getActive().title; e.mobile.activePage = t; s.reverse = s.reverse || x < 0; N(t, d, s.transition, s.reverse).done(function (n, r, i, u, a) { w(); if (s.duplicateCachedPage) { s.duplicateCachedPage.remove() } if (!a) { e.mobile.focusPage(t) } E(); o.trigger("pagechange", l) }) }; e.mobile.changePage.defaults = { transition: r, reverse: false, changeHash: true, fromHashChange: false, role: r, duplicateCachedPage: r, pageContainer: r, showLoadMsg: true, dataUrl: r, fromPage: r, allowSamePageTransition: false }; e.mobile.navreadyDeferred = e.Deferred(); e.mobile.navreadyDeferred.done(function () { e(n).delegate("form", "submit", function (t) { var n = e(this); if (!e.mobile.ajaxEnabled || n.is(":jqmData(ajax='false')") || !n.jqmHijackable().length) { return } var r = n.attr("method"), i = n.attr("target"), s = n.attr("action"); if (!s) { s = A(n); if (s === m.hrefNoHash) { s = v.hrefNoSearch } } s = u.makeUrlAbsolute(s, A(n)); if (u.isExternal(s) && !u.isPermittedCrossDomainRequest(v, s) || i) { return } e.mobile.changePage(s, { type: r && r.length && r.toLowerCase() || "get", data: n.serialize(), transition: n.jqmData("transition"), reverse: n.jqmData("direction") === "reverse", reloadPage: true }); t.preventDefault() }); e(n).bind("vclick", function (t) { if (t.which > 1 || !e.mobile.linkBindingEnabled) { return } var n = L(t.target); if (!e(n).jqmHijackable().length) { return } if (n) { if (u.parseUrl(n.getAttribute("href") || "#").hash !== "#") { w(true); a = e(n).closest(".ui-btn").not(".ui-disabled"); a.addClass(e.mobile.activeBtnClass) } } }); e(n).bind("click", function (n) { if (!e.mobile.linkBindingEnabled) { return } var i = L(n.target), s = e(i), o; if (!i || n.which > 1 || !s.jqmHijackable().length) { return } o = function () { t.setTimeout(function () { w(true) }, 200) }; if (s.is(":jqmData(rel='back')")) { e.mobile.back(); return false } var a = A(s), f = u.makeUrlAbsolute(s.attr("href") || "#", a); if (!e.mobile.ajaxEnabled && !u.isEmbeddedPage(f)) { o(); return } if (f.search("#") !== -1) { f = f.replace(/[^#]*#/, ""); if (!f) { n.preventDefault(); return } else if (u.isPath(f)) { f = u.makeUrlAbsolute(f, a) } else { f = u.makeUrlAbsolute("#" + f, v.hrefNoHash) } } var l = s.is("[rel='external']") || s.is(":jqmData(ajax='false')") || s.is("[target]"), c = l || u.isExternal(f) && !u.isPermittedCrossDomainRequest(v, f); if (c) { o(); return } var h = s.jqmData("transition"), p = s.jqmData("direction") === "reverse" || s.jqmData("back"), d = s.attr("data-" + e.mobile.ns + "rel") || r; e.mobile.changePage(f, { transition: h, reverse: p, role: d, link: s }); n.preventDefault() }); e(n).delegate(".ui-page", "pageshow.prefetch", function () { var t = []; e(this).find("a:jqmData(prefetch)").each(function () { var n = e(this), r = n.attr("href"); if (r && e.inArray(r, t) === -1) { t.push(r); e.mobile.loadPage(r, { role: n.attr("data-" + e.mobile.ns + "rel") }) } }) }); e.mobile._handleHashChange = function (n) { var i = u.stripHash(n), s = e.mobile.urlHistory.stack.length === 0 ? "none" : r, o = new e.Event("navigate"), a = { transition: s, changeHash: false, fromHashChange: true }; if (0 === f.stack.length) { f.initialDst = i } e.mobile.pageContainer.trigger(o); if (o.isDefaultPrevented()) { return } if (!e.mobile.hashListeningEnabled || f.ignoreNextHashChange) { f.ignoreNextHashChange = false; return } if (f.stack.length > 1 && i.indexOf(p) > -1 && f.initialDst !== i) { if (!e.mobile.activePage.is(".ui-dialog")) { f.directHashChange({ currentUrl: i, isBack: function () { e.mobile.back() }, isForward: function () { t.history.forward() } }); return } else { f.directHashChange({ currentUrl: i, either: function (t) { var n = e.mobile.urlHistory.getActive(); i = n.pageUrl; e.extend(a, { role: n.role, transition: n.transition, reverse: t }) } }) } } if (i) { i = typeof i === "string" && !u.isPath(i) ? u.makeUrlAbsolute("#" + i, m) : i; if (i === u.makeUrlAbsolute("#" + f.initialDst, m) && f.stack.length && f.stack[0].url !== f.initialDst.replace(p, "")) { i = e.mobile.firstPage } e.mobile.changePage(i, a) } else { e.mobile.changePage(e.mobile.firstPage, a) } }; i.bind("hashchange", function (t, n) { e.mobile._handleHashChange(u.parseLocation().hash) }); e(n).bind("pageshow", C); e(t).bind("throttledresize", C) }) })(e); (function (e, t) { var i = {}, s = i, o = e(t), u = e.mobile.path.parseLocation(), a = e.Deferred(), f = e.Deferred(); e(n).ready(e.proxy(f, "resolve")); e(n).one("mobileinit", e.proxy(a, "resolve")); e.extend(i, { initialFilePath: function () { return u.pathname + u.search }(), hashChangeTimeout: 200, hashChangeEnableTimer: r, initialHref: u.hrefNoHash, state: function () { return { hash: e.mobile.path.parseLocation().hash || "#" + s.initialFilePath, title: n.title, initialHref: s.initialHref } }, resetUIKeys: function (t) { var n = e.mobile.dialogHashKey, r = "&" + e.mobile.subPageUrlKey, i = t.indexOf(n); if (i > -1) { t = t.slice(0, i) + "#" + t.slice(i) } else if (t.indexOf(r) > -1) { t = t.split(r).join("#" + r) } return t }, nextHashChangePrevented: function (t) { e.mobile.urlHistory.ignoreNextHashChange = t; s.onHashChangeDisabled = t }, onHashChange: function (t) { if (s.onHashChangeDisabled) { return } var r, i, o = e.mobile.path.parseLocation().hash, u = e.mobile.path.isPath(o), a = u ? e.mobile.path.getLocation() : e.mobile.getDocumentUrl(); o = u ? o.replace("#", "") : o; i = s.state(); r = e.mobile.path.makeUrlAbsolute(o, a); if (u) { r = s.resetUIKeys(r) } history.replaceState(i, n.title, r) }, onPopState: function (t) { var n = t.originalEvent.state, r, i, o; if (n) { clearTimeout(s.hashChangeEnableTimer); s.nextHashChangePrevented(false); e.mobile._handleHashChange(n.hash); s.nextHashChangePrevented(true); s.hashChangeEnableTimer = setTimeout(function () { s.nextHashChangePrevented(false) }, s.hashChangeTimeout) } }, init: function () { o.bind("hashchange", s.onHashChange); o.bind("popstate", s.onPopState); if (location.hash === "") { history.replaceState(s.state(), n.title, e.mobile.path.getLocation()) } } }); e.when(f, a, e.mobile.navreadyDeferred).done(function () { if (e.mobile.pushStateEnabled && e.support.pushState) { i.init() } }) })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.flip = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.flow = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.pop = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionHandlers.slide = e.mobile.transitionHandlers.simultaneous; e.mobile.transitionFallbacks.slide = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.slidedown = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.slidefade = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.slideup = "fade" })(e, this); (function (e, t, n) { e.mobile.transitionFallbacks.turn = "fade" })(e, this); (function (e, t) { e.mobile.page.prototype.options.degradeInputs = { color: false, date: false, datetime: false, "datetime-local": false, email: false, month: false, number: false, range: "number", search: "text", tel: false, time: false, url: false, week: false }; e(n).bind("pagecreate create", function (t) { var n = e.mobile.closestPageData(e(t.target)), r; if (!n) { return } r = n.options; e(t.target).find("input").not(n.keepNativeSelector()).each(function () { var t = e(this), n = this.getAttribute("type"), i = r.degradeInputs[n] || "text"; if (r.degradeInputs[n]) { var s = e("<div>").html(t.clone()).html(), o = s.indexOf(" type=") > -1, u = o ? /\s+type=["']?\w+['"]?/ : /\/?>/, a = ' type="' + i + '" data-' + e.mobile.ns + 'type="' + n + '"' + (o ? "" : ">"); t.replaceWith(s.replace(u, a)) } }) }) })(e); (function (e, t, r) { e.widget("mobile.dialog", e.mobile.widget, { options: { closeBtnText: "Close", overlayTheme: "a", initSelector: ":jqmData(role='dialog')" }, _create: function () { var t = this, n = this.element, r = e("<a href='#' data-" + e.mobile.ns + "icon='delete' data-" + e.mobile.ns + "iconpos='notext'>" + this.options.closeBtnText + "</a>"), i = e("<div/>", { role: "dialog", "class": "ui-dialog-contain ui-corner-all ui-overlay-shadow" }); n.addClass("ui-dialog ui-overlay-" + this.options.overlayTheme); n.wrapInner(i).children().find(":jqmData(role='header')").prepend(r).end().children(":first-child").addClass("ui-corner-top").end().children(":last-child").addClass("ui-corner-bottom"); r.bind("click", function () { t.close() }); n.bind("vclick submit", function (t) { var n = e(t.target).closest(t.type === "vclick" ? "a" : "form"), r; if (n.length && !n.jqmData("transition")) { r = e.mobile.urlHistory.getActive() || {}; n.attr("data-" + e.mobile.ns + "transition", r.transition || e.mobile.defaultDialogTransition).attr("data-" + e.mobile.ns + "direction", "reverse") } }).bind("pagehide", function (t, n) { e(this).find("." + e.mobile.activeBtnClass).not(".ui-slider-bg").removeClass(e.mobile.activeBtnClass) }).bind("pagebeforeshow", function () { t._isCloseable = true; if (t.options.overlayTheme) { t.element.page("removeContainerBackground").page("setContainerBackground", t.options.overlayTheme) } }) }, close: function () { var t; if (this._isCloseable) { this._isCloseable = false; if (e.mobile.hashListeningEnabled) { e.mobile.back() } else { t = e.mobile.urlHistory.getPrev().url; if (!e.mobile.path.isPath(t)) { t = e.mobile.path.makeUrlAbsolute("#" + t) } e.mobile.changePage(t, { changeHash: false, fromHashChange: true }) } } } }); e(n).delegate(e.mobile.dialog.prototype.options.initSelector, "pagecreate", function () { e.mobile.dialog.prototype.enhance(this) }) })(e, this); (function (e, t) { e.mobile.page.prototype.options.backBtnText = "Back"; e.mobile.page.prototype.options.addBackBtn = false; e.mobile.page.prototype.options.backBtnTheme = null; e.mobile.page.prototype.options.headerTheme = "a"; e.mobile.page.prototype.options.footerTheme = "a"; e.mobile.page.prototype.options.contentTheme = null; e(n).bind("pagecreate", function (t) { var n = e(t.target), r = n.data("page").options, i = n.jqmData("role"), s = r.theme; e(":jqmData(role='header'), :jqmData(role='footer'), :jqmData(role='content')", n).jqmEnhanceable().each(function () { var t = e(this), u = t.jqmData("role"), a = t.jqmData("theme"), f = a || r.contentTheme || i === "dialog" && s, l, c, h, p; t.addClass("ui-" + u); if (u === "header" || u === "footer") { var d = a || (u === "header" ? r.headerTheme : r.footerTheme) || s; t.addClass("ui-bar-" + d).attr("role", u === "header" ? "banner" : "contentinfo"); if (u === "header") { l = t.children("a, button"); c = l.hasClass("ui-btn-left"); h = l.hasClass("ui-btn-right"); c = c || l.eq(0).not(".ui-btn-right").addClass("ui-btn-left").length; h = h || l.eq(1).addClass("ui-btn-right").length } if (r.addBackBtn && u === "header" && e(".ui-page").length > 1 && n.jqmData("url") !== e.mobile.path.stripHash(location.hash) && !c) { p = e("<a href='javascript:void(0);' class='ui-btn-left' data-" + e.mobile.ns + "rel='back' data-" + e.mobile.ns + "icon='arrow-l'>" + r.backBtnText + "</a>").attr("data-" + e.mobile.ns + "theme", r.backBtnTheme || d).prependTo(t) } t.children("h1, h2, h3, h4, h5, h6").addClass("ui-title").attr({ role: "heading", "aria-level": "1" }) } else if (u === "content") { if (f) { t.addClass("ui-body-" + f) } t.attr("role", "main") } }) }) })(e); (function (e, t) { e.fn.fieldcontain = function (e) { return this.addClass("ui-field-contain ui-body ui-br").contents().filter(function () { return this.nodeType === 3 && !/\S/.test(this.nodeValue) }).remove() }; e(n).bind("pagecreate create", function (t) { e(":jqmData(role='fieldcontain')", t.target).jqmEnhanceable().fieldcontain() }) })(e); (function (e, t) { e.fn.grid = function (t) { return this.each(function () { var n = e(this), r = e.extend({ grid: null }, t), i = n.children(), s = { solo: 1, a: 2, b: 3, c: 4, d: 5 }, o = r.grid, u; if (!o) { if (i.length <= 5) { for (var a in s) { if (s[a] === i.length) { o = a } } } else { o = "a"; n.addClass("ui-grid-duo") } } u = s[o]; n.addClass("ui-grid-" + o); i.filter(":nth-child(" + u + "n+1)").addClass("ui-block-a"); if (u > 1) { i.filter(":nth-child(" + u + "n+2)").addClass("ui-block-b") } if (u > 2) { i.filter(":nth-child(" + u + "n+3)").addClass("ui-block-c") } if (u > 3) { i.filter(":nth-child(" + u + "n+4)").addClass("ui-block-d") } if (u > 4) { i.filter(":nth-child(" + u + "n+5)").addClass("ui-block-e") } }) } })(e); (function (e, t) { e(n).bind("pagecreate create", function (t) { e(":jqmData(role='nojs')", t.target).addClass("ui-nojs") }) })(e); (function (e, t) { function r(e) { var t; while (e) { t = typeof e.className === "string" && e.className + " "; if (t && t.indexOf("ui-btn ") > -1 && t.indexOf("ui-disabled ") < 0) { break } e = e.parentNode } return e } e.fn.buttonMarkup = function (r) { var s = this, o = function (t, n) { f.setAttribute("data-" + e.mobile.ns + t, n); a.jqmData(t, n) }; r = r && e.type(r) === "object" ? r : {}; for (var u = 0; u < s.length; u++) { var a = s.eq(u), f = a[0], l = e.extend({}, e.fn.buttonMarkup.defaults, { icon: r.icon !== t ? r.icon : a.jqmData("icon"), iconpos: r.iconpos !== t ? r.iconpos : a.jqmData("iconpos"), theme: r.theme !== t ? r.theme : a.jqmData("theme") || e.mobile.getInheritedTheme(a, "c"), inline: r.inline !== t ? r.inline : a.jqmData("inline"), shadow: r.shadow !== t ? r.shadow : a.jqmData("shadow"), corners: r.corners !== t ? r.corners : a.jqmData("corners"), iconshadow: r.iconshadow !== t ? r.iconshadow : a.jqmData("iconshadow"), mini: r.mini !== t ? r.mini : a.jqmData("mini") }, r), c = "ui-btn-inner", h = "ui-btn-text", p, d, v, m, g, y; e.each(l, o); if (a.jqmData("rel") === "popup" && a.attr("href")) { f.setAttribute("aria-haspopup", true); f.setAttribute("aria-owns", f.getAttribute("href")) } y = e.data(f.tagName === "INPUT" || f.tagName === "BUTTON" ? f.parentNode : f, "buttonElements"); if (y) { f = y.outer; a = e(f); v = y.inner; m = y.text; e(y.icon).remove(); y.icon = null } else { v = n.createElement(l.wrapperEls); m = n.createElement(l.wrapperEls) } g = l.icon ? n.createElement("span") : null; if (i && !y) { i() } if (!l.theme) { l.theme = e.mobile.getInheritedTheme(a, "c") } p = "ui-btn ui-btn-up-" + l.theme; p += l.shadow ? " ui-shadow" : ""; p += l.corners ? " ui-btn-corner-all" : ""; if (l.mini !== t) { p += l.mini === true ? " ui-mini" : " ui-fullsize" } if (l.inline !== t) { p += l.inline === true ? " ui-btn-inline" : " ui-btn-block" } if (l.icon) { l.icon = "ui-icon-" + l.icon; l.iconpos = l.iconpos || "left"; d = "ui-icon " + l.icon; if (l.iconshadow) { d += " ui-icon-shadow" } } if (l.iconpos) { p += " ui-btn-icon-" + l.iconpos; if (l.iconpos === "notext" && !a.attr("title")) { a.attr("title", a.getEncodedText()) } } c += l.corners ? " ui-btn-corner-all" : ""; if (l.iconpos && l.iconpos === "notext" && !a.attr("title")) { a.attr("title", a.getEncodedText()) } if (y) { a.removeClass(y.bcls || "") } a.removeClass("ui-link").addClass(p); v.className = c; m.className = h; if (!y) { v.appendChild(m) } if (g) { g.className = d; if (!(y && y.icon)) { g.innerHTML = "&#160;"; v.appendChild(g) } } while (f.firstChild && !y) { m.appendChild(f.firstChild) } if (!y) { f.appendChild(v) } y = { bcls: p, outer: f, inner: v, text: m, icon: g }; e.data(f, "buttonElements", y); e.data(v, "buttonElements", y); e.data(m, "buttonElements", y); if (g) { e.data(g, "buttonElements", y) } } return this }; e.fn.buttonMarkup.defaults = { corners: true, shadow: true, iconshadow: true, wrapperEls: "span" }; var i = function () { var t = e.mobile.buttonMarkup.hoverDelay, s, o; e(n).bind({ "vmousedown vmousecancel vmouseup vmouseover vmouseout focus blur scrollstart": function (n) { var i, u = e(r(n.target)), a = n.originalEvent && /^touch/.test(n.originalEvent.type), f = n.type; if (u.length) { i = u.attr("data-" + e.mobile.ns + "theme"); if (f === "vmousedown") { if (a) { s = setTimeout(function () { u.removeClass("ui-btn-up-" + i).addClass("ui-btn-down-" + i) }, t) } else { u.removeClass("ui-btn-up-" + i).addClass("ui-btn-down-" + i) } } else if (f === "vmousecancel" || f === "vmouseup") { u.removeClass("ui-btn-down-" + i).addClass("ui-btn-up-" + i) } else if (f === "vmouseover" || f === "focus") { if (a) { o = setTimeout(function () { u.removeClass("ui-btn-up-" + i).addClass("ui-btn-hover-" + i) }, t) } else { u.removeClass("ui-btn-up-" + i).addClass("ui-btn-hover-" + i) } } else if (f === "vmouseout" || f === "blur" || f === "scrollstart") { u.removeClass("ui-btn-hover-" + i + " ui-btn-down-" + i).addClass("ui-btn-up-" + i); if (s) { clearTimeout(s) } if (o) { clearTimeout(o) } } } }, "focusin focus": function (t) { e(r(t.target)).addClass(e.mobile.focusClass) }, "focusout blur": function (t) { e(r(t.target)).removeClass(e.mobile.focusClass) } }); i = null }; e(n).bind("pagecreate create", function (t) { e(":jqmData(role='button'), .ui-bar > a, .ui-header > a, .ui-footer > a, .ui-bar > :jqmData(role='controlgroup') > a", t.target).jqmEnhanceable().not("button, input, .ui-btn, :jqmData(role='none'), :jqmData(role='nojs')").buttonMarkup() }) })(e); (function (e, t) { e.widget("mobile.collapsible", e.mobile.widget, { options: { expandCueText: " click to expand contents", collapseCueText: " click to collapse contents", collapsed: true, heading: "h1,h2,h3,h4,h5,h6,legend", theme: null, contentTheme: null, inset: true, mini: false, initSelector: ":jqmData(role='collapsible')" }, _create: function () { var n = this.element, r = this.options, i = n.addClass("ui-collapsible"), s = n.children(r.heading).first(), o = n.jqmData("collapsed-icon") || r.collapsedIcon, u = n.jqmData("expanded-icon") || r.expandedIcon, a = i.wrapInner("<div class='ui-collapsible-content'></div>").children(".ui-collapsible-content"), f = n.closest(":jqmData(role='collapsible-set')").addClass("ui-collapsible-set"); if (s.is("legend")) { s = e("<div role='heading'>" + s.html() + "</div>").insertBefore(s); s.next().remove() } if (f.length) { if (!r.theme) { r.theme = f.jqmData("theme") || e.mobile.getInheritedTheme(f, "c") } if (!r.contentTheme) { r.contentTheme = f.jqmData("content-theme") } if (!r.collapsedIcon) { r.collapsedIcon = f.jqmData("collapsed-icon") } if (!r.expandedIcon) { r.expandedIcon = f.jqmData("expanded-icon") } if (!r.iconPos) { r.iconPos = f.jqmData("iconpos") } if (f.jqmData("inset") !== t) { r.inset = f.jqmData("inset") } else { r.inset = true } if (!r.mini) { r.mini = f.jqmData("mini") } } else { if (!r.theme) { r.theme = e.mobile.getInheritedTheme(n, "c") } } if (!!r.inset) { i.addClass("ui-collapsible-inset") } a.addClass(r.contentTheme ? "ui-body-" + r.contentTheme : ""); o = n.jqmData("collapsed-icon") || r.collapsedIcon || "plus"; u = n.jqmData("expanded-icon") || r.expandedIcon || "minus"; s.insertBefore(a).addClass("ui-collapsible-heading").append("<span class='ui-collapsible-heading-status'></span>").wrapInner("<a href='#' class='ui-collapsible-heading-toggle'></a>").find("a").first().buttonMarkup({ shadow: false, corners: false, iconpos: n.jqmData("iconpos") || r.iconPos || "left", icon: o, mini: r.mini, theme: r.theme }); if (!!r.inset) { s.find("a").first().add(".ui-btn-inner", n).addClass("ui-corner-top ui-corner-bottom") } i.bind("expand collapse", function (t) { if (!t.isDefaultPrevented()) { var n = e(this), l = t.type === "collapse", c = r.contentTheme; t.preventDefault(); s.toggleClass("ui-collapsible-heading-collapsed", l).find(".ui-collapsible-heading-status").text(l ? r.expandCueText : r.collapseCueText).end().find(".ui-icon").toggleClass("ui-icon-" + u, !l).toggleClass("ui-icon-" + o, l || u === o).end().find("a").first().removeClass(e.mobile.activeBtnClass); n.toggleClass("ui-collapsible-collapsed", l); a.toggleClass("ui-collapsible-content-collapsed", l).attr("aria-hidden", l); if (c && !!r.inset && (!f.length || i.jqmData("collapsible-last"))) { s.find("a").first().add(s.find(".ui-btn-inner")).toggleClass("ui-corner-bottom", l); a.toggleClass("ui-corner-bottom", !l) } a.trigger("updatelayout") } }).trigger(r.collapsed ? "collapse" : "expand"); s.bind("tap", function (t) { s.find("a").first().addClass(e.mobile.activeBtnClass) }).bind("click", function (e) { var t = s.is(".ui-collapsible-heading-collapsed") ? "expand" : "collapse"; i.trigger(t); e.preventDefault(); e.stopPropagation() }) } }); e(n).bind("pagecreate create", function (t) { e.mobile.collapsible.prototype.enhanceWithin(t.target) }) })(e); (function (e, t) { e.widget("mobile.collapsibleset", e.mobile.widget, { options: { initSelector: ":jqmData(role='collapsible-set')" }, _create: function () { var n = this.element.addClass("ui-collapsible-set"), r = this.options; if (!r.theme) { r.theme = e.mobile.getInheritedTheme(n, "c") } if (!r.contentTheme) { r.contentTheme = n.jqmData("content-theme") } if (n.jqmData("inset") !== t) { r.inset = n.jqmData("inset") } r.inset = r.inset !== t ? r.inset : true; if (!n.jqmData("collapsiblebound")) { n.jqmData("collapsiblebound", true).bind("expand collapse", function (t) { var n = t.type === "collapse", i = e(t.target).closest(".ui-collapsible"), s = i.data("collapsible"); if (i.jqmData("collapsible-last") && !!r.inset) { i.find(".ui-collapsible-heading").first().find("a").first().toggleClass("ui-corner-bottom", n).find(".ui-btn-inner").toggleClass("ui-corner-bottom", n); i.find(".ui-collapsible-content").toggleClass("ui-corner-bottom", !n) } }).bind("expand", function (t) { var n = e(t.target).closest(".ui-collapsible"); if (n.parent().is(":jqmData(role='collapsible-set')")) { n.siblings(".ui-collapsible").trigger("collapse") } }) } }, _init: function () { var e = this.element, t = e.children(":jqmData(role='collapsible')"), n = t.filter(":jqmData(collapsed='false')"); this.refresh(); n.trigger("expand") }, refresh: function () { var t = this.element, n = this.options, r = t.children(":jqmData(role='collapsible')"); e.mobile.collapsible.prototype.enhance(r.not(".ui-collapsible")); if (!!n.inset) { r.each(function () { e(this).jqmRemoveData("collapsible-last").find(".ui-collapsible-heading").find("a").first().removeClass("ui-corner-top ui-corner-bottom").find(".ui-btn-inner").removeClass("ui-corner-top ui-corner-bottom") }); r.first().find("a").first().addClass("ui-corner-top").find(".ui-btn-inner").addClass("ui-corner-top"); r.last().jqmData("collapsible-last", true).find("a").first().addClass("ui-corner-bottom").find(".ui-btn-inner").addClass("ui-corner-bottom") } } }); e(n).bind("pagecreate create", function (t) { e.mobile.collapsibleset.prototype.enhanceWithin(t.target) }) })(e); (function (e, t) { e.widget("mobile.navbar", e.mobile.widget, { options: { iconpos: "top", grid: null, initSelector: ":jqmData(role='navbar')" }, _create: function () { var n = this.element, r = n.find("a"), i = r.filter(":jqmData(icon)").length ? this.options.iconpos : t; n.addClass("ui-navbar ui-mini").attr("role", "navigation").find("ul").jqmEnhanceable().grid({ grid: this.options.grid }); r.buttonMarkup({ corners: false, shadow: false, inline: true, iconpos: i }); n.delegate("a", "vclick", function (t) { if (!e(t.target).hasClass("ui-disabled")) { r.removeClass(e.mobile.activeBtnClass); e(this).addClass(e.mobile.activeBtnClass) } }); n.closest(".ui-page").bind("pagebeforeshow", function () { r.filter(".ui-state-persist").addClass(e.mobile.activeBtnClass) }) } }); e(n).bind("pagecreate create", function (t) { e.mobile.navbar.prototype.enhanceWithin(t.target) }) })(e); (function (e, t) { var r = {}; e.widget("mobile.listview", e.mobile.widget, { options: { theme: null, countTheme: "c", headerTheme: "b", dividerTheme: "b", splitIcon: "arrow-r", splitTheme: "b", inset: false, initSelector: ":jqmData(role='listview')" }, _create: function () { var e = this, t = ""; t += e.options.inset ? " ui-listview-inset ui-corner-all ui-shadow " : ""; e.element.addClass(function (e, n) { return n + " ui-listview " + t }); e.refresh(true) }, _removeCorners: function (e, t) { var n = "ui-corner-top ui-corner-tr ui-corner-tl", r = "ui-corner-bottom ui-corner-br ui-corner-bl"; e = e.add(e.find(".ui-btn-inner, .ui-li-link-alt, .ui-li-thumb")); if (t === "top") { e.removeClass(n) } else if (t === "bottom") { e.removeClass(r) } else { e.removeClass(n + " " + r) } }, _refreshCorners: function (e) { var t, n, r, i; t = this.element.children("li"); n = e || t.filter(":visible").length === 0 ? t.not(".ui-screen-hidden") : t.filter(":visible"); t.filter(".ui-li-last").removeClass("ui-li-last"); if (this.options.inset) { this._removeCorners(t); r = n.first().addClass("ui-corner-top"); r.add(r.find(".ui-btn-inner").not(".ui-li-link-alt span:first-child")).addClass("ui-corner-top").end().find(".ui-li-link-alt, .ui-li-link-alt span:first-child").addClass("ui-corner-tr").end().find(".ui-li-thumb").not(".ui-li-icon").addClass("ui-corner-tl"); i = n.last().addClass("ui-corner-bottom ui-li-last"); i.add(i.find(".ui-btn-inner")).find(".ui-li-link-alt").addClass("ui-corner-br").end().find(".ui-li-thumb").not(".ui-li-icon").addClass("ui-corner-bl") } else { n.last().addClass("ui-li-last") } if (!e) { this.element.trigger("updatelayout") } }, _findFirstElementByTagName: function (e, t, n, r) { var i = {}; i[n] = i[r] = true; while (e) { if (i[e.nodeName]) { return e } e = e[t] } return null }, _getChildrenByTagName: function (t, n, r) { var i = [], s = {}; s[n] = s[r] = true; t = t.firstChild; while (t) { if (s[t.nodeName]) { i.push(t) } t = t.nextSibling } return e(i) }, _addThumbClasses: function (t) { var n, r, i = t.length; for (n = 0; n < i; n++) { r = e(this._findFirstElementByTagName(t[n].firstChild, "nextSibling", "img", "IMG")); if (r.length) { r.addClass("ui-li-thumb"); e(this._findFirstElementByTagName(r[0].parentNode, "parentNode", "li", "LI")).addClass(r.is(".ui-li-icon") ? "ui-li-has-icon" : "ui-li-has-thumb") } } }, refresh: function (t) { this.parentPage = this.element.closest(".ui-page"); this._createSubPages(); var r = this.options, i = this.element, s = this, o = i.jqmData("dividertheme") || r.dividerTheme, u = i.jqmData("splittheme"), a = i.jqmData("spliticon"), f = this._getChildrenByTagName(i[0], "li", "LI"), l = !!e.nodeName(i[0], "ol"), c = !e.support.cssPseudoElement, h = i.attr("start"), p = {}, d, v, m, g, y, b, w, E, S, x, T, N, C, k; if (l && c) { i.find(".ui-li-dec").remove() } if (l) { if (h || h === 0) { if (!c) { E = parseFloat(h) - 1; i.css("counter-reset", "listnumbering " + E) } else { w = parseFloat(h) } } else if (c) { w = 1 } } if (!r.theme) { r.theme = e.mobile.getInheritedTheme(this.element, "c") } for (var L = 0, A = f.length; L < A; L++) { d = f.eq(L); v = "ui-li"; if (t || !d.hasClass("ui-li")) { m = d.jqmData("theme") || r.theme; g = this._getChildrenByTagName(d[0], "a", "A"); var O = d.jqmData("role") === "list-divider"; if (g.length && !O) { T = d.jqmData("icon"); d.buttonMarkup({ wrapperEls: "div", shadow: false, corners: false, iconpos: "right", icon: g.length > 1 || T === false ? false : T || "arrow-r", theme: m }); if (T !== false && g.length === 1) { d.addClass("ui-li-has-arrow") } g.first().removeClass("ui-link").addClass("ui-link-inherit"); if (g.length > 1) { v += " ui-li-has-alt"; y = g.last(); b = u || y.jqmData("theme") || r.splitTheme; k = y.jqmData("icon"); y.appendTo(d).attr("title", y.getEncodedText()).addClass("ui-li-link-alt").empty().buttonMarkup({ shadow: false, corners: false, theme: m, icon: false, iconpos: "notext" }).find(".ui-btn-inner").append(e(n.createElement("span")).buttonMarkup({ shadow: true, corners: true, theme: b, iconpos: "notext", icon: k || T || a || r.splitIcon })) } } else if (O) { v += " ui-li-divider ui-bar-" + o; d.attr("role", "heading"); if (l) { if (h || h === 0) { if (!c) { S = parseFloat(h) - 1; d.css("counter-reset", "listnumbering " + S) } else { w = parseFloat(h) } } else if (c) { w = 1 } } } else { v += " ui-li-static ui-btn-up-" + m } } if (l && c && v.indexOf("ui-li-divider") < 0) { x = v.indexOf("ui-li-static") > 0 ? d : d.find(".ui-link-inherit"); x.addClass("ui-li-jsnumbering").prepend("<span class='ui-li-dec'>" + w++ + ". </span>") } if (!p[v]) { p[v] = [] } p[v].push(d[0]) } for (v in p) { e(p[v]).addClass(v).children(".ui-btn-inner").addClass(v) } i.find("h1, h2, h3, h4, h5, h6").addClass("ui-li-heading").end().find("p, dl").addClass("ui-li-desc").end().find(".ui-li-aside").each(function () { var t = e(this); t.prependTo(t.parent()) }).end().find(".ui-li-count").each(function () { e(this).closest("li").addClass("ui-li-has-count") }).addClass("ui-btn-up-" + (i.jqmData("counttheme") || this.options.countTheme) + " ui-btn-corner-all"); this._addThumbClasses(f); this._addThumbClasses(i.find(".ui-link-inherit")); this._refreshCorners(t); this._trigger("afterrefresh") }, _idStringEscape: function (e) { return e.replace(/[^a-zA-Z0-9]/g, "-") }, _createSubPages: function () { var t = this.element, n = t.closest(".ui-page"), i = n.jqmData("url"), s = i || n[0][e.expando], o = t.attr("id"), u = this.options, a = "data-" + e.mobile.ns, f = this, l = n.find(":jqmData(role='footer')").jqmData("id"), c; if (typeof r[s] === "undefined") { r[s] = -1 } o = o || ++r[s]; e(t.find("li>ul, li>ol").toArray().reverse()).each(function (n) { var r = this, s = e(this), f = s.attr("id") || o + "-" + n, h = s.parent(), p = e(s.prevAll().toArray().reverse()), d = p.length ? p : e("<span>" + e.trim(h.contents()[0].nodeValue) + "</span>"), v = d.first().getEncodedText(), m = (i || "") + "&" + e.mobile.subPageUrlKey + "=" + f, g = s.jqmData("theme") || u.theme, y = s.jqmData("counttheme") || t.jqmData("counttheme") || u.countTheme, b, w; c = true; b = s.detach().wrap("<div " + a + "role='page' " + a + "url='" + m + "' " + a + "theme='" + g + "' " + a + "count-theme='" + y + "'><div " + a + "role='content'></div></div>").parent().before("<div " + a + "role='header' " + a + "theme='" + u.headerTheme + "'><div class='ui-title'>" + v + "</div></div>").after(l ? e("<div " + a + "role='footer' " + a + "id='" + l + "'>") : "").parent().appendTo(e.mobile.pageContainer); b.page(); w = h.find("a:first"); if (!w.length) { w = e("<a/>").html(d || v).prependTo(h.empty()) } w.attr("href", "#" + m) }).listview(); if (c && n.is(":jqmData(external-page='true')") && n.data("page").options.domCache === false) { var h = function (t, r) { var s = r.nextPage, o, u = new e.Event("pageremove"); if (r.nextPage) { o = s.jqmData("url"); if (o.indexOf(i + "&" + e.mobile.subPageUrlKey) !== 0) { f.childPages().remove(); n.trigger(u); if (!u.isDefaultPrevented()) { n.removeWithDependents() } } } }; n.unbind("pagehide.remove").bind("pagehide.remove", h) } }, childPages: function () { var t = this.parentPage.jqmData("url"); return e(":jqmData(url^='" + t + "&" + e.mobile.subPageUrlKey + "')") } }); e(n).bind("pagecreate create", function (t) { e.mobile.listview.prototype.enhanceWithin(t.target) }) })(e); (function (e, t) { e.mobile.listview.prototype.options.autodividers = false; e.mobile.listview.prototype.options.autodividersSelector = function (e) { var t = e.text() || null; if (!t) { return null } t = t.slice(0, 1).toUpperCase(); return t }; e(n).delegate("ul,ol", "listviewcreate", function () { var t = e(this), r = t.data("listview"); if (!r || !r.options.autodividers) { return } var i = function () { t.find("li:jqmData(role='list-divider')").remove(); var i = t.find("li"), s = null, o, u; for (var a = 0; a < i.length; a++) { o = i[a]; u = r.options.autodividersSelector(e(o)); if (u && s !== u) { var f = n.createElement("li"); f.appendChild(n.createTextNode(u)); f.setAttribute("data-" + e.mobile.ns + "role", "list-divider"); o.parentNode.insertBefore(f, o) } s = u } }; var s = function () { t.unbind("listviewafterrefresh", s); i(); r.refresh(); t.bind("listviewafterrefresh", s) }; s() }) })(e); (function (e, t) { e.widget("mobile.checkboxradio", e.mobile.widget, { options: { theme: null, initSelector: "input[type='checkbox'],input[type='radio']" }, _create: function () { var r = this, i = this.element, s = function (e, t) { return e.jqmData(t) || e.closest("form, fieldset").jqmData(t) }, o = e(i).closest("label"), u = o.length ? o : e(i).closest("form, fieldset, :jqmData(role='page'), :jqmData(role='dialog')").find("label").filter("[for='" + i[0].id + "']").first(), a = i[0].type, f = s(i, "mini"), l = a + "-on", c = a + "-off", h = i.parents(":jqmData(type='horizontal')").length ? t : c, p = s(i, "iconpos"), d = h ? "" : " " + e.mobile.activeBtnClass, v = "ui-" + l + d, m = "ui-" + c, g = "ui-icon-" + l, y = "ui-icon-" + c; if (a !== "checkbox" && a !== "radio") { return } e.extend(this, { label: u, inputtype: a, checkedClass: v, uncheckedClass: m, checkedicon: g, uncheckedicon: y }); if (!this.options.theme) { this.options.theme = e.mobile.getInheritedTheme(this.element, "c") } u.buttonMarkup({ theme: this.options.theme, icon: h, shadow: false, mini: f, iconpos: p }); var b = n.createElement("div"); b.className = "ui-" + a; i.add(u).wrapAll(b); u.bind({ vmouseover: function (t) { if (e(this).parent().is(".ui-disabled")) { t.stopPropagation() } }, vclick: function (e) { if (i.is(":disabled")) { e.preventDefault(); return } r._cacheVals(); i.prop("checked", a === "radio" && true || !i.prop("checked")); i.triggerHandler("click"); r._getInputSet().not(i).prop("checked", false); r._updateAll(); return false } }); i.bind({ vmousedown: function () { r._cacheVals() }, vclick: function () { var t = e(this); if (t.is(":checked")) { t.prop("checked", true); r._getInputSet().not(t).prop("checked", false) } else { t.prop("checked", false) } r._updateAll() }, focus: function () { u.addClass(e.mobile.focusClass) }, blur: function () { u.removeClass(e.mobile.focusClass) } }); this.refresh() }, _cacheVals: function () { this._getInputSet().each(function () { e(this).jqmData("cacheVal", this.checked) }) }, _getInputSet: function () { if (this.inputtype === "checkbox") { return this.element } return this.element.closest("form, fieldset, :jqmData(role='page'), :jqmData(role='dialog')").find("input[name='" + this.element[0].name + "'][type='" + this.inputtype + "']") }, _updateAll: function () { var t = this; this._getInputSet().each(function () { var n = e(this); if (this.checked || t.inputtype === "checkbox") { n.trigger("change") } }).checkboxradio("refresh") }, refresh: function () { var e = this.element[0], t = this.label, n = t.find(".ui-icon"); if (e.checked) { t.addClass(this.checkedClass).removeClass(this.uncheckedClass); n.addClass(this.checkedicon).removeClass(this.uncheckedicon) } else { t.removeClass(this.checkedClass).addClass(this.uncheckedClass); n.removeClass(this.checkedicon).addClass(this.uncheckedicon) } if (e.disabled) { this.disable() } else { this.enable() } }, disable: function () { this.element.prop("disabled", true).parent().addClass("ui-disabled") }, enable: function () { this.element.prop("disabled", false).parent().removeClass("ui-disabled") } }); e(n).bind("pagecreate create", function (t) { e.mobile.checkboxradio.prototype.enhanceWithin(t.target, true) }) })(e); (function (e, t) { e.widget("mobile.button", e.mobile.widget, { options: { theme: null, icon: null, iconpos: null, corners: true, shadow: true, iconshadow: true, initSelector: "button, [type='button'], [type='submit'], [type='reset']" }, _create: function () { var r = this.element, i, s = this.options, o, u, a = s.inline || r.jqmData("inline"), f = s.mini || r.jqmData("mini"), l = "", c; if (r[0].tagName === "A") { if (!r.hasClass("ui-btn")) { r.buttonMarkup() } return } if (!this.options.theme) { this.options.theme = e.mobile.getInheritedTheme(this.element, "c") } if (!!~r[0].className.indexOf("ui-btn-left")) { l = "ui-btn-left" } if (!!~r[0].className.indexOf("ui-btn-right")) { l = "ui-btn-right" } if (r.attr("type") === "submit" || r.attr("type") === "reset") { l ? l += " ui-submit" : l = "ui-submit" } e("label[for='" + r.attr("id") + "']").addClass("ui-submit"); this.button = e("<div></div>")[r.html() ? "html" : "text"](r.html() || r.val()).insertBefore(r).buttonMarkup({ theme: s.theme, icon: s.icon, iconpos: s.iconpos, inline: a, corners: s.corners, shadow: s.shadow, iconshadow: s.iconshadow, mini: f }).addClass(l).append(r.addClass("ui-btn-hidden")); i = this.button; o = r.attr("type"); u = r.attr("name"); if (o !== "button" && o !== "reset" && u) { r.bind("vclick", function () { if (c === t) { c = e("<input>", { type: "hidden", name: r.attr("name"), value: r.attr("value") }).insertBefore(r); e(n).one("submit", function () { c.remove(); c = t }) } }) } r.bind({ focus: function () { i.addClass(e.mobile.focusClass) }, blur: function () { i.removeClass(e.mobile.focusClass) } }); this.refresh() }, enable: function () { this.element.attr("disabled", false); this.button.removeClass("ui-disabled").attr("aria-disabled", false); return this._setOption("disabled", false) }, disable: function () { this.element.attr("disabled", true); this.button.addClass("ui-disabled").attr("aria-disabled", true); return this._setOption("disabled", true) }, refresh: function () { var t = this.element; if (t.prop("disabled")) { this.disable() } else { this.enable() } e(this.button.data("buttonElements").text)[t.html() ? "html" : "text"](t.html() || t.val()) } }); e(n).bind("pagecreate create", function (t) { e.mobile.button.prototype.enhanceWithin(t.target, true) }) })(e); (function (e, t) { e.fn.controlgroup = function (t) { function n(e, t) { e.removeClass("ui-btn-corner-all ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-controlgroup-last ui-shadow").eq(0).addClass(t[0]).end().last().addClass(t[1]).addClass("ui-controlgroup-last") } return this.each(function () { var r = e(this), i = e.extend({ direction: r.jqmData("type") || "vertical", shadow: false, excludeInvisible: true, mini: r.jqmData("mini") }, t), s = r.children("legend"), o = r.children(".ui-controlgroup-label"), u = r.children(".ui-controlgroup-controls"), a = i.direction === "horizontal" ? ["ui-corner-left", "ui-corner-right"] : ["ui-corner-top", "ui-corner-bottom"], f = r.find("input").first().attr("type"); if (u.length) { u.contents().unwrap() } r.wrapInner("<div class='ui-controlgroup-controls'></div>"); if (s.length) { e("<div role='heading' class='ui-controlgroup-label'>" + s.html() + "</div>").insertBefore(r.children(0)); s.remove() } else if (o.length) { r.prepend(o) } r.addClass("ui-corner-all ui-controlgroup ui-controlgroup-" + i.direction); n(r.find(".ui-btn" + (i.excludeInvisible ? ":visible" : "")).not(".ui-slider-handle"), a); n(r.find(".ui-btn-inner"), a); if (i.shadow) { r.addClass("ui-shadow") } if (i.mini) { r.addClass("ui-mini") } }) } })(e); (function (e, t) { e(n).bind("pagecreate create", function (t) { e(t.target).find("a").jqmEnhanceable().not(".ui-btn, .ui-link-inherit, :jqmData(role='none'), :jqmData(role='nojs')").addClass("ui-link") }) })(e); (function (e, r) { function i(e, t, n, r) { var i = r; if (e < t) { i = n + (e - t) / 2 } else { i = Math.min(Math.max(n, r - t / 2), n + e - t) } return i } function s() { var n = e(t); return { x: n.scrollLeft(), y: n.scrollTop(), cx: t.innerWidth || n.width(), cy: t.innerHeight || n.height() } } e.widget("mobile.popup", e.mobile.widget, { options: { theme: null, overlayTheme: null, shadow: true, corners: true, transition: "none", positionTo: "origin", tolerance: null, initSelector: ":jqmData(role='popup')", closeLinkSelector: "a:jqmData(rel='back')", closeLinkEvents: "click.popup", navigateEvents: "navigate.popup", closeEvents: "navigate.popup pagebeforechange.popup", history: !e.mobile.browser.ie }, _eatEventAndClose: function (e) { e.preventDefault(); e.stopImmediatePropagation(); this.close(); return false }, _resizeScreen: function () { var e = this._ui.container.outerHeight(true); this._ui.screen.removeAttr("style"); if (e > this._ui.screen.height()) { this._ui.screen.height(e) } }, _handleWindowKeyUp: function (t) { if (this._isOpen && t.keyCode === e.mobile.keyCode.ESCAPE) { return this._eatEventAndClose(t) } }, _maybeRefreshTimeout: function () { var t = s(); if (this._resizeData) { if (t.x === this._resizeData.winCoords.x && t.y === this._resizeData.winCoords.y && t.cx === this._resizeData.winCoords.cx && t.cy === this._resizeData.winCoords.cy) { return false } else { clearTimeout(this._resizeData.timeoutId) } } this._resizeData = { timeoutId: setTimeout(e.proxy(this, "_resizeTimeout"), 200), winCoords: t }; return true }, _resizeTimeout: function () { if (!this._maybeRefreshTimeout()) { this._trigger("beforeposition"); this._ui.container.removeClass("ui-selectmenu-hidden").offset(this._placementCoords(this._desiredCoords(r, r, "window"))); this._resizeScreen(); this._resizeData = null; this._orientationchangeInProgress = false } }, _handleWindowResize: function (e) { if (this._isOpen) { this._maybeRefreshTimeout() } }, _handleWindowOrientationchange: function (e) { if (!this._orientationchangeInProgress) { this._ui.container.addClass("ui-selectmenu-hidden").removeAttr("style"); this._orientationchangeInProgress = true } }, _create: function () { var n = { screen: e("<div class='ui-screen-hidden ui-popup-screen'></div>"), placeholder: e("<div style='display: none;'><!-- placeholder --></div>"), container: e("<div class='ui-popup-container ui-selectmenu-hidden'></div>") }, i = this.element.closest(".ui-page"), s = this.element.attr("id"), o = this; this.options.history = this.options.history && e.mobile.ajaxEnabled && e.mobile.hashListeningEnabled; if (i.length === 0) { i = e("body") } this.options.container = this.options.container || e.mobile.pageContainer; i.append(n.screen); n.container.insertAfter(n.screen); n.placeholder.insertAfter(this.element); if (s) { n.screen.attr("id", s + "-screen"); n.container.attr("id", s + "-popup"); n.placeholder.html("<!-- placeholder for " + s + " -->") } n.container.append(this.element); this.element.addClass("ui-popup"); e.extend(this, { _page: i, _ui: n, _fallbackTransition: "", _currentTransition: false, _prereqs: null, _isOpen: false, _tolerance: null, _resizeData: null, _orientationchangeInProgress: false, _globalHandlers: [{ src: e(t), handler: { orientationchange: e.proxy(this, "_handleWindowOrientationchange"), resize: e.proxy(this, "_handleWindowResize"), keyup: e.proxy(this, "_handleWindowKeyUp") } }] }); e.each(this.options, function (e, t) { o.options[e] = r; o._setOption(e, t, true) }); n.screen.bind("vclick", e.proxy(this, "_eatEventAndClose")); e.each(this._globalHandlers, function (e, t) { t.src.bind(t.handler) }) }, _applyTheme: function (e, t, n) { var r = (e.attr("class") || "").split(" "), i = true, s = null, o, u = String(t); while (r.length > 0) { s = r.pop(); o = (new RegExp("^ui-" + n + "-([a-z])$")).exec(s); if (o && o.length > 1) { s = o[1]; break } else { s = null } } if (t !== s) { e.removeClass("ui-" + n + "-" + s); if (!(t === null || t === "none")) { e.addClass("ui-" + n + "-" + u) } } }, _setTheme: function (e) { this._applyTheme(this.element, e, "body") }, _setOverlayTheme: function (e) { this._applyTheme(this._ui.screen, e, "overlay"); if (this._isOpen) { this._ui.screen.addClass("in") } }, _setShadow: function (e) { this.element.toggleClass("ui-overlay-shadow", e) }, _setCorners: function (e) { this.element.toggleClass("ui-corner-all", e) }, _applyTransition: function (t) { this._ui.container.removeClass(this._fallbackTransition); if (t && t !== "none") { this._fallbackTransition = e.mobile._maybeDegradeTransition(t); this._ui.container.addClass(this._fallbackTransition) } }, _setTransition: function (e) { if (!this._currentTransition) { this._applyTransition(e) } }, _setTolerance: function (t) { var n = { t: 30, r: 15, b: 30, l: 15 }; if (t) { var r = String(t).split(","); e.each(r, function (e, t) { r[e] = parseInt(t, 10) }); switch (r.length) { case 1: if (!isNaN(r[0])) { n.t = n.r = n.b = n.l = r[0] } break; case 2: if (!isNaN(r[0])) { n.t = n.b = r[0] } if (!isNaN(r[1])) { n.l = n.r = r[1] } break; case 4: if (!isNaN(r[0])) { n.t = r[0] } if (!isNaN(r[1])) { n.r = r[1] } if (!isNaN(r[2])) { n.b = r[2] } if (!isNaN(r[3])) { n.l = r[3] } break; default: break } } this._tolerance = n }, _setOption: function (t, n) { var i, s = "_set" + t.charAt(0).toUpperCase() + t.slice(1); if (this[s] !== r) { this[s](n) } i = ["initSelector", "closeLinkSelector", "closeLinkEvents", "navigateEvents", "closeEvents", "history", "container"]; e.mobile.widget.prototype._setOption.apply(this, arguments); if (e.inArray(t, i) === -1) { this.element.attr("data-" + (e.mobile.ns || "") + t.replace(/([A-Z])/, "-$1").toLowerCase(), n) } }, _placementCoords: function (e) { var t = s(), r = { x: this._tolerance.l, y: t.y + this._tolerance.t, cx: t.cx - this._tolerance.l - this._tolerance.r, cy: t.cy - this._tolerance.t - this._tolerance.b }, o, u; this._ui.container.css("max-width", r.cx); o = { cx: this._ui.container.outerWidth(true), cy: this._ui.container.outerHeight(true) }; u = { x: i(r.cx, o.cx, r.x, e.x), y: i(r.cy, o.cy, r.y, e.y) }; u.y = Math.max(0, u.y); var a = n.documentElement, f = n.body, l = Math.max(a.clientHeight, f.scrollHeight, f.offsetHeight, a.scrollHeight, a.offsetHeight); u.y -= Math.min(u.y, Math.max(0, u.y + o.cy - l)); return { left: u.x, top: u.y } }, _createPrereqs: function (t, n, r) { var i = this, s; s = { screen: e.Deferred(), container: e.Deferred() }; s.screen.then(function () { if (s === i._prereqs) { t() } }); s.container.then(function () { if (s === i._prereqs) { n() } }); e.when(s.screen, s.container).done(function () { if (s === i._prereqs) { i._prereqs = null; r() } }); i._prereqs = s }, _animate: function (t) { this._ui.screen.removeClass(t.classToRemove).addClass(t.screenClassToAdd); t.prereqs.screen.resolve(); if (t.transition && t.transition !== "none") { if (t.applyTransition) { this._applyTransition(t.transition) } this._ui.container.animationComplete(e.proxy(t.prereqs.container, "resolve")).addClass(t.containerClassToAdd).removeClass(t.classToRemove) } else { t.prereqs.container.resolve() } }, _desiredCoords: function (t, n, r) { var i = null, o, u = s(); if (r && r !== "origin") { if (r === "window") { t = u.cx / 2 + u.x; n = u.cy / 2 + u.y } else { try { i = e(r) } catch (a) { i = null } if (i) { i.filter(":visible"); if (i.length === 0) { i = null } } } } if (i) { o = i.offset(); t = o.left + i.outerWidth() / 2; n = o.top + i.outerHeight() / 2 } if (e.type(t) !== "number" || isNaN(t)) { t = u.cx / 2 + u.x } if (e.type(n) !== "number" || isNaN(n)) { n = u.cy / 2 + u.y } return { x: t, y: n } }, _openPrereqsComplete: function () { var e = this; e._ui.container.addClass("ui-popup-active"); e._isOpen = true; e._resizeScreen(); setTimeout(function () { e._ui.container.attr("tabindex", "0").focus(); e._trigger("afteropen") }) }, _open: function (n) { var r, i, s = function () { var e = t, n = navigator.userAgent, r = n.match(/AppleWebKit\/([0-9\.]+)/), i = !!r && r[1], s = n.match(/Android (\d+(?:\.\d+))/), o = !!s && s[1], u = n.indexOf("Chrome") > -1; if (s !== null && o === "4.0" && i && i > 534.13 && !u) { return true } return false }(); n = n || {}; i = n.transition || this.options.transition; this._trigger("beforeposition"); r = this._placementCoords(this._desiredCoords(n.x, n.y, n.positionTo || this.options.positionTo || "origin")); this._createPrereqs(e.noop, e.noop, e.proxy(this, "_openPrereqsComplete")); if (i) { this._currentTransition = i; this._applyTransition(i) } else { i = this.options.transition } if (!this.options.theme) { this._setTheme(this._page.jqmData("theme") || e.mobile.getInheritedTheme(this._page, "c")) } this._ui.screen.removeClass("ui-screen-hidden"); this._ui.container.removeClass("ui-selectmenu-hidden").offset(r); if (this.options.overlayTheme && s) { this.element.closest(".ui-page").addClass("ui-popup-open") } this._animate({ additionalCondition: true, transition: i, classToRemove: "", screenClassToAdd: "in", containerClassToAdd: "in", applyTransition: false, prereqs: this._prereqs }) }, _closePrereqScreen: function () { this._ui.screen.removeClass("out").addClass("ui-screen-hidden") }, _closePrereqContainer: function () { this._ui.container.removeClass("reverse out").addClass("ui-selectmenu-hidden").removeAttr("style") }, _closePrereqsDone: function () { var t = this, n = t.options; t._ui.container.removeAttr("tabindex"); n.container.unbind(n.closeEvents); t.element.undelegate(n.closeLinkSelector, n.closeLinkEvents); e.mobile.popup.active = r; t._trigger("afterclose") }, _close: function () { this._ui.container.removeClass("ui-popup-active"); this._page.removeClass("ui-popup-open"); this._isOpen = false; this._createPrereqs(e.proxy(this, "_closePrereqScreen"), e.proxy(this, "_closePrereqContainer"), e.proxy(this, "_closePrereqsDone")); this._animate({ additionalCondition: this._ui.screen.hasClass("in"), transition: this._currentTransition || this.options.transition, classToRemove: "in", screenClassToAdd: "out", containerClassToAdd: "reverse out", applyTransition: true, prereqs: this._prereqs }) }, _destroy: function () { var t = this; t._close(); t._setTheme("none"); t.element.insertAfter(t._ui.placeholder).removeClass("ui-popup ui-overlay-shadow ui-corner-all"); t._ui.screen.remove(); t._ui.container.remove(); t._ui.placeholder.remove(); e.each(t._globalHandlers, function (t, n) { e.each(n.handler, function (e, t) { n.src.unbind(e, t) }) }) }, _bindContainerClose: function () { var t = this; t.options.container.one(t.options.closeEvents, e.proxy(t._close, t)) }, open: function (t) { var n = this, i = this.options, s, o, u, a, f, l; if (e.mobile.popup.active) { return } e.mobile.popup.active = this; if (!i.history) { n._open(t); n._bindContainerClose(); n.element.delegate(i.closeLinkSelector, i.closeLinkEvents, function (e) { n._close(); return false }); return } o = e.mobile.dialogHashKey; u = e.mobile.activePage; a = u.is(".ui-dialog"); s = e.mobile.urlHistory.getActive().url; f = s.indexOf(o) > -1 && !a; l = e.mobile.urlHistory; if (f) { n._open(t); n._bindContainerClose(); return } if (s.indexOf(o) === -1 && !a) { s = s + o } else { s = e.mobile.path.parseLocation().hash + o } if (l.activeIndex === 0 && s === l.initialDst) { s += o } i.container.one(i.navigateEvents, function (e) { e.preventDefault(); n._open(t); n._bindContainerClose() }); l.ignoreNextHashChange = a; l.addNew(s, r, r, r, "dialog"); e.mobile.path.set(s) }, close: function () { if (!e.mobile.popup.active) { return } if (this.options.history) { e.mobile.back() } else { this._close() } } }); e.mobile.popup.handleLink = function (t) { var n = t.closest(":jqmData(role='page')"), r = n.length === 0 ? e("body") : n, i = e(e.mobile.path.parseUrl(t.attr("href")).hash, r[0]), s; if (i.data("popup")) { s = t.offset(); i.popup("open", { x: s.left + t.outerWidth() / 2, y: s.top + t.outerHeight() / 2, transition: t.jqmData("transition"), positionTo: t.jqmData("position-to"), link: t }) } setTimeout(function () { t.removeClass(e.mobile.activeBtnClass) }, 300) }; e(n).bind("pagebeforechange", function (t, n) { if (n.options.role === "popup") { e.mobile.popup.handleLink(n.options.link); t.preventDefault() } }); e(n).bind("pagecreate create", function (t) { e.mobile.popup.prototype.enhanceWithin(t.target, true) }) })(e); (function (e) { var t = e("meta[name=viewport]"), n = t.attr("content"), r = n + ",maximum-scale=1, user-scalable=no", i = n + ",maximum-scale=10, user-scalable=yes", s = /(user-scalable[\s]*=[\s]*no)|(maximum-scale[\s]*=[\s]*1)[$,\s]/.test(n); e.mobile.zoom = e.extend({}, { enabled: !s, locked: false, disable: function (n) { if (!s && !e.mobile.zoom.locked) { t.attr("content", r); e.mobile.zoom.enabled = false; e.mobile.zoom.locked = n || false } }, enable: function (n) { if (!s && (!e.mobile.zoom.locked || n === true)) { t.attr("content", i); e.mobile.zoom.enabled = true; e.mobile.zoom.locked = false } }, restore: function () { if (!s) { t.attr("content", n); e.mobile.zoom.enabled = true } } }) })(e); (function (e, r) { e.widget("mobile.textinput", e.mobile.widget, { options: { theme: null, preventFocusZoom: /iPhone|iPad|iPod/.test(navigator.platform) && navigator.userAgent.indexOf("AppleWebKit") > -1, initSelector: "input[type='text'], input[type='search'], :jqmData(type='search'), input[type='number'], :jqmData(type='number'), input[type='password'], input[type='email'], input[type='url'], input[type='tel'], textarea, input[type='time'], input[type='date'], input[type='month'], input[type='week'], input[type='datetime'], input[type='datetime-local'], input[type='color'], input:not([type])", clearSearchButtonText: "clear text", disabled: false }, _create: function () { function h() { setTimeout(function () { c.toggleClass("ui-input-clear-hidden", !i.val()) }, 0) } var r = this, i = this.element, s = this.options, o = s.theme || e.mobile.getInheritedTheme(this.element, "c"), u = " ui-body-" + o, a = i.jqmData("mini") === true, f = a ? " ui-mini" : "", l, c; e("label[for='" + i.attr("id") + "']").addClass("ui-input-text"); l = i.addClass("ui-input-text ui-body-" + o); if (typeof i[0].autocorrect !== "undefined" && !e.support.touchOverflow) { i[0].setAttribute("autocorrect", "off"); i[0].setAttribute("autocomplete", "off") } if (i.is("[type='search'],:jqmData(type='search')")) { l = i.wrap("<div class='ui-input-search ui-shadow-inset ui-btn-corner-all ui-btn-shadow ui-icon-searchfield" + u + f + "'></div>").parent(); c = e("<a href='#' class='ui-input-clear' title='" + s.clearSearchButtonText + "'>" + s.clearSearchButtonText + "</a>").bind("click", function (e) { i.val("").focus().trigger("change"); c.addClass("ui-input-clear-hidden"); e.preventDefault() }).appendTo(l).buttonMarkup({ icon: "delete", iconpos: "notext", corners: true, shadow: true, mini: a }); h(); i.bind("paste cut keyup focus change blur", h) } else { i.addClass("ui-corner-all ui-shadow-inset" + u + f) } i.focus(function () { l.addClass(e.mobile.focusClass) }).blur(function () { l.removeClass(e.mobile.focusClass) }).bind("focus", function () { if (s.preventFocusZoom) { e.mobile.zoom.disable(true) } }).bind("blur", function () { if (s.preventFocusZoom) { e.mobile.zoom.enable(true) } }); if (i.is("textarea")) { var p = 15, d = 100, v; this._keyup = function () { var e = i[0].scrollHeight, t = i[0].clientHeight; if (t < e) { i.height(e + p) } }; i.keyup(function () { clearTimeout(v); v = setTimeout(r._keyup, d) }); this._on(e(n), { pagechange: "_keyup" }); if (e.trim(i.val())) { this._on(e(t), { load: "_keyup" }) } } if (i.attr("disabled")) { this.disable() } }, disable: function () { var e; if (this.element.attr("disabled", true).is("[type='search'], :jqmData(type='search')")) { e = this.element.parent() } else { e = this.element } e.addClass("ui-disabled"); return this._setOption("disabled", true) }, enable: function () { var e; if (this.element.attr("disabled", false).is("[type='search'], :jqmData(type='search')")) { e = this.element.parent() } else { e = this.element } e.removeClass("ui-disabled"); return this._setOption("disabled", false) } }); e(n).bind("pagecreate create", function (t) { e.mobile.textinput.prototype.enhanceWithin(t.target, true) }) })(e); (function (e, t) { e.mobile.listview.prototype.options.filter = false; e.mobile.listview.prototype.options.filterPlaceholder = "Filter items..."; e.mobile.listview.prototype.options.filterTheme = "c"; var r = function (e, t, n) { return e.toString().toLowerCase().indexOf(t) === -1 }; e.mobile.listview.prototype.options.filterCallback = r; e(n).delegate(":jqmData(role='listview')", "listviewcreate", function () { var t = e(this), n = t.data("listview"); if (!n.options.filter) { return } var i = e("<form>", { "class": "ui-listview-filter ui-bar-" + n.options.filterTheme, role: "search" }), s = e("<input>", { placeholder: n.options.filterPlaceholder }).attr("data-" + e.mobile.ns + "type", "search").jqmData("lastval", "").bind("keyup change", function () { var i = e(this), s = this.value.toLowerCase(), o = null, u = i.jqmData("lastval") + "", a = false, f = "", l, c = n.options.filterCallback !== r; n._trigger("beforefilter", "beforefilter", { input: this }); i.jqmData("lastval", s); if (c || s.length < u.length || s.indexOf(u) !== 0) { o = t.children() } else { o = t.children(":not(.ui-screen-hidden)") } if (s) { for (var h = o.length - 1; h >= 0; h--) { l = e(o[h]); f = l.jqmData("filtertext") || l.text(); if (l.is("li:jqmData(role=list-divider)")) { l.toggleClass("ui-filter-hidequeue", !a); a = false } else if (n.options.filterCallback(f, s, l)) { l.toggleClass("ui-filter-hidequeue", true) } else { a = true } } o.filter(":not(.ui-filter-hidequeue)").toggleClass("ui-screen-hidden", false); o.filter(".ui-filter-hidequeue").toggleClass("ui-screen-hidden", true).toggleClass("ui-filter-hidequeue", false) } else { o.toggleClass("ui-screen-hidden", false) } n._refreshCorners() }).appendTo(i).textinput(); if (n.options.inset) { i.addClass("ui-listview-filter-inset") } i.bind("submit", function () { return false }).insertBefore(t) }) })(e); (function (e, r) { e.widget("mobile.slider", e.mobile.widget, { widgetEventPrefix: "slide", options: { theme: null, trackTheme: null, disabled: false, initSelector: "input[type='range'], :jqmData(type='range'), :jqmData(role='slider')", mini: false }, _create: function () { var i = this, s = this.element, o = e.mobile.getInheritedTheme(s, "c"), u = this.options.theme || o, a = this.options.trackTheme || o, f = s[0].nodeName.toLowerCase(), l = f === "select" ? "ui-slider-switch" : "", c = s.attr("id"), h = e("[for='" + c + "']"), p = h.attr("id") || c + "-label", d = h.attr("id", p), v = function () { return f === "input" ? parseFloat(s.val()) : s[0].selectedIndex }, m = f === "input" ? parseFloat(s.attr("min")) : 0, g = f === "input" ? parseFloat(s.attr("max")) : s.find("option").length - 1, y = t.parseFloat(s.attr("step") || 1), b = this.options.inline || s.jqmData("inline") === true ? " ui-slider-inline" : "", w = this.options.mini || s.jqmData("mini") ? " ui-slider-mini" : "", E = n.createElement("a"), S = e(E), x = n.createElement("div"), T = e(x), N = s.jqmData("highlight") && f !== "select" ? function () { var t = n.createElement("div"); t.className = "ui-slider-bg " + e.mobile.activeBtnClass + " ui-btn-corner-all"; return e(t).prependTo(T) }() : false, C; this._type = f; E.setAttribute("href", "#"); x.setAttribute("role", "application"); x.className = ["ui-slider ", l, " ui-btn-down-", a, " ui-btn-corner-all", b, w].join(""); E.className = "ui-slider-handle"; x.appendChild(E); S.buttonMarkup({ corners: true, theme: u, shadow: true }).attr({ role: "slider", "aria-valuemin": m, "aria-valuemax": g, "aria-valuenow": v(), "aria-valuetext": v(), title: v(), "aria-labelledby": p }); e.extend(this, { slider: T, handle: S, valuebg: N, dragging: false, beforeStart: null, userModified: false, mouseMoved: false }); if (f === "select") { var k = n.createElement("div"); k.className = "ui-slider-inneroffset"; for (var L = 0, A = x.childNodes.length; L < A; L++) { k.appendChild(x.childNodes[L]) } x.appendChild(k); S.addClass("ui-slider-handle-snapping"); C = s.find("option"); for (var O = 0, M = C.length; O < M; O++) { var _ = !O ? "b" : "a", D = !O ? " ui-btn-down-" + a : " " + e.mobile.activeBtnClass, P = n.createElement("div"), H = n.createElement("span"); H.className = ["ui-slider-label ui-slider-label-", _, D, " ui-btn-corner-all"].join(""); H.setAttribute("role", "img"); H.appendChild(n.createTextNode(C[O].innerHTML)); e(H).prependTo(T) } i._labels = e(".ui-slider-label", T) } d.addClass("ui-slider"); s.addClass(f === "input" ? "ui-slider-input" : "ui-slider-switch").change(function () { if (!i.mouseMoved) { i.refresh(v(), true) } }).keyup(function () { i.refresh(v(), true, true) }).blur(function () { i.refresh(v(), true) }); this._preventDocumentDrag = function (e) { if (i.dragging && !i.options.disabled) { i.mouseMoved = true; if (f === "select") { S.removeClass("ui-slider-handle-snapping") } i.refresh(e); i.userModified = i.beforeStart !== s[0].selectedIndex; return false } }; this._on(e(n), { vmousemove: this._preventDocumentDrag }); s.bind("vmouseup", e.proxy(i._checkedRefresh, i)); T.bind("vmousedown", function (e) { if (i.options.disabled) { return false } i.dragging = true; i.userModified = false; i.mouseMoved = false; if (f === "select") { i.beforeStart = s[0].selectedIndex } i.refresh(e); i._trigger("start"); return false }).bind("vclick", false); this._sliderMouseUp = function () { if (i.dragging) { i.dragging = false; if (f === "select") { S.addClass("ui-slider-handle-snapping"); if (i.mouseMoved) { if (i.userModified) { i.refresh(i.beforeStart === 0 ? 1 : 0) } else { i.refresh(i.beforeStart) } } else { i.refresh(i.beforeStart === 0 ? 1 : 0) } } i.mouseMoved = false; i._trigger("stop"); return false } }; this._on(T.add(n), { vmouseup: this._sliderMouseUp }); T.insertAfter(s); if (f === "select") { this.handle.bind({ focus: function () { T.addClass(e.mobile.focusClass) }, blur: function () { T.removeClass(e.mobile.focusClass) } }) } this.handle.bind({ vmousedown: function () { e(this).focus() }, vclick: false, keydown: function (t) { var n = v(); if (i.options.disabled) { return } switch (t.keyCode) { case e.mobile.keyCode.HOME: case e.mobile.keyCode.END: case e.mobile.keyCode.PAGE_UP: case e.mobile.keyCode.PAGE_DOWN: case e.mobile.keyCode.UP: case e.mobile.keyCode.RIGHT: case e.mobile.keyCode.DOWN: case e.mobile.keyCode.LEFT: t.preventDefault(); if (!i._keySliding) { i._keySliding = true; e(this).addClass("ui-state-active") } break } switch (t.keyCode) { case e.mobile.keyCode.HOME: i.refresh(m); break; case e.mobile.keyCode.END: i.refresh(g); break; case e.mobile.keyCode.PAGE_UP: case e.mobile.keyCode.UP: case e.mobile.keyCode.RIGHT: i.refresh(n + y); break; case e.mobile.keyCode.PAGE_DOWN: case e.mobile.keyCode.DOWN: case e.mobile.keyCode.LEFT: i.refresh(n - y); break } }, keyup: function (t) { if (i._keySliding) { i._keySliding = false; e(this).removeClass("ui-state-active") } } }); this.refresh(r, r, true) }, _checkedRefresh: function () { if (this.value != this._value()) { this.refresh(this._value()) } }, _value: function () { return this._type === "input" ? parseFloat(this.element.val()) : this.element[0].selectedIndex }, refresh: function (t, n, r) { if (this.options.disabled || this.element.attr("disabled")) { this.disable() } this.value = this._value(); var i = this.element, s, o = i[0].nodeName.toLowerCase(), u = o === "input" ? parseFloat(i.attr("min")) : 0, a = o === "input" ? parseFloat(i.attr("max")) : i.find("option").length - 1, f = o === "input" && parseFloat(i.attr("step")) > 0 ? parseFloat(i.attr("step")) : 1; if (typeof t === "object") { var l = t, c = 8; if (!this.dragging || l.pageX < this.slider.offset().left - c || l.pageX > this.slider.offset().left + this.slider.width() + c) { return } s = Math.round((l.pageX - this.slider.offset().left) / this.slider.width() * 100) } else { if (t == null) { t = o === "input" ? parseFloat(i.val() || 0) : i[0].selectedIndex } s = (parseFloat(t) - u) / (a - u) * 100 } if (isNaN(s)) { return } if (s < 0) { s = 0 } if (s > 100) { s = 100 } var h = s / 100 * (a - u) + u; var p = (h - u) % f; var d = h - p; if (Math.abs(p) * 2 >= f) { d += p > 0 ? f : -f } h = parseFloat(d.toFixed(5)); if (h < u) { h = u } if (h > a) { h = a } this.handle.css("left", s + "%"); this.handle.attr({ "aria-valuenow": o === "input" ? h : i.find("option").eq(h).attr("value"), "aria-valuetext": o === "input" ? h : i.find("option").eq(h).getEncodedText(), title: o === "input" ? h : i.find("option").eq(h).getEncodedText() }); if (this.valuebg) { this.valuebg.css("width", s + "%") } if (this._labels) { var v = this.handle.width() / this.slider.width() * 100, m = s && v + (100 - v) * s / 100, g = s === 100 ? 0 : Math.min(v + 100 - m, 100); this._labels.each(function () { var t = e(this).is(".ui-slider-label-a"); e(this).width((t ? m : g) + "%") }) } if (!r) { var y = false; if (o === "input") { y = i.val() !== h; i.val(h) } else { y = i[0].selectedIndex !== h; i[0].selectedIndex = h } if (!n && y) { i.trigger("change") } } }, enable: function () { this.element.attr("disabled", false); this.slider.removeClass("ui-disabled").attr("aria-disabled", false); return this._setOption("disabled", false) }, disable: function () { this.element.attr("disabled", true); this.slider.addClass("ui-disabled").attr("aria-disabled", true); return this._setOption("disabled", true) } }); e(n).bind("pagecreate create", function (t) { e.mobile.slider.prototype.enhanceWithin(t.target, true) }) })(e); (function (e, r) { e.widget("mobile.selectmenu", e.mobile.widget, { options: { theme: null, disabled: false, icon: "arrow-d", iconpos: "right", inline: false, corners: true, shadow: true, iconshadow: true, overlayTheme: "a", hidePlaceholderMenuItems: true, closeText: "Close", nativeMenu: true, preventFocusZoom: /iPhone|iPad|iPod/.test(navigator.platform) && navigator.userAgent.indexOf("AppleWebKit") > -1, initSelector: "select:not( :jqmData(role='slider') )", mini: false }, _button: function () { return e("<div/>") }, _setDisabled: function (e) { this.element.attr("disabled", e); this.button.attr("aria-disabled", e); return this._setOption("disabled", e) }, _focusButton: function () { var e = this; setTimeout(function () { e.button.focus() }, 40) }, _selectOptions: function () { return this.select.find("option") }, _preExtension: function () { var t = ""; if (!!~this.element[0].className.indexOf("ui-btn-left")) { t = " ui-btn-left" } if (!!~this.element[0].className.indexOf("ui-btn-right")) { t = " ui-btn-right" } this.select = this.element.wrap("<div class='ui-select" + t + "'>"); this.selectID = this.select.attr("id"); this.label = e("label[for='" + this.selectID + "']").addClass("ui-select"); this.isMultiple = this.select[0].multiple; if (!this.options.theme) { this.options.theme = e.mobile.getInheritedTheme(this.select, "c") } }, _create: function () { this._preExtension(); this._trigger("beforeCreate"); this.button = this._button(); var n = this, r = this.options, i = r.inline || this.select.jqmData("inline"), s = r.mini || this.select.jqmData("mini"), o = r.icon ? r.iconpos || this.select.jqmData("iconpos") : false, u = this.select[0].selectedIndex === -1 ? 0 : this.select[0].selectedIndex, a = this.button.insertBefore(this.select).buttonMarkup({ theme: r.theme, icon: r.icon, iconpos: o, inline: i, corners: r.corners, shadow: r.shadow, iconshadow: r.iconshadow, mini: s }); this.setButtonText(); if (r.nativeMenu && t.opera && t.opera.version) { a.addClass("ui-select-nativeonly") } if (this.isMultiple) { this.buttonCount = e("<span>").addClass("ui-li-count ui-btn-up-c ui-btn-corner-all").hide().appendTo(a.addClass("ui-li-has-count")) } if (r.disabled || this.element.attr("disabled")) { this.disable() } this.select.change(function () { n.refresh() }); this.build() }, build: function () { var t = this; this.select.appendTo(t.button).bind("vmousedown", function () { t.button.addClass(e.mobile.activeBtnClass) }).bind("focus", function () { t.button.addClass(e.mobile.focusClass) }).bind("blur", function () { t.button.removeClass(e.mobile.focusClass) }).bind("focus vmouseover", function () { t.button.trigger("vmouseover") }).bind("vmousemove", function () { t.button.removeClass(e.mobile.activeBtnClass) }).bind("change blur vmouseout", function () { t.button.trigger("vmouseout").removeClass(e.mobile.activeBtnClass) }).bind("change blur", function () { t.button.removeClass("ui-btn-down-" + t.options.theme) }); t.button.bind("vmousedown", function () { if (t.options.preventFocusZoom) { e.mobile.zoom.disable(true) } }).bind("mouseup", function () { if (t.options.preventFocusZoom) { setTimeout(function () { e.mobile.zoom.enable(true) }, 0) } }) }, selected: function () { return this._selectOptions().filter(":selected") }, selectedIndices: function () { var e = this; return this.selected().map(function () { return e._selectOptions().index(this) }).get() }, setButtonText: function () { var t = this, r = this.selected(), i = this.placeholder, s = e(n.createElement("span")); this.button.find(".ui-btn-text").html(function () { if (r.length) { i = r.map(function () { return e(this).text() }).get().join(", ") } else { i = t.placeholder } return s.text(i).addClass(t.select.attr("class")).addClass(r.attr("class")) }) }, setButtonCount: function () { var e = this.selected(); if (this.isMultiple) { this.buttonCount[e.length > 1 ? "show" : "hide"]().text(e.length) } }, refresh: function () { this.setButtonText(); this.setButtonCount() }, open: e.noop, close: e.noop, disable: function () { this._setDisabled(true); this.button.addClass("ui-disabled") }, enable: function () { this._setDisabled(false); this.button.removeClass("ui-disabled") } }); e(n).bind("pagecreate create", function (t) { e.mobile.selectmenu.prototype.enhanceWithin(t.target, true) }) })(e); (function (e, r) { var i = function (r) { var i = r.select, s = r.selectID, o = r.label, u = r.select.closest(".ui-page"), a = r._selectOptions(), f = r.isMultiple = r.select[0].multiple, l = s + "-button", c = s + "-menu", h = e("<div data-" + e.mobile.ns + "role='dialog' data-" + e.mobile.ns + "theme='" + r.options.theme + "' data-" + e.mobile.ns + "overlay-theme='" + r.options.overlayTheme + "'>" + "<div data-" + e.mobile.ns + "role='header'>" + "<div class='ui-title'>" + o.getEncodedText() + "</div>" + "</div>" + "<div data-" + e.mobile.ns + "role='content'></div>" + "</div>"), p = e("<div>", { "class": "ui-selectmenu" }).insertAfter(r.select).popup({ theme: "a" }), d = e("<ul>", { "class": "ui-selectmenu-list", id: c, role: "listbox", "aria-labelledby": l }).attr("data-" + e.mobile.ns + "theme", r.options.theme).appendTo(p), v = e("<div>", { "class": "ui-header ui-bar-" + r.options.theme }).prependTo(p), m = e("<h1>", { "class": "ui-title" }).appendTo(v), g, y, b; if (r.isMultiple) { b = e("<a>", { text: r.options.closeText, href: "#", "class": "ui-btn-left" }).attr("data-" + e.mobile.ns + "iconpos", "notext").attr("data-" + e.mobile.ns + "icon", "delete").appendTo(v).buttonMarkup() } e.extend(r, { select: r.select, selectID: s, buttonId: l, menuId: c, thisPage: u, menuPage: h, label: o, selectOptions: a, isMultiple: f, theme: r.options.theme, listbox: p, list: d, header: v, headerTitle: m, headerClose: b, menuPageContent: g, menuPageClose: y, placeholder: "", build: function () { var t = this; t.refresh(); t.select.attr("tabindex", "-1").focus(function () { e(this).blur(); t.button.focus() }); t.button.bind("vclick keydown", function (n) { if (n.type === "vclick" || n.keyCode && (n.keyCode === e.mobile.keyCode.ENTER || n.keyCode === e.mobile.keyCode.SPACE)) { t.open(); n.preventDefault() } }); t.list.attr("role", "listbox").bind("focusin", function (t) { e(t.target).attr("tabindex", "0").trigger("vmouseover") }).bind("focusout", function (t) { e(t.target).attr("tabindex", "-1").trigger("vmouseout") }).delegate("li:not(.ui-disabled, .ui-li-divider)", "click", function (n) { var i = t.select[0].selectedIndex, s = t.list.find("li:not(.ui-li-divider)").index(this), o = t._selectOptions().eq(s)[0]; o.selected = t.isMultiple ? !o.selected : true; if (t.isMultiple) { e(this).find(".ui-icon").toggleClass("ui-icon-checkbox-on", o.selected).toggleClass("ui-icon-checkbox-off", !o.selected) } if (t.isMultiple || i !== s) { t.select.trigger("change") } if (t.isMultiple) { t.list.find("li:not(.ui-li-divider)").eq(s).addClass("ui-btn-down-" + r.options.theme).find("a").first().focus() } else { t.close() } n.preventDefault() }).keydown(function (t) { var n = e(t.target), i = n.closest("li"), s, o; switch (t.keyCode) { case 38: s = i.prev().not(".ui-selectmenu-placeholder"); if (s.is(".ui-li-divider")) { s = s.prev() } if (s.length) { n.blur().attr("tabindex", "-1"); s.addClass("ui-btn-down-" + r.options.theme).find("a").first().focus() } return false; case 40: o = i.next(); if (o.is(".ui-li-divider")) { o = o.next() } if (o.length) { n.blur().attr("tabindex", "-1"); o.addClass("ui-btn-down-" + r.options.theme).find("a").first().focus() } return false; case 13: case 32: n.trigger("click"); return false } }); t.menuPage.bind("pagehide", function () { t.list.appendTo(t.listbox); t._focusButton(); e.mobile._bindPageRemove.call(t.thisPage) }); t.listbox.bind("popupafterclose", function (e) { t.close() }); if (t.isMultiple) { t.headerClose.click(function () { if (t.menuType === "overlay") { t.close(); return false } }) } t.thisPage.addDependents(this.menuPage) }, _isRebuildRequired: function () { var e = this.list.find("li"), t = this._selectOptions(); return t.text() !== e.text() }, selected: function () { return this._selectOptions().filter(":selected:not( :jqmData(placeholder='true') )") }, refresh: function (t, n) { var r = this, i = this.element, s = this.isMultiple, o; if (t || this._isRebuildRequired()) { r._buildList() } o = this.selectedIndices(); r.setButtonText(); r.setButtonCount(); r.list.find("li:not(.ui-li-divider)").removeClass(e.mobile.activeBtnClass).attr("aria-selected", false).each(function (t) { if (e.inArray(t, o) > -1) { var n = e(this); n.attr("aria-selected", true); if (r.isMultiple) { n.find(".ui-icon").removeClass("ui-icon-checkbox-off").addClass("ui-icon-checkbox-on") } else { if (n.is(".ui-selectmenu-placeholder")) { n.next().addClass(e.mobile.activeBtnClass) } else { n.addClass(e.mobile.activeBtnClass) } } } }) }, close: function () { if (this.options.disabled || !this.isOpen) { return } var t = this; if (t.menuType === "page") { e.mobile.back() } else { t.listbox.popup("close"); t.list.appendTo(t.listbox); t._focusButton() } t.isOpen = false }, open: function () { function d() { var t = n.list.find("." + e.mobile.activeBtnClass + " a"); if (t.length === 0) { t = n.list.find("li.ui-btn:not( :jqmData(placeholder='true') ) a") } t.first().focus().closest("li").addClass("ui-btn-down-" + r.options.theme) } if (this.options.disabled) { return } var n = this, i = e(t), s = n.list.parent(), o = s.outerHeight(), u = s.outerWidth(), a = e("." + e.mobile.activePageClass), f = i.scrollTop(), l = n.button.offset().top, c = i.height(), p = i.width(); n.button.addClass(e.mobile.activeBtnClass); setTimeout(function () { n.button.removeClass(e.mobile.activeBtnClass) }, 300); if (o > c - 80 || !e.support.scrollTop) { n.menuPage.appendTo(e.mobile.pageContainer).page(); n.menuPageContent = h.find(".ui-content"); n.menuPageClose = h.find(".ui-header a"); n.thisPage.unbind("pagehide.remove"); if (f === 0 && l > c) { n.thisPage.one("pagehide", function () { e(this).jqmData("lastScroll", l) }) } n.menuPage.one("pageshow", function () { d(); n.isOpen = true }); n.menuType = "page"; n.menuPageContent.append(n.list); n.menuPage.find("div .ui-title").text(n.label.text()); e.mobile.changePage(n.menuPage, { transition: e.mobile.defaultDialogTransition }) } else { n.menuType = "overlay"; n.listbox.one("popupafteropen", d).popup("open", { x: n.button.offset().left + n.button.outerWidth() / 2, y: n.button.offset().top + n.button.outerHeight() / 2 }); n.isOpen = true } }, _buildList: function () { var t = this, r = this.options, i = this.placeholder, s = true, o = [], u = [], a = t.isMultiple ? "checkbox-off" : "false"; t.list.empty().filter(".ui-listview").listview("destroy"); var f = t.select.find("option"), l = f.length, c = this.select[0], h = "data-" + e.mobile.ns, p = h + "option-index", d = h + "icon", v = h + "role", m = h + "placeholder", g = n.createDocumentFragment(), y = false, b; for (var w = 0; w < l; w++, y = false) { var E = f[w], S = e(E), x = E.parentNode, T = S.text(), N = n.createElement("a"), C = []; N.setAttribute("href", "#"); N.appendChild(n.createTextNode(T)); if (x !== c && x.nodeName.toLowerCase() === "optgroup") { var k = x.getAttribute("label"); if (k !== b) { var L = n.createElement("li"); L.setAttribute(v, "list-divider"); L.setAttribute("role", "option"); L.setAttribute("tabindex", "-1"); L.appendChild(n.createTextNode(k)); g.appendChild(L); b = k } } if (s && (!E.getAttribute("value") || T.length === 0 || S.jqmData("placeholder"))) { s = false; y = true; E.setAttribute(m, true); if (r.hidePlaceholderMenuItems) { C.push("ui-selectmenu-placeholder") } if (!i) { i = t.placeholder = T } } var A = n.createElement("li"); if (E.disabled) { C.push("ui-disabled"); A.setAttribute("aria-disabled", true) } A.setAttribute(p, w); A.setAttribute(d, a); if (y) { A.setAttribute(m, true) } A.className = C.join(" "); A.setAttribute("role", "option"); N.setAttribute("tabindex", "-1"); A.appendChild(N); g.appendChild(A) } t.list[0].appendChild(g); if (!this.isMultiple && !i.length) { this.header.hide() } else { this.headerTitle.text(this.placeholder) } t.list.listview() }, _button: function () { return e("<a>", { href: "#", role: "button", id: this.buttonId, "aria-haspopup": "true", "aria-owns": this.menuId }) } }) }; e(n).bind("selectmenubeforecreate", function (t) { var n = e(t.target).data("selectmenu"); if (!n.options.nativeMenu && n.element.parents(":jqmData(role='popup')").length === 0) { i(n) } }) })(e); (function (e, r) { e.widget("mobile.fixedtoolbar", e.mobile.widget, { options: { visibleOnPageShow: true, disablePageZoom: true, transition: "slide", fullscreen: false, tapToggle: true, tapToggleBlacklist: "a, button, input, select, textarea, .ui-header-fixed, .ui-footer-fixed, .ui-popup", hideDuringFocus: "input, textarea, select", updatePagePadding: true, trackPersistentToolbars: true, supportBlacklist: function () { var e = t, n = navigator.userAgent, r = navigator.platform, i = n.match(/AppleWebKit\/([0-9]+)/), s = !!i && i[1], o = n.match(/Fennec\/([0-9]+)/), u = !!o && o[1], a = n.match(/Opera Mobi\/([0-9]+)/), f = !!a && a[1]; if ((r.indexOf("iPhone") > -1 || r.indexOf("iPad") > -1 || r.indexOf("iPod") > -1) && s && s < 534 || e.operamini && {}.toString.call(e.operamini) === "[object OperaMini]" || a && f < 7458 || n.indexOf("Android") > -1 && s && s < 533 || u && u < 6 || "palmGetResource" in t && s && s < 534 || n.indexOf("MeeGo") > -1 && n.indexOf("NokiaBrowser/8.5.0") > -1) { return true } return false }, initSelector: ":jqmData(position='fixed')" }, _create: function () { var e = this, t = e.options, n = e.element, r = n.is(":jqmData(role='header')") ? "header" : "footer", i = n.closest(".ui-page"); if (t.supportBlacklist()) { e.destroy(); return } n.addClass("ui-" + r + "-fixed"); if (t.fullscreen) { n.addClass("ui-" + r + "-fullscreen"); i.addClass("ui-page-" + r + "-fullscreen") } else { i.addClass("ui-page-" + r + "-fixed") } e._addTransitionClass(); e._bindPageEvents(); e._bindToggleHandlers() }, _addTransitionClass: function () { var e = this.options.transition; if (e && e !== "none") { if (e === "slide") { e = this.element.is(".ui-header") ? "slidedown" : "slideup" } this.element.addClass(e) } }, _bindPageEvents: function () { var n = this, r = n.options, i = n.element; i.closest(".ui-page").bind("pagebeforeshow", function () { if (r.disablePageZoom) { e.mobile.zoom.disable(true) } if (!r.visibleOnPageShow) { n.hide(true) } }).bind("webkitAnimationStart animationstart updatelayout", function () { var e = this; if (r.updatePagePadding) { n.updatePagePadding(e) } }).bind("pageshow", function () { var i = this; n.updatePagePadding(i); if (r.updatePagePadding) { e(t).bind("throttledresize." + n.widgetName, function () { n.updatePagePadding(i) }) } }).bind("pagebeforehide", function (i, s) { if (r.disablePageZoom) { e.mobile.zoom.enable(true) } if (r.updatePagePadding) { e(t).unbind("throttledresize." + n.widgetName) } if (r.trackPersistentToolbars) { var u = e(".ui-footer-fixed:jqmData(id)", this), a = e(".ui-header-fixed:jqmData(id)", this), f = u.length && s.nextPage && e(".ui-footer-fixed:jqmData(id='" + u.jqmData("id") + "')", s.nextPage) || e(), l = a.length && s.nextPage && e(".ui-header-fixed:jqmData(id='" + a.jqmData("id") + "')", s.nextPage) || e(); if (f.length || l.length) { f.add(l).appendTo(e.mobile.pageContainer); s.nextPage.one("pageshow", function () { f.add(l).appendTo(this) }) } } }) }, _visible: true, updatePagePadding: function (t) { var n = this.element, r = n.is(".ui-header"); if (this.options.fullscreen) { return } t = t || n.closest(".ui-page"); e(t).css("padding-" + (r ? "top" : "bottom"), n.outerHeight()) }, _useTransition: function (n) { var r = e(t), i = this.element, s = r.scrollTop(), o = i.height(), u = i.closest(".ui-page").height(), a = e.mobile.getScreenHeight(), f = i.is(":jqmData(role='header')") ? "header" : "footer"; return !n && (this.options.transition && this.options.transition !== "none" && (f === "header" && !this.options.fullscreen && s > o || f === "footer" && !this.options.fullscreen && s + a < u - o) || this.options.fullscreen) }, show: function (e) { var t = "ui-fixed-hidden", n = this.element; if (this._useTransition(e)) { n.removeClass("out " + t).addClass("in") } else { n.removeClass(t) } this._visible = true }, hide: function (e) { var t = "ui-fixed-hidden", n = this.element, r = "out" + (this.options.transition === "slide" ? " reverse" : ""); if (this._useTransition(e)) { n.addClass(r).removeClass("in").animationComplete(function () { n.addClass(t).removeClass(r) }) } else { n.addClass(t).removeClass(r) } this._visible = false }, toggle: function () { this[this._visible ? "hide" : "show"]() }, _bindToggleHandlers: function () { var t = this, n = t.options, r = t.element; r.closest(".ui-page").bind("vclick", function (r) { if (n.tapToggle && !e(r.target).closest(n.tapToggleBlacklist).length) { t.toggle() } }).bind("focusin focusout", function (r) { if (screen.width < 500 && e(r.target).is(n.hideDuringFocus) && !e(r.target).closest(".ui-header-fixed, .ui-footer-fixed").length) { t[r.type === "focusin" && t._visible ? "hide" : "show"]() } }) }, destroy: function () { this.element.removeClass("ui-header-fixed ui-footer-fixed ui-header-fullscreen ui-footer-fullscreen in out fade slidedown slideup ui-fixed-hidden"); this.element.closest(".ui-page").removeClass("ui-page-header-fixed ui-page-footer-fixed ui-page-header-fullscreen ui-page-footer-fullscreen") } }); e(n).bind("pagecreate create", function (t) { if (e(t.target).jqmData("fullscreen")) { e(e.mobile.fixedtoolbar.prototype.options.initSelector, t.target).not(":jqmData(fullscreen)").jqmData("fullscreen", true) } e.mobile.fixedtoolbar.prototype.enhanceWithin(t.target) }) })(e); (function (e, t) { function a(e) { r = e.originalEvent; u = r.accelerationIncludingGravity; i = Math.abs(u.x); s = Math.abs(u.y); o = Math.abs(u.z); if (!t.orientation && (i > 7 || (o > 6 && s < 8 || o < 8 && s > 6) && i > 5)) { if (n.enabled) { n.disable() } } else if (!n.enabled) { n.enable() } } if (!(/iPhone|iPad|iPod/.test(navigator.platform) && navigator.userAgent.indexOf("AppleWebKit") > -1)) { return } var n = e.mobile.zoom, r, i, s, o, u; e(t).bind("orientationchange.iosorientationfix", n.enable).bind("devicemotion.iosorientationfix", a) })(e, this); (function (e, t, r) { function u() { i.removeClass("ui-mobile-rendering") } var i = e("html"), s = e("head"), o = e(t); e(t.document).trigger("mobileinit"); if (!e.mobile.gradeA()) { return } if (e.mobile.ajaxBlacklist) { e.mobile.ajaxEnabled = false } i.addClass("ui-mobile ui-mobile-rendering"); setTimeout(u, 5e3); e.extend(e.mobile, { initializePage: function () { var t = e(":jqmData(role='page'), :jqmData(role='dialog')"), r = e.mobile.path.parseLocation().hash.replace("#", ""), i = n.getElementById(r); if (!t.length) { t = e("body").wrapInner("<div data-" + e.mobile.ns + "role='page'></div>").children(0) } t.each(function () { var t = e(this); if (!t.jqmData("url")) { t.attr("data-" + e.mobile.ns + "url", t.attr("id") || location.pathname + location.search) } }); e.mobile.firstPage = t.first(); e.mobile.pageContainer = t.first().parent().addClass("ui-mobile-viewport"); o.trigger("pagecontainercreate"); e.mobile.showPageLoadingMsg(); u(); if (!(e.mobile.hashListeningEnabled && e.mobile.path.isHashValid(location.hash) && (e(i).is(':jqmData(role="page")') || e.mobile.path.isPath(r) || r === e.mobile.dialogHashKey))) { if (e.mobile.path.isHashValid(location.hash)) { e.mobile.urlHistory.initialDst = r.replace("#", "") } e.mobile.changePage(e.mobile.firstPage, { transition: "none", reverse: true, changeHash: false, fromHashChange: true }) } else { o.trigger("hashchange", [true]) } } }); e.mobile.navreadyDeferred.resolve(); e(function () { t.scrollTo(0, 1); e.mobile.defaultHomeScroll = !e.support.scrollTop || e(t).scrollTop() === 1 ? 0 : 1; if (e.fn.controlgroup) { e(n).bind("pagecreate create", function (t) { e(":jqmData(role='controlgroup')", t.target).jqmEnhanceable().controlgroup({ excludeInvisible: false }) }) } if (e.mobile.autoInitializePage) { e.mobile.initializePage() } o.load(e.mobile.silentScroll); if (!e.support.cssPointerEvents) { e(n).delegate(".ui-disabled", "vclick", function (e) { e.preventDefault(); e.stopImmediatePropagation() }) } }) })(e, this) })