Type.registerNamespace("Sys.Mvc"); Sys.Mvc.$create_AjaxOptions = function () { return {} }; Sys.Mvc.InsertionMode = function () { }; Sys.Mvc.InsertionMode.prototype = { replace: 0, insertBefore: 1, insertAfter: 2 }; Sys.Mvc.InsertionMode.registerEnum("Sys.Mvc.InsertionMode", false); Sys.Mvc.AjaxContext = function (e, t, n, r) { this.$3 = e; this.$4 = t; this.$1 = n; this.$0 = r }; Sys.Mvc.AjaxContext.prototype = { $0: 0, $1: null, $2: null, $3: null, $4: null, get_data: function () { if (this.$2) { return this.$2.get_responseData() } else { return null } }, get_insertionMode: function () { return this.$0 }, get_loadingElement: function () { return this.$1 }, get_object: function () { var e = this.get_response(); return e ? e.get_object() : null }, get_response: function () { return this.$2 }, set_response: function (e) { this.$2 = e; return e }, get_request: function () { return this.$3 }, get_updateTarget: function () { return this.$4 } }; Sys.Mvc.AsyncHyperlink = function () { }; Sys.Mvc.AsyncHyperlink.handleClick = function (e, t, n) { t.preventDefault(); Sys.Mvc.MvcHelpers.$2(e.href, "post", "", e, n) }; Sys.Mvc.MvcHelpers = function () { }; Sys.Mvc.MvcHelpers.$0 = function (e, t, n) { if (e.disabled) { return null } var r = e.name; if (r) { var i = e.tagName.toUpperCase(); var s = encodeURIComponent(r); var o = e; if (i === "INPUT") { var u = o.type; if (u === "submit") { return s + "=" + encodeURIComponent(o.value) } else if (u === "image") { return s + ".x=" + t + "&" + s + ".y=" + n } } else if (i === "BUTTON" && r.length && o.type === "submit") { return s + "=" + encodeURIComponent(o.value) } } return null }; Sys.Mvc.MvcHelpers.$1 = function (e) { var t = e.elements; var n = new Sys.StringBuilder; var r = t.length; for (var i = 0; i < r; i++) { var s = t[i]; var o = s.name; if (!o || !o.length) { continue } var u = s.tagName.toUpperCase(); if (u === "INPUT") { var a = s; var f = a.type; if (f === "text" || f === "password" || f === "hidden" || (f === "checkbox" || f === "radio") && s.checked) { n.append(encodeURIComponent(o)); n.append("="); n.append(encodeURIComponent(a.value)); n.append("&") } } else if (u === "SELECT") { var l = s; var c = l.options.length; for (var h = 0; h < c; h++) { var p = l.options[h]; if (p.selected) { n.append(encodeURIComponent(o)); n.append("="); n.append(encodeURIComponent(p.value)); n.append("&") } } } else if (u === "TEXTAREA") { n.append(encodeURIComponent(o)); n.append("="); n.append(encodeURIComponent(s.value)); n.append("&") } } var d = e._additionalInput; if (d) { n.append(d); n.append("&") } return n.toString() }; Sys.Mvc.MvcHelpers.$2 = function (e, t, n, r, i) { if (i.confirm) { if (!confirm(i.confirm)) { return } } if (i.url) { e = i.url } if (i.httpMethod) { t = i.httpMethod } if (n.length > 0 && !n.endsWith("&")) { n += "&" } n += "X-Requested-With=XMLHttpRequest"; var s = t.toUpperCase(); var o = s === "GET" || s === "POST"; if (!o) { n += "&"; n += "X-HTTP-Method-Override=" + s } var u = ""; if (s === "GET" || s === "DELETE") { if (e.indexOf("?") > -1) { if (!e.endsWith("&")) { e += "&" } e += n } else { e += "?"; e += n } } else { u = n } var a = new Sys.Net.WebRequest; a.set_url(e); if (o) { a.set_httpVerb(t) } else { a.set_httpVerb("POST"); a.get_headers()["X-HTTP-Method-Override"] = s } a.set_body(u); if (t.toUpperCase() === "PUT") { a.get_headers()["Content-Type"] = "application/x-www-form-urlencoded;" } a.get_headers()["X-Requested-With"] = "XMLHttpRequest"; var f = null; if (i.updateTargetId) { f = $get(i.updateTargetId) } var l = null; if (i.loadingElementId) { l = $get(i.loadingElementId) } var c = new Sys.Mvc.AjaxContext(a, f, l, i.insertionMode); var h = true; if (i.onBegin) { h = i.onBegin(c) !== false } if (l) { Sys.UI.DomElement.setVisible(c.get_loadingElement(), true) } if (h) { a.add_completed(Function.createDelegate(null, function (e) { Sys.Mvc.MvcHelpers.$3(a, i, c) })); a.invoke() } }; Sys.Mvc.MvcHelpers.$3 = function ($p0, $p1, $p2) { $p2.set_response($p0.get_executor()); if ($p1.onComplete && $p1.onComplete($p2) === false) { return } var $0 = $p2.get_response().get_statusCode(); if ($0 >= 200 && $0 < 300 || $0 === 304 || $0 === 1223) { if ($0 !== 204 && $0 !== 304 && $0 !== 1223) { var $1 = $p2.get_response().getResponseHeader("Content-Type"); if ($1 && $1.indexOf("application/x-javascript") !== -1) { eval($p2.get_data()) } else { Sys.Mvc.MvcHelpers.updateDomElement($p2.get_updateTarget(), $p2.get_insertionMode(), $p2.get_data()) } } if ($p1.onSuccess) { $p1.onSuccess($p2) } } else { if ($p1.onFailure) { $p1.onFailure($p2) } } if ($p2.get_loadingElement()) { Sys.UI.DomElement.setVisible($p2.get_loadingElement(), false) } }; Sys.Mvc.MvcHelpers.updateDomElement = function (e, t, n) { if (e) { switch (t) { case 0: e.innerHTML = n; break; case 1: if (n && n.length > 0) { e.innerHTML = n + e.innerHTML.trimStart() } break; case 2: if (n && n.length > 0) { e.innerHTML = e.innerHTML.trimEnd() + n } break } } }; Sys.Mvc.AsyncForm = function () { }; Sys.Mvc.AsyncForm.handleClick = function (e, t) { var n = Sys.Mvc.MvcHelpers.$0(t.target, t.offsetX, t.offsetY); e._additionalInput = n }; Sys.Mvc.AsyncForm.handleSubmit = function (e, t, n) { t.preventDefault(); var r = e.validationCallbacks; if (r) { for (var i = 0; i < r.length; i++) { var s = r[i]; if (!s()) { return } } } var o = Sys.Mvc.MvcHelpers.$1(e); Sys.Mvc.MvcHelpers.$2(e.action, e.method || "post", o, e, n) }; Sys.Mvc.AjaxContext.registerClass("Sys.Mvc.AjaxContext"); Sys.Mvc.AsyncHyperlink.registerClass("Sys.Mvc.AsyncHyperlink"); Sys.Mvc.MvcHelpers.registerClass("Sys.Mvc.MvcHelpers"); Sys.Mvc.AsyncForm.registerClass("Sys.Mvc.AsyncForm")