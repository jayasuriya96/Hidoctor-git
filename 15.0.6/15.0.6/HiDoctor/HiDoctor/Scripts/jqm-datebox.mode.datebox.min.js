(function (e) { e.extend(e.mobile.datebox.prototype.options, { themeButton: "a", themeInput: "e", useSetButton: true, validHours: false, repButton: true }); e.extend(e.mobile.datebox.prototype, { _dbox_run: function () { var e = this; e.drag.didRun = true; e._offset(e.drag.target[0], e.drag.target[1]); e.runButton = setTimeout(function () { e._dbox_run() }, 150) }, _dbox_vhour: function (t) { var n = this, r = this.options, i, s = [25, 0], o = [25, 0]; if (r.validHours === false) { return true } if (e.inArray(n.theDate.getHours(), r.validHours) > -1) { return true } i = n.theDate.getHours(); e.each(r.validHours, function () { if ((i < this ? 1 : -1) === t) { if (s[0] > Math.abs(this - i)) { s = [Math.abs(this - i), parseInt(this, 10)] } } else { if (o[0] > Math.abs(this - i)) { o = [Math.abs(this - i), parseInt(this, 10)] } } }); if (s[1] !== 0) { n.theDate.setHours(s[1]) } else { n.theDate.setHours(o[1]) } }, _dbox_enter: function (t) { var n = this; if (t.jqmData("field") === "M" && e.inArray(t.val(), n.__("monthsOfYearShort")) > -1) { n.theDate.setMonth(e.inArray(t.val(), n.__("monthsOfYearShort"))) } if (t.val() !== "" && t.val().toString().search(/^[0-9]+$/) === 0) { switch (t.jqmData("field")) { case "y": n.theDate.setFullYear(parseInt(t.val(), 10)); break; case "m": n.theDate.setMonth(parseInt(t.val(), 10) - 1); break; case "d": n.theDate.setDate(parseInt(t.val(), 10)); break; case "h": n.theDate.setHours(parseInt(t.val(), 10)); break; case "i": n.theDate.setMinutes(parseInt(t.val(), 10)); break } } n.refresh() } }); e.extend(e.mobile.datebox.prototype._build, { timebox: function () { this._build.datebox.apply(this, []) }, datebox: function () { var t = this, n = this.options, r, i, s, o = -2, u = "ui-datebox-", f = e("<div>"), l = e("<fieldset>"), c = f.clone(), h = l.clone(), p = e("<input type='" + t.inputType + "' />").addClass("ui-input-text ui-corner-all ui-shadow-inset ui-body-" + n.themeInput), d = e("<input type='text' />").addClass("ui-input-text ui-corner-all ui-shadow-inset ui-body-" + n.themeInput), v = e("<div>"), m = { theme: n.themeButton, icon: "plus", iconpos: "bottom", corners: true, shadow: true }, g = e.extend({}, m, { icon: "minus", iconpos: "top" }); if (typeof t.d.intHTML !== "boolean") { t.d.intHTML.empty().remove() } t.d.headerText = t._grabLabel() !== false ? t._grabLabel() : n.mode === "datebox" ? t.__("titleDateDialogLabel") : t.__("titleTimeDialogLabel"); t.d.intHTML = e("<span>"); if (t.inputType !== "number") { p.attr("pattern", "[0-9]*") } t.fldOrder = n.mode === "datebox" ? t.__("dateFieldOrder") : t.__("timeFieldOrder"); t._check(); t._minStepFix(); t._dbox_vhour(typeof t._dbox_delta !== "undefined" ? t._dbox_delta : 1); if (n.mode === "datebox") { e('<div class="' + u + 'header"><h4>' + t._formatter(t.__("headerFormat"), t.theDate) + "</h4></div>").appendTo(t.d.intHTML) } for (r = 0; r <= t.fldOrder.length; r++) { s = ["a", "b", "c", "d", "e", "f"][r]; switch (t.fldOrder[r]) { case "y": case "m": case "d": case "h": e("<div>").append(t._makeEl(p, { attr: { field: t.fldOrder[r], amount: 1 } })).addClass("ui-block-" + s).appendTo(c); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(m).appendTo(l); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(g).appendTo(h); o++; break; case "a": if (t.__("timeFormat") === 12) { e("<div>").append(t._makeEl(d, { attr: { field: t.fldOrder[r], amount: 1 } })).addClass("ui-block-" + s).appendTo(c); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(m).appendTo(l); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(g).appendTo(h); o++ } break; case "M": e("<div>").append(t._makeEl(d, { attr: { field: t.fldOrder[r], amount: 1 } })).addClass("ui-block-" + s).appendTo(c); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(m).appendTo(l); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: 1 } }).addClass("ui-block-" + s).buttonMarkup(g).appendTo(h); o++; break; case "i": e("<div>").append(t._makeEl(p, { attr: { field: t.fldOrder[r], amount: n.minuteStep } })).addClass("ui-block-" + s).appendTo(c); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: n.minuteStep } }).addClass("ui-block-" + s).buttonMarkup(m).appendTo(l); t._makeEl(v, { attr: { field: t.fldOrder[r], amount: n.minuteStep } }).addClass("ui-block-" + s).buttonMarkup(g).appendTo(h); o++; break } } l.addClass("ui-grid-" + ["a", "b", "c", "d", "e"][o]).appendTo(t.d.intHTML); c.addClass("ui-datebox-dboxin").addClass("ui-grid-" + ["a", "b", "c", "d", "e"][o]).appendTo(t.d.intHTML); h.addClass("ui-grid-" + ["a", "b", "c", "d", "e"][o]).appendTo(t.d.intHTML); c.find("input").each(function () { switch (e(this).jqmData("field")) { case "y": e(this).val(t.theDate.getFullYear()); break; case "m": e(this).val(t.theDate.getMonth() + 1); break; case "d": e(this).val(t.theDate.getDate()); break; case "h": if (t.__("timeFormat") === 12) { if (t.theDate.getHours() > 12) { e(this).val(t.theDate.getHours() - 12); break } else { if (t.theDate.getHours() === 0) { e(this).val(12); break } } } e(this).val(t.theDate.getHours()); break; case "i": e(this).val(t._zPad(t.theDate.getMinutes())); break; case "M": e(this).val(t.__("monthsOfYearShort")[t.theDate.getMonth()]); break; case "a": e(this).val(t.theDate.getHours() > 11 ? t.__("meridiem")[1] : t.__("meridiem")[0]); break } }); if (t.dateOK !== true) { c.find("input").addClass(u + "griddate-disable") } else { c.find("." + u + "griddate-disable").removeClass(u + "griddate-disable") } if (n.useSetButton || n.useClearButton) { i = e("<div>", { "class": u + "controls" }); if (n.useSetButton) { e('<a href="#">' + (n.mode === "datebox" ? t.__("setDateButtonLabel") : t.__("setTimeButtonLabel")) + "</a>").appendTo(i).buttonMarkup({ theme: n.theme, icon: "check", iconpos: "left", corners: true, shadow: true }).on(n.clickEventAlt, function (e) { e.preventDefault(); if (t.dateOK === true) { t.d.input.trigger("datebox", { method: "set", value: t._formatter(t.__fmt(), t.theDate), date: t.theDate }); t.d.input.trigger("datebox", { method: "close" }) } }) } if (n.useClearButton) { e('<a href="#">' + t.__("clearButton") + "</a>").appendTo(i).buttonMarkup({ theme: n.theme, icon: "delete", iconpos: "left", corners: true, shadow: true }).on(n.clickEventAlt, function (e) { e.preventDefault(); t.d.input.val(""); t.d.input.trigger("datebox", { method: "clear" }); t.d.input.trigger("datebox", { method: "close" }) }) } if (n.useCollapsedBut) { i.addClass("ui-datebox-collapse") } i.appendTo(t.d.intHTML) } if (n.repButton === false) { l.on(n.clickEvent, "div", function (n) { n.preventDefault(); t._dbox_delta = 1; t._offset(e(this).jqmData("field"), e(this).jqmData("amount")) }); h.on(n.clickEvent, "div", function (n) { n.preventDefault(); t._dbox_delta = -1; t._offset(e(this).jqmData("field"), e(this).jqmData("amount") * -1) }) } c.on("change", "input", function () { t._dbox_enter(e(this)) }); if (t.wheelExists) { c.on("mousewheel", "input", function (n, r) { n.preventDefault(); t._dbox_delta = r < 0 ? -1 : 1; t._offset(e(this).jqmData("field"), (r < 0 ? -1 : 1) * e(this).jqmData("amount")) }) } if (n.repButton === true) { l.on(t.drag.eStart, "div", function (n) { s = [e(this).jqmData("field"), e(this).jqmData("amount")]; t.drag.move = true; t._dbox_delta = 1; t._offset(s[0], s[1]); if (!t.runButton) { t.drag.target = s; t.runButton = setTimeout(function () { t._dbox_run() }, 500) } }); h.on(t.drag.eStart, "div", function (n) { s = [e(this).jqmData("field"), e(this).jqmData("amount") * -1]; t.drag.move = true; t._dbox_delta = -1; t._offset(s[0], s[1]); if (!t.runButton) { t.drag.target = s; t.runButton = setTimeout(function () { t._dbox_run() }, 500) } }) } } }); e.extend(e.mobile.datebox.prototype._drag, { timebox: function () { this._drag.datebox.apply(this) }, datebox: function () { var t = this, n = this.options, r = this.drag; if (n.repButton === true) { e(document).on(r.eEndA, function (e) { if (r.move) { e.preventDefault(); clearTimeout(t.runButton); t.runButton = false; r.move = false } }) } } }) })(jQuery)