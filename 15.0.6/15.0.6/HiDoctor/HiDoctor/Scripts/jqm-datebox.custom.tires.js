(function (e) { e.extend(e.mobile.datebox.prototype.options, { themeTireHigh: "e", themeTirePick: "a", themeTire: "d", useSetButton: true, tireField: { Tr: [15, 16, 17, 18], Tw: [7, 8, 9, 10], TW: [2, 3, 4, 5] }, tireFieldOrder: ["Tr", "Tw", "TW"], tireOutput: "%Xrr x %Xww, %XWyrs", tireDefault: [17, 8, 5], tireboxlang: { tireTitleString: "Tire Radius, Width, and Warrenty", tireYears: "years", tireSet: "Looks Good" } }); e.extend(e.mobile.datebox.prototype, { _tireboxDoSet: function () { var e = this, t = this.options; if (typeof e.tireChoice === "undefined") { e.tireChoice = this._makeDate(this.d.input.val()) } e.d.input.trigger("datebox", { method: "set", value: e._formatter(t.tireOutput, e.tireChoice), date: e.tireChoice }) }, _tbox_offset: function (t, n) { var r = this, i, s = this.options, o = e.inArray(t, ["Tr", "Tw", "TW"]), u = s.tireField[t].slice(); if (n > 0) { for (i = 0; i < 5; i++) { e.merge(u, s.tireField[t]) } } else { u.reverse(); n = n * -1; for (i = 0; i < 5; i++) { e.merge(u, s.tireField[t].slice().reverse()) } } r.tireChoice[o] = u[e.inArray(r.tireChoice[o], u) + n]; if (s.useImmediate) { r.d.input.trigger("datebox", { method: "set", value: r._formatter(s.tireOutput, r.tireChoice), date: r.tireChoice }) } r.refresh() }, _tbox_arr: function (t, n) { var r = this.options.tireField[t], i, s = [], o = [], u = false; for (i in r) { if (u === false && r[i] !== n) { s.push(r[i]) } else if (r[i] === n) { u = true } else { o.push(r[i]) } } while (s.length < 10) { for (i = r.length; i > 0; i--) { s.unshift(r[i - 1]) } } while (s.length > 10) { s.shift() } while (o.length < 10) { for (i = 0; i < r.length; i++) { o.push(r[i]) } } o.length = 10; s.push(n); return e.merge(e.merge([], s), o) }, _tbox_pos: function () { var t = this, n = null, r = null, i = this.d.intHTML.find(".ui-datebox-flipcontent").innerHeight(), s = null; t.d.intHTML.find(".ui-datebox-flipcenter").each(function () { n = e(this); r = n.innerHeight(); n.css("top", (i / 2 - r / 2 + 4) * -1) }); t.d.intHTML.find("ul").each(function () { n = e(this); i = n.parent().innerHeight(); r = n.find("li").first(); s = n.find("li").size() * r.outerHeight(); r.css("marginTop", (s / 2 - i / 2 + r.outerHeight() / 2) * -1) }) } }); e.extend(e.mobile.datebox.prototype._parser, { tirebox: function (e) { var t = this.options, n, r = t.tireOutput, i = t.tireDefault, s = null, o = null; r = r.replace(/%(X|0|-)*([a-z])/gi, function (e, t, n) { switch (n) { case "r": case "w": case "W": return "(" + e + "|" + "[0-9]+" + ")"; default: return ".+?" } }); r = new RegExp("^" + r + "$"); s = r.exec(e); o = r.exec(t.tireOutput); if (s === null || s.length !== o.length) { return t.tireDefault } for (n = 0; n < s.length; n++) { if (o[n].match(/^%.*r$/)) { i[0] = parseInt(s[n], 10) } if (o[n].match(/^%.*w$/)) { i[1] = parseInt(s[n], 10) } if (o[n].match(/^%.*W$/)) { i[2] = parseInt(s[n], 10) } } return i } }); e.extend(e.mobile.datebox.prototype._customformat, { tirebox: function (e, t) { switch (e) { case "r": return t[0]; case "w": return t[1]; case "W": return t[2] } } }); e.extend(e.mobile.datebox.prototype._build, { tirebox: function () { var t = this, n = this.options, r, i, s, o, u, a = "ui-datebox-", f = this._makeDate(this.d.input.val()), l = e("<div class='ui-overlay-shadow'><ul></ul></div>"), c = e("<div>", { "class": a + "flipcontent" }); if (typeof t.tireChoice === "undefined") { t.tireChoice = f.slice() } if (typeof t.d.intHTML !== "boolean") { t.d.intHTML.empty().remove() } t.d.input.on("datebox", function (e, n) { if (n.method === "postrefresh") { t._tbox_pos() } }); t.d.headerText = t._grabLabel() !== false ? t._grabLabel() : t.__("tireTitleString"); t.d.intHTML = e("<span>"); t.fldOrder = n.tireFieldOrder; e('<div class="' + a + 'header"><table style="width:250px; margin-left:15px; text-align:center"><tr><td>Radius</td><td>Width</td><td>Warrenty</td></tr></table></div>').appendTo(t.d.intHTML).find("td").css("width", "33%"); t.d.intHTML.append(c); for (i = 0; i < t.fldOrder.length; i++) { switch (t.fldOrder[i]) { case "Tr": u = t._tbox_arr("Tr", t.tireChoice[0]); s = t._makeEl(l, { attr: { field: "Tr", amount: 1 } }); for (r in u) { o = r != 10 ? u[r] === f[0] ? n.themeTireHigh : n.themeTire : n.themeTirePick; e("<li>", { "class": "ui-body-" + o }).html("<span>" + u[r] + "</span>").appendTo(s.find("ul")) } s.appendTo(c); break; case "Tw": u = t._tbox_arr("Tw", t.tireChoice[1]); s = t._makeEl(l, { attr: { field: "Tw", amount: 1 } }); for (r in u) { o = r != 10 ? u[r] === f[1] ? n.themeTireHigh : n.themeTire : n.themeTirePick; e("<li>", { "class": "ui-body-" + o }).html("<span>" + u[r] + "</span>").appendTo(s.find("ul")) } s.appendTo(c); break; case "TW": u = t._tbox_arr("TW", t.tireChoice[2]); s = t._makeEl(l, { attr: { field: "TW", amount: 1 } }); for (r in u) { o = r != 10 ? u[r] === f[2] ? n.themeTireHigh : n.themeTire : n.themeTirePick; e("<li>", { "class": "ui-body-" + o }).html("<span>" + u[r] + " " + t.__("tireYears") + "</span>").appendTo(s.find("ul")) } s.appendTo(c); break } } e("<div>", { "class": a + "flipcenter ui-overlay-shadow" }).css("pointerEvents", "none").appendTo(t.d.intHTML); if (n.useSetButton) { i = e("<div>", { "class": a + "controls" }); if (n.useSetButton) { e('<a href="#">' + t.__("tireSet") + "</a>").appendTo(i).buttonMarkup({ theme: n.theme, icon: "check", iconpos: "left", corners: true, shadow: true }).on(n.clickEvent, function (e) { e.preventDefault(); t.d.input.trigger("datebox", { method: "set", value: t._formatter(n.tireOutput, t.tireChoice), date: t.tireChoice }); t.d.input.trigger("datebox", { method: "close" }) }) } i.appendTo(t.d.intHTML) } if (t.wheelExists) { t.d.intHTML.on("mousewheel", ".ui-overlay-shadow", function (n, r) { n.preventDefault(); t._tbox_offset(e(this).jqmData("field"), (r < 0 ? 1 : -1) * e(this).jqmData("amount")) }) } t.d.intHTML.on(t.drag.eStart, "ul", function (n, r) { if (!t.drag.move) { if (typeof r !== "undefined") { n = r } t.drag.move = true; t.drag.target = e(this).find("li").first(); t.drag.pos = parseInt(t.drag.target.css("marginTop").replace(/px/i, ""), 10); t.drag.start = t.touch ? n.originalEvent.changedTouches[0].pageY : n.pageY; t.drag.end = false; n.stopPropagation(); n.preventDefault() } }); t.d.intHTML.on(t.drag.eStart, "." + a + "flipcenter", function (n) { if (!t.drag.move) { t.drag.target = t.touch ? n.originalEvent.changedTouches[0].pageX - e(n.currentTarget).offset().left : n.pageX - e(n.currentTarget).offset().left; t.drag.tmp = t.d.intHTML.find("." + a + "flipcenter").innerWidth() / (e.inArray("a", t.fldOrder) > -1 && t.__("timeFormat") !== 12 ? t.fldOrder.length - 1 : t.fldOrder.length); e(t.d.intHTML.find("ul").get(parseInt(t.drag.target / t.drag.tmp, 10))).trigger(t.drag.eStart, n) } }) } }); e.extend(e.mobile.datebox.prototype._drag, { tirebox: function () { var t = this, n = this.options, r = this.drag; e(document).on(r.eMove, function (e) { if (r.move && n.mode === "tirebox") { r.end = t.touch ? e.originalEvent.changedTouches[0].pageY : e.pageY; r.target.css("marginTop", r.pos + r.end - r.start + "px"); e.preventDefault(); e.stopPropagation(); return false } }); e(document).on(r.eEnd, function (e) { if (r.move && n.mode === "tirebox") { r.move = false; if (r.end !== false) { e.preventDefault(); e.stopPropagation(); r.tmp = r.target.parent().parent(); t._tbox_offset(r.tmp.jqmData("field"), parseInt((r.start - r.end) / r.target.innerHeight(), 10) * r.tmp.jqmData("amount")) } r.start = false; r.end = false } }) } }) })(jQuery)