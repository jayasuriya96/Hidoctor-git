(function (e, t) { var n = function (e, t) { return new n.fn.init(e, t, rootjQuery) }; n.Deferred = function (e) { var t = n._Deferred(), r = n._Deferred(), i; n.extend(t, { then: function (e, n) { t.done(e).fail(n); return this }, always: function () { return t.done.apply(t, arguments).fail.apply(this, arguments) }, fail: r.done, rejectWith: r.resolveWith, reject: r.resolve, isRejected: r.isResolved, pipe: function (e, r) { return n.Deferred(function (i) { n.each({ done: [e, "resolve"], fail: [r, "reject"] }, function (e, r) { var s = r[0], o = r[1], u; if (n.isFunction(s)) { t[e](function () { u = s.apply(this, arguments); if (u && n.isFunction(u.promise)) { u.promise().then(i.resolve, i.reject) } else { i[o + "With"](this === t ? i : this, [u]) } }) } else { t[e](i[o]) } }) }).promise() }, promise: function (e) { if (e == null) { if (i) { return i } i = e = {} } var n = promiseMethods.length; while (n--) { e[promiseMethods[n]] = t[promiseMethods[n]] } return e } }); t.done(r.cancel).fail(t.cancel); delete t.cancel; if (e) { e.call(t, t) } return t }; n.Event = function (e, t) { if (!this.preventDefault) { return new n.Event(e, t) } if (e && e.type) { this.originalEvent = e; this.type = e.type; this.isDefaultPrevented = e.defaultPrevented || e.returnValue === false || e.getPreventDefault && e.getPreventDefault() ? returnTrue : returnFalse } else { this.type = e } if (t) { n.extend(this, t) } this.timeStamp = n.now(); this[n.expando] = true }; n._Deferred = function () { var e = [], t, r, i, s = { done: function () { if (!i) { var r = arguments, o, u, a, f, l; if (t) { l = t; t = 0 } for (o = 0, u = r.length; o < u; o++) { a = r[o]; f = n.type(a); if (f === "array") { s.done.apply(s, a) } else if (f === "function") { e.push(a) } } if (l) { s.resolveWith(l[0], l[1]) } } return this }, resolveWith: function (n, s) { if (!i && !t && !r) { s = s || []; r = 1; try { while (e[0]) { e.shift().apply(n, s) } } finally { t = [n, s]; r = 0 } } return this }, resolve: function () { s.resolveWith(this, arguments); return this }, isResolved: function () { return !!(r || t) }, cancel: function () { i = 1; e = []; return this } }; return s }; n._data = function (e, t, r) { return n.data(e, t, r, true) }; n._mark = function (e, r) { if (e) { r = (r || "fx") + "mark"; n.data(e, r, (n.data(e, r, t, true) || 0) + 1, true) } }; n._unmark = function (e, r, i) { if (e !== true) { i = r; r = e; e = false } if (r) { i = i || "fx"; var s = i + "mark", o = e ? 0 : (n.data(r, s, t, true) || 1) - 1; if (o) { n.data(r, s, o, true) } else { n.removeData(r, s, true); handleQueueMarkDefer(r, i, "mark") } } }; n.acceptData = function (e) { if (e.nodeName) { var t = n.noData[e.nodeName.toLowerCase()]; if (t) { return !(t === true || e.getAttribute("classid") !== t) } } return true }; n.access = function (e, r, i, s, o, u) { var a = e.length; if (typeof r === "object") { for (var f in r) { n.access(e, f, r[f], s, o, i) } return e } if (i !== t) { s = !u && s && n.isFunction(i); for (var l = 0; l < a; l++) { o(e[l], r, s ? i.call(e[l], l, o(e[l], r)) : i, u) } return e } return a ? o(e[0], r) : t }; n.active = 0; n.ajax = function (e, r) { function S(e, r, c, h) { if (y === 2) { return } y = 2; if (m) { clearTimeout(m) } v = t; p = h || ""; E.readyState = e > 0 ? 4 : 0; var d, g, w, S = r, x = c ? ajaxHandleResponses(i, E, c) : t, T, N; if (e >= 200 && e < 300 || e === 304) { if (i.ifModified) { if (T = E.getResponseHeader("Last-Modified")) { n.lastModified[l] = T } if (N = E.getResponseHeader("Etag")) { n.etag[l] = N } } if (e === 304) { S = "notmodified"; d = true } else { try { g = ajaxConvert(i, x); S = "success"; d = true } catch (C) { S = "parsererror"; w = C } } } else { w = S; if (!S || e) { S = "error"; if (e < 0) { e = 0 } } } E.status = e; E.statusText = "" + (r || S); if (d) { u.resolveWith(s, [g, S, E]) } else { u.rejectWith(s, [E, S, w]) } E.statusCode(f); f = t; if (b) { o.trigger("ajax" + (d ? "Success" : "Error"), [E, i, d ? g : w]) } a.resolveWith(s, [E, S]); if (b) { o.trigger("ajaxComplete", [E, i]); if (!--n.active) { n.event.trigger("ajaxStop") } } } if (typeof e === "object") { r = e; e = t } r = r || {}; var i = n.ajaxSetup({}, r), s = i.context || i, o = s !== i && (s.nodeType || s instanceof n) ? n(s) : n.event, u = n.Deferred(), a = n._Deferred(), f = i.statusCode || {}, l, c = {}, h = {}, p, d, v, m, g, y = 0, b, w, E = { readyState: 0, setRequestHeader: function (e, t) { if (!y) { var n = e.toLowerCase(); e = h[n] = h[n] || e; c[e] = t } return this }, getAllResponseHeaders: function () { return y === 2 ? p : null }, getResponseHeader: function (e) { var n; if (y === 2) { if (!d) { d = {}; while (n = rheaders.exec(p)) { d[n[1].toLowerCase()] = n[2] } } n = d[e.toLowerCase()] } return n === t ? null : n }, overrideMimeType: function (e) { if (!y) { i.mimeType = e } return this }, abort: function (e) { e = e || "abort"; if (v) { v.abort(e) } S(0, e); return this } }; u.promise(E); E.success = E.done; E.error = E.fail; E.complete = a.done; E.statusCode = function (e) { if (e) { var t; if (y < 2) { for (t in e) { f[t] = [f[t], e[t]] } } else { t = e[E.status]; E.then(t, t) } } return this }; i.url = ((e || i.url) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//"); i.dataTypes = n.trim(i.dataType || "*").toLowerCase().split(rspacesAjax); if (i.crossDomain == null) { g = rurl.exec(i.url.toLowerCase()); i.crossDomain = !!(g && (g[1] != ajaxLocParts[1] || g[2] != ajaxLocParts[2] || (g[3] || (g[1] === "http:" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443)))) } if (i.data && i.processData && typeof i.data !== "string") { i.data = n.param(i.data, i.traditional) } inspectPrefiltersOrTransports(prefilters, i, r, E); if (y === 2) { return false } b = i.global; i.type = i.type.toUpperCase(); i.hasContent = !rnoContent.test(i.type); if (b && n.active++ === 0) { n.event.trigger("ajaxStart") } if (!i.hasContent) { if (i.data) { i.url += (rquery.test(i.url) ? "&" : "?") + i.data; delete i.data } l = i.url; if (i.cache === false) { var x = n.now(), T = i.url.replace(rts, "$1_=" + x); i.url = T + (T === i.url ? (rquery.test(i.url) ? "&" : "?") + "_=" + x : "") } } if (i.data && i.hasContent && i.contentType !== false || r.contentType) { E.setRequestHeader("Content-Type", i.contentType) } if (i.ifModified) { l = l || i.url; if (n.lastModified[l]) { E.setRequestHeader("If-Modified-Since", n.lastModified[l]) } if (n.etag[l]) { E.setRequestHeader("If-None-Match", n.etag[l]) } } E.setRequestHeader("Accept", i.dataTypes[0] && i.accepts[i.dataTypes[0]] ? i.accepts[i.dataTypes[0]] + (i.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : i.accepts["*"]); for (w in i.headers) { E.setRequestHeader(w, i.headers[w]) } if (i.beforeSend && (i.beforeSend.call(s, E, i) === false || y === 2)) { E.abort(); return false } for (w in { success: 1, error: 1, complete: 1 }) { E[w](i[w]) } v = inspectPrefiltersOrTransports(transports, i, r, E); if (!v) { S(-1, "No Transport") } else { E.readyState = 1; if (b) { o.trigger("ajaxSend", [E, i]) } if (i.async && i.timeout > 0) { m = setTimeout(function () { E.abort("timeout") }, i.timeout) } try { y = 1; v.send(c, S) } catch (N) { if (y < 2) { S(-1, N) } else { n.error(N) } } } return E }; n.ajaxPrefilter = function (e, t) { if (typeof e !== "string") { t = e; e = "*" } if (n.isFunction(t)) { var r = e.toLowerCase().split(rspacesAjax), i = 0, s = r.length, o, u, a; for (; i < s; i++) { o = r[i]; a = /^\+/.test(o); if (a) { o = o.substr(1) || "*" } u = structure[o] = structure[o] || []; u[a ? "unshift" : "push"](t) } } }; n.ajaxSettings = { url: "http://localhost:25813/", isLocal: false, global: true, type: "GET", contentType: "application/x-www-form-urlencoded", processData: true, async: true, accepts: {}, contents: {}, responseFields: {}, converters: {}, flatOptions: {}, jsonp: "callback" }; n.ajaxSetup = function (e, t) { if (t) { ajaxExtend(e, n.ajaxSettings) } else { t = e; e = n.ajaxSettings } ajaxExtend(e, t); return e }; n.ajaxTransport = function (e, t) { if (typeof e !== "string") { t = e; e = "*" } if (n.isFunction(t)) { var r = e.toLowerCase().split(rspacesAjax), i = 0, s = r.length, o, u, a; for (; i < s; i++) { o = r[i]; a = /^\+/.test(o); if (a) { o = o.substr(1) || "*" } u = structure[o] = structure[o] || []; u[a ? "unshift" : "push"](t) } } }; n.attr = function (e, r, i, s) { var o = e.nodeType; if (!e || o === 3 || o === 8 || o === 2) { return t } if (s && r in n.attrFn) { return n(e)[r](i) } if (!("getAttribute" in e)) { return n.prop(e, r, i) } var u, a, f = o !== 1 || !n.isXMLDoc(e); if (f) { r = n.attrFix[r] || r; a = n.attrHooks[r]; if (!a) { if (rboolean.test(r)) { a = boolHook } else if (nodeHook) { a = nodeHook } } } if (i !== t) { if (i === null) { n.removeAttr(e, r); return t } else if (a && "set" in a && f && (u = a.set(e, i, r)) !== t) { return u } else { e.setAttribute(r, "" + i); return i } } else if (a && "get" in a && f && (u = a.get(e, r)) !== null) { return u } else { u = e.getAttribute(r); return u === null ? t : u } }; n.attrFix = { tabindex: "tabIndex" }; n.attrFn = { val: true, css: true, html: true, text: true, data: true, width: true, height: true, offset: true, blur: true, focus: true, focusin: true, focusout: true, load: true, resize: true, scroll: true, unload: true, click: true, dblclick: true, mousedown: true, mouseup: true, mousemove: true, mouseover: true, mouseout: true, mouseenter: true, mouseleave: true, change: true, select: true, submit: true, keydown: true, keypress: true, keyup: true, error: true }; n.attrHooks = { type: {}, value: {}, tabIndex: {} }; n.bindReady = function () { if (readyList) { return } readyList = n._Deferred(); if (document.readyState === "complete") { return setTimeout(n.ready, 1) } if (document.addEventListener) { document.addEventListener("DOMContentLoaded", DOMContentLoaded, false); e.addEventListener("load", n.ready, false) } else if (document.attachEvent) { document.attachEvent("onreadystatechange", DOMContentLoaded); e.attachEvent("onload", n.ready); var t = false; try { t = e.frameElement == null } catch (r) { } if (document.documentElement.doScroll && t) { doScrollCheck() } } }; n.boxModel = true; n.browser = { msie: true, version: "9.0" }; n.buildFragment = function (e, t, r) { var i, s, o, u; if (t && t[0]) { u = t[0].ownerDocument || t[0] } if (!u.createDocumentFragment) { u = document } if (e.length === 1 && typeof e[0] === "string" && e[0].length < 512 && u === document && e[0].charAt(0) === "<" && !rnocache.test(e[0]) && (n.support.checkClone || !rchecked.test(e[0]))) { s = true; o = n.fragments[e[0]]; if (o && o !== 1) { i = o } } if (!i) { i = u.createDocumentFragment(); n.clean(e, u, i, r) } if (s) { n.fragments[e[0]] = o ? i : 1 } return { fragment: i, cacheable: s } }; n.cache = {}; n.camelCase = function (e) { return e.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase) }; n.clean = function (e, t, r, i) { var s; t = t || document; if (typeof t.createElement === "undefined") { t = t.ownerDocument || t[0] && t[0].ownerDocument || document } var o = [], u; for (var a = 0, f; (f = e[a]) != null; a++) { if (typeof f === "number") { f += "" } if (!f) { continue } if (typeof f === "string") { if (!rhtml.test(f)) { f = t.createTextNode(f) } else { f = f.replace(rxhtmlTag, "<$1></$2>"); var l = (rtagName.exec(f) || ["", ""])[1].toLowerCase(), c = wrapMap[l] || wrapMap._default, h = c[0], p = t.createElement("div"); p.innerHTML = c[1] + f + c[2]; while (h--) { p = p.lastChild } if (!n.support.tbody) { var d = rtbody.test(f), v = l === "table" && !d ? p.firstChild && p.firstChild.childNodes : c[1] === "<table>" && !d ? p.childNodes : []; for (u = v.length - 1; u >= 0; --u) { if (n.nodeName(v[u], "tbody") && !v[u].childNodes.length) { v[u].parentNode.removeChild(v[u]) } } } if (!n.support.leadingWhitespace && rleadingWhitespace.test(f)) { p.insertBefore(t.createTextNode(rleadingWhitespace.exec(f)[0]), p.firstChild) } f = p.childNodes } } var m; if (!n.support.appendChecked) { if (f[0] && typeof (m = f.length) === "number") { for (u = 0; u < m; u++) { findInputs(f[u]) } } else { findInputs(f) } } if (f.nodeType) { o.push(f) } else { o = n.merge(o, f) } } if (r) { s = function (e) { return !e.type || rscriptType.test(e.type) }; for (a = 0; o[a]; a++) { if (i && n.nodeName(o[a], "script") && (!o[a].type || o[a].type.toLowerCase() === "text/javascript")) { i.push(o[a].parentNode ? o[a].parentNode.removeChild(o[a]) : o[a]) } else { if (o[a].nodeType === 1) { var g = n.grep(o[a].getElementsByTagName("script"), s); o.splice.apply(o, [a + 1, 0].concat(g)) } r.appendChild(o[a]) } } } return o }; n.cleanData = function (e) { var t, r, i = n.cache, s = n.expando, o = n.event.special, u = n.support.deleteExpando; for (var a = 0, f; (f = e[a]) != null; a++) { if (f.nodeName && n.noData[f.nodeName.toLowerCase()]) { continue } r = f[n.expando]; if (r) { t = i[r] && i[r][s]; if (t && t.events) { for (var l in t.events) { if (o[l]) { n.event.remove(f, l) } else { n.removeEvent(f, l, t.handle) } } if (t.handle) { t.handle.elem = null } } if (u) { delete f[n.expando] } else if (f.removeAttribute) { f.removeAttribute(n.expando) } delete i[r] } } }; n.clone = function (e, t, r) { var i = e.cloneNode(true), s, o, u; if ((!n.support.noCloneEvent || !n.support.noCloneChecked) && (e.nodeType === 1 || e.nodeType === 11) && !n.isXMLDoc(e)) { cloneFixAttributes(e, i); s = getAll(e); o = getAll(i); for (u = 0; s[u]; ++u) { if (o[u]) { cloneFixAttributes(s[u], o[u]) } } } if (t) { cloneCopyEvent(e, i); if (r) { s = getAll(e); o = getAll(i); for (u = 0; s[u]; ++u) { cloneCopyEvent(s[u], o[u]) } } } s = o = null; return i }; n.contains = function (e, t) { return e !== t && (e.contains ? e.contains(t) : true) }; n.css = function (e, r, i) { var s, o; r = n.camelCase(r); o = n.cssHooks[r]; r = n.cssProps[r] || r; if (r === "cssFloat") { r = "float" } if (o && "get" in o && (s = o.get(e, true, i)) !== t) { return s } else if (curCSS) { return curCSS(e, r) } }; n.cssHooks = { opacity: {}, height: {}, width: {} }; n.cssNumber = { fillOpacity: true, fontWeight: true, lineHeight: true, opacity: true, orphans: true, widows: true, zIndex: true, zoom: true }; n.cssProps = { "float": "cssFloat" }; n.curCSS = function (e, r, i) { var s, o; r = n.camelCase(r); o = n.cssHooks[r]; r = n.cssProps[r] || r; if (r === "cssFloat") { r = "float" } if (o && "get" in o && (s = o.get(e, true, i)) !== t) { return s } else if (curCSS) { return curCSS(e, r) } }; n.data = function (e, r, i, s) { if (!n.acceptData(e)) { return } var o, u, a = n.expando, f = typeof r === "string", l = e.nodeType, c = l ? n.cache : e, h = l ? e[n.expando] : e[n.expando] && n.expando; if ((!h || s && h && c[h] && !c[h][a]) && f && i === t) { return } if (!h) { if (l) { e[n.expando] = h = ++n.uuid } else { h = n.expando } } if (!c[h]) { c[h] = {}; if (!l) { c[h].toJSON = n.noop } } if (typeof r === "object" || typeof r === "function") { if (s) { c[h][a] = n.extend(c[h][a], r) } else { c[h] = n.extend(c[h], r) } } o = c[h]; if (s) { if (!o[a]) { o[a] = {} } o = o[a] } if (i !== t) { o[n.camelCase(r)] = i } if (r === "events" && !o[r]) { return o[a] && o[a].events } if (f) { u = o[r]; if (u == null) { u = o[n.camelCase(r)] } } else { u = o } return u }; n.dequeue = function (e, t) { t = t || "fx"; var r = n.queue(e, t), i = r.shift(), s; if (i === "inprogress") { i = r.shift() } if (i) { if (t === "fx") { r.unshift("inprogress") } i.call(e, function () { n.dequeue(e, t) }) } if (!r.length) { n.removeData(e, t + "queue", true); handleQueueMarkDefer(e, t, "queue") } }; n.dir = function (e, r, i) { var s = [], o = e[r]; while (o && o.nodeType !== 9 && (i === t || o.nodeType !== 1 || !n(o).is(i))) { if (o.nodeType === 1) { s.push(o) } o = o[r] } return s }; n.each = function (e, r, i) { var s, o = 0, u = e.length, a = u === t || n.isFunction(e); if (i) { if (a) { for (s in e) { if (r.apply(e[s], i) === false) { break } } } else { for (; o < u;) { if (r.apply(e[o++], i) === false) { break } } } } else { if (a) { for (s in e) { if (r.call(e[s], s, e[s]) === false) { break } } } else { for (; o < u;) { if (r.call(e[o], o, e[o++]) === false) { break } } } } return e }; n.easing = {}; n.error = function (e) { throw e }; n.etag = {}; n.event = { global: {}, customEvent: {}, props: ["altKey", "attrChange", "attrName", "bubbles", "button", "cancelable", "charCode", "clientX", "clientY", "ctrlKey", "currentTarget", "data", "detail", "eventPhase", "fromElement", "handler", "keyCode", "layerX", "layerY", "metaKey", "newValue", "offsetX", "offsetY", "pageX", "pageY", "prevValue", "relatedNode", "relatedTarget", "screenX", "screenY", "shiftKey", "srcElement", "target", "toElement", "view", "wheelDelta", "which"], guid: 1e8, special: {}, triggered: false }; n.expr = { order: ["ID", "CLASS", "NAME", "TAG"], match: {}, leftMatch: {}, attrMap: {}, attrHandle: {}, relative: {}, find: {}, preFilter: {}, filters: {}, setFilters: {}, filter: {}, ":": {} }; n.extend = function () { var e, r, i, s, o, u, a = arguments[0] || {}, f = 1, l = arguments.length, c = false; if (typeof a === "boolean") { c = a; a = arguments[1] || {}; f = 2 } if (typeof a !== "object" && !n.isFunction(a)) { a = {} } if (l === f) { a = this; --f } for (; f < l; f++) { if ((e = arguments[f]) != null) { for (r in e) { i = a[r]; s = e[r]; if (a === s) { continue } if (c && s && (n.isPlainObject(s) || (o = n.isArray(s)))) { if (o) { o = false; u = i && n.isArray(i) ? i : [] } else { u = i && n.isPlainObject(i) ? i : {} } a[r] = n.extend(c, u, s) } else if (s !== t) { a[r] = s } } } } return a }; n.filter = function (e, t, r) { if (r) { e = ":not(" + e + ")" } return t.length === 1 ? n.find.matchesSelector(t[0], e) ? [t[0]] : [] : n.find.matches(e, t) }; n.find = function (e, t, n, r) { t = t || document; if (!r && !Sizzle.isXML(t)) { var i = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(e); if (i && (t.nodeType === 1 || t.nodeType === 9)) { if (i[1]) { return makeArray(t.getElementsByTagName(e), n) } else if (i[2] && Expr.find.CLASS && t.getElementsByClassName) { return makeArray(t.getElementsByClassName(i[2]), n) } } if (t.nodeType === 9) { if (e === "body" && t.body) { return makeArray([t.body], n) } else if (i && i[3]) { var s = t.getElementById(i[3]); if (s && s.parentNode) { if (s.id === i[3]) { return makeArray([s], n) } } else { return makeArray([], n) } } try { return makeArray(t.querySelectorAll(e), n) } catch (o) { } } else if (t.nodeType === 1 && t.nodeName.toLowerCase() !== "object") { var u = t, a = t.getAttribute("id"), f = a || id, l = t.parentNode, c = /^\s*[+~]/.test(e); if (!a) { t.setAttribute("id", f) } else { f = f.replace(/'/g, "\\$&") } if (c && l) { t = t.parentNode } try { if (!c || l) { return makeArray(t.querySelectorAll("[id='" + f + "'] " + e), n) } } catch (h) { } finally { if (!a) { u.removeAttribute("id") } } } } return oldSizzle(e, t, n, r) }; n.fn = { selector: "", jquery: "1.6.4", length: 0 }; n.fragments = {}; n.fx = function (e, t, n) { this.options = t; this.elem = e; this.prop = n; t.orig = t.orig || {} }; n.get = function (e, r, i, s) { if (n.isFunction(r)) { s = s || i; i = r; r = t } return n.ajax({ type: method, url: e, data: r, success: i, dataType: s }) }; n.getJSON = function (e, t, r) { return n.get(e, t, r, "json") }; n.getScript = function (e, r) { return n.get(e, t, r, "script") }; n.globalEval = function (t) { if (t && rnotwhite.test(t)) { (e.execScript || function (t) { e["eval"].call(e, t) })(t) } }; n.grep = function (e, t, n) { var r = [], i; n = !!n; for (var s = 0, o = e.length; s < o; s++) { i = !!t(e[s], s); if (n !== i) { r.push(e[s]) } } return r }; n.guid = 1; n.hasData = function (e) { e = e.nodeType ? n.cache[e[n.expando]] : e[n.expando]; return !!e && !isEmptyDataObject(e) }; n.holdReady = function (e) { if (e) { n.readyWait++ } else { n.ready(true) } }; n.inArray = function (e, t) { if (!t) { return -1 } if (indexOf) { return indexOf.call(t, e) } for (var n = 0, r = t.length; n < r; n++) { if (t[n] === e) { return n } } return -1 }; n.isEmptyObject = function (e) { for (var t in e) { return false } return true }; n.isFunction = function (e) { return n.type(e) === "function" }; n.isNaN = function (e) { return e == null || !rdigit.test(e) || isNaN(e) }; n.isPlainObject = function (e) { if (!e || n.type(e) !== "object" || e.nodeType || n.isWindow(e)) { return false } try { if (e.constructor && !hasOwn.call(e, "constructor") && !hasOwn.call(e.constructor.prototype, "isPrototypeOf")) { return false } } catch (r) { return false } var i; for (i in e) { } return i === t || hasOwn.call(e, i) }; n.isReady = true; n.isWindow = function (e) { return e && typeof e === "object" && "setInterval" in e }; n.isXMLDoc = function (e) { var t = (e ? e.ownerDocument || e : 0).documentElement; return t ? t.nodeName !== "HTML" : false }; n.lastModified = {}; n.makeArray = function (e, t) { var r = t || []; if (e != null) { var i = n.type(e); if (e.length == null || i === "string" || i === "function" || i === "regexp" || n.isWindow(e)) { push.call(r, e) } else { n.merge(r, e) } } return r }; n.map = function (e, r, i) { var s, o, u = [], a = 0, f = e.length, l = e instanceof n || f !== t && typeof f === "number" && (f > 0 && e[0] && e[f - 1] || f === 0 || n.isArray(e)); if (l) { for (; a < f; a++) { s = r(e[a], a, i); if (s != null) { u[u.length] = s } } } else { for (o in e) { s = r(e[o], o, i); if (s != null) { u[u.length] = s } } } return u.concat.apply([], u) }; n.merge = function (e, n) { var r = e.length, i = 0; if (typeof n.length === "number") { for (var s = n.length; i < s; i++) { e[r++] = n[i] } } else { while (n[i] !== t) { e[r++] = n[i++] } } e.length = r; return e }; n.noConflict = function (t) { if (e.$ === n) { e.$ = _$ } if (t && e.jQuery === n) { e.jQuery = _jQuery } return n }; n.noData = { embed: true, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet: true }; n.nodeName = function (e, t) { return e.nodeName && e.nodeName.toUpperCase() === t.toUpperCase() }; n.noop = function () { }; n.now = function () { return (new Date).getTime() }; n.nth = function (e, t, n, r) { t = t || 1; var i = 0; for (; e; e = e[n]) { if (e.nodeType === 1 && ++i === t) { break } } return e }; n.offset = {}; n.param = function (e, r) { var i = [], s = function (e, t) { t = n.isFunction(t) ? t() : t; i[i.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t) }; if (r === t) { r = n.ajaxSettings.traditional } if (n.isArray(e) || e.jquery && !n.isPlainObject(e)) { n.each(e, function () { s(this.name, this.value) }) } else { for (var o in e) { buildParams(o, e[o], r, s) } } return i.join("&").replace(r20, "+") }; n.parseJSON = function (t) { if (typeof t !== "string" || !t) { return null } t = n.trim(t); if (e.JSON && e.JSON.parse) { return e.JSON.parse(t) } if (rvalidchars.test(t.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, ""))) { return (new Function("return " + t))() } n.error("Invalid JSON: " + t) }; n.parseXML = function (r) { var i, s; try { if (e.DOMParser) { s = new DOMParser; i = s.parseFromString(r, "text/xml") } else { i = new ActiveXObject("Microsoft.XMLDOM"); i.async = "false"; i.loadXML(r) } } catch (o) { i = t } if (!i || !i.documentElement || i.getElementsByTagName("parsererror").length) { n.error("Invalid XML: " + r) } return i }; n.post = function (e, r, i, s) { if (n.isFunction(r)) { s = s || i; i = r; r = t } return n.ajax({ type: method, url: e, data: r, success: i, dataType: s }) }; n.prop = function (e, r, i) { var s = e.nodeType; if (!e || s === 3 || s === 8 || s === 2) { return t } var o, u, a = s !== 1 || !n.isXMLDoc(e); if (a) { r = n.propFix[r] || r; u = n.propHooks[r] } if (i !== t) { if (u && "set" in u && (o = u.set(e, i, r)) !== t) { return o } else { return e[r] = i } } else { if (u && "get" in u && (o = u.get(e, r)) !== null) { return o } else { return e[r] } } }; n.propFix = { tabindex: "tabIndex", readonly: "readOnly", "for": "htmlFor", "class": "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }; n.propHooks = { tabIndex: {}, selected: {} }; n.proxy = function (e, r) { if (typeof r === "string") { var i = e[r]; r = e; e = i } if (!n.isFunction(e)) { return t } var s = slice.call(arguments, 2), o = function () { return e.apply(r, s.concat(slice.call(arguments))) }; o.guid = e.guid = e.guid || o.guid || n.guid++; return o }; n.queue = function (e, r, i) { if (e) { r = (r || "fx") + "queue"; var s = n.data(e, r, t, true); if (i) { if (!s || n.isArray(i)) { s = n.data(e, r, n.makeArray(i), true) } else { s.push(i) } } return s || [] } }; n.ready = function (e) { if (e === true && !--n.readyWait || e !== true && !n.isReady) { if (!document.body) { return setTimeout(n.ready, 1) } n.isReady = true; if (e !== true && --n.readyWait > 0) { return } readyList.resolveWith(document, [n]); if (n.fn.trigger) { n(document).trigger("ready").unbind("ready") } } }; n.readyWait = 0; n.removeAttr = function (e, t) { var r; if (e.nodeType === 1) { t = n.attrFix[t] || t; n.attr(e, t, ""); e.removeAttribute(t); if (rboolean.test(t) && (r = n.propFix[t] || t) in e) { e[r] = false } } }; n.removeData = function (e, t, r) { if (!n.acceptData(e)) { return } var i, s = n.expando, o = e.nodeType, u = o ? n.cache : e, a = o ? e[n.expando] : n.expando; if (!u[a]) { return } if (t) { i = r ? u[a][s] : u[a]; if (i) { if (!i[t]) { t = n.camelCase(t) } delete i[t]; if (!isEmptyDataObject(i)) { return } } } if (r) { delete u[a][s]; if (!isEmptyDataObject(u[a])) { return } } var f = u[a][s]; if (n.support.deleteExpando || !u.setInterval) { delete u[a] } else { u[a] = null } if (f) { u[a] = {}; if (!o) { u[a].toJSON = n.noop } u[a][s] = f } else if (o) { if (n.support.deleteExpando) { delete e[n.expando] } else if (e.removeAttribute) { e.removeAttribute(n.expando) } else { e[n.expando] = null } } }; n.removeEvent = function (e, t, n) { if (e.removeEventListener) { e.removeEventListener(t, n, false) } }; n.sibling = function (e, t) { var n = []; for (; e; e = e.nextSibling) { if (e.nodeType === 1 && e !== t) { n.push(e) } } return n }; n.speed = function (e, t, r) { var i = e && typeof e === "object" ? n.extend({}, e) : { complete: r || !r && t || n.isFunction(e) && e, duration: e, easing: r && t || t && !n.isFunction(t) && t }; i.duration = n.fx.off ? 0 : typeof i.duration === "number" ? i.duration : i.duration in n.fx.speeds ? n.fx.speeds[i.duration] : n.fx.speeds._default; i.old = i.complete; i.complete = function (e) { if (n.isFunction(i.old)) { i.old.call(this) } if (i.queue !== false) { n.dequeue(this) } else if (e !== false) { n._unmark(this) } }; return i }; n.style = function (e, r, i, s) { if (!e || e.nodeType === 3 || e.nodeType === 8 || !e.style) { return } var o, u, a = n.camelCase(r), f = e.style, l = n.cssHooks[a]; r = n.cssProps[a] || a; if (i !== t) { u = typeof i; if (u === "string" && (o = rrelNum.exec(i))) { i = +(o[1] + 1) * +o[2] + parseFloat(n.css(e, r)); u = "number" } if (i == null || u === "number" && isNaN(i)) { return } if (u === "number" && !n.cssNumber[a]) { i += "px" } if (!l || !("set" in l) || (i = l.set(e, i)) !== t) { try { f[r] = i } catch (c) { } } } else { if (l && "get" in l && (o = l.get(e, false, s)) !== t) { return o } return f[r] } }; n.sub = function () { function e(t, n) { return new e.fn.init(t, n) } n.extend(true, e, this); e.superclass = this; e.fn = e.prototype = this(); e.fn.constructor = e; e.sub = this.sub; e.fn.init = function (i, s) { if (s && s instanceof n && !(s instanceof e)) { s = e(s) } return n.fn.init.call(this, i, s, t) }; e.fn.init.prototype = e.fn; var t = e(document); return e }; n.support = { leadingWhitespace: true, tbody: true, htmlSerialize: true, style: true, hrefNormalized: true, opacity: true, cssFloat: true, checkOn: true, optSelected: false, getSetAttribute: true, submitBubbles: true, changeBubbles: true, focusinBubbles: true, deleteExpando: true, noCloneEvent: true, inlineBlockNeedsLayout: false, shrinkWrapBlocks: false, reliableMarginRight: true, noCloneChecked: false, optDisabled: true, radioValue: false, checkClone: false, appendChecked: true, boxModel: true, reliableHiddenOffsets: true, ajax: true, cors: false }; n.swap = function (e, t, n) { var r = {}; for (var i in t) { r[i] = e.style[i]; e.style[i] = t[i] } n.call(e); for (i in t) { e.style[i] = r[i] } }; n.text = function (e) { var t = "", n; for (var r = 0; e[r]; r++) { n = e[r]; if (n.nodeType === 3 || n.nodeType === 4) { t += n.nodeValue } else if (n.nodeType !== 8) { t += Sizzle.getText(n.childNodes) } } return t }; n.trim = function (e) { return e == null ? "" : trim.call(e) }; n.type = function (e) { return e == null ? String(e) : class2type[toString.call(e)] || "object" }; n.uaMatch = function (e) { e = e.toLowerCase(); var t = rwebkit.exec(e) || ropera.exec(e) || rmsie.exec(e) || e.indexOf("compatible") < 0 && rmozilla.exec(e) || []; return { browser: t[1] || "", version: t[2] || "0" } }; n.unique = function (e) { if (sortOrder) { hasDuplicate = baseHasDuplicate; e.sort(sortOrder); if (hasDuplicate) { for (var t = 1; t < e.length; t++) { if (e[t] === e[t - 1]) { e.splice(t--, 1) } } } } return e }; n.uuid = 0; n.valHooks = { option: {}, select: {}, radio: {}, checkbox: {} }; n.when = function (e) { function u(e) { return function (n) { t[e] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : n; if (!--s) { o.resolveWith(o, sliceDeferred.call(t, 0)) } } } var t = arguments, r = 0, i = t.length, s = i, o = i <= 1 && e && n.isFunction(e.promise) ? e : n.Deferred(); if (i > 1) { for (; r < i; r++) { if (t[r] && n.isFunction(t[r].promise)) { t[r].promise().then(u(r), o.reject) } else { --s } } if (!s) { o.resolveWith(o, t) } } else if (o !== e) { o.resolveWith(o, i ? [e] : []) } return o.promise() }; n.Event.prototype.isDefaultPrevented = function () { return false }; n.Event.prototype.isImmediatePropagationStopped = function () { return false }; n.Event.prototype.isPropagationStopped = function () { return false }; n.Event.prototype.preventDefault = function () { this.isDefaultPrevented = returnTrue; var e = this.originalEvent; if (!e) { return } if (e.preventDefault) { e.preventDefault() } else { e.returnValue = false } }; n.Event.prototype.stopImmediatePropagation = function () { this.isImmediatePropagationStopped = returnTrue; this.stopPropagation() }; n.Event.prototype.stopPropagation = function () { this.isPropagationStopped = returnTrue; var e = this.originalEvent; if (!e) { return } if (e.stopPropagation) { e.stopPropagation() } e.cancelBubble = true }; n.prototype._toggle = function (e) { var t = arguments, r = e.guid || n.guid++, i = 0, s = function (r) { var s = (n.data(this, "lastToggle" + e.guid) || 0) % i; n.data(this, "lastToggle" + e.guid, s + 1); r.preventDefault(); return t[s].apply(this, arguments) || false }; s.guid = r; while (i < t.length) { t[i++].guid = r } return this.click(s) }; n.prototype.add = function (e, t) { var r = typeof e === "string" ? n(e, t) : n.makeArray(e && e.nodeType ? [e] : e), i = n.merge(this.get(), r); return this.pushStack(isDisconnected(r[0]) || isDisconnected(i[0]) ? i : n.unique(i)) }; n.prototype.addClass = function (e) { var t, r, i, s, o, u, a; if (n.isFunction(e)) { return this.each(function (t) { n(this).addClass(e.call(this, t, this.className)) }) } if (e && typeof e === "string") { t = e.split(rspace); for (r = 0, i = this.length; r < i; r++) { s = this[r]; if (s.nodeType === 1) { if (!s.className && t.length === 1) { s.className = e } else { o = " " + s.className + " "; for (u = 0, a = t.length; u < a; u++) { if (!~o.indexOf(" " + t[u] + " ")) { o += t[u] + " " } } s.className = n.trim(o) } } } } return this }; n.prototype.after = function () { if (this[0] && this[0].parentNode) { return this.domManip(arguments, false, function (e) { this.parentNode.insertBefore(e, this.nextSibling) }) } else if (arguments.length) { var e = this.pushStack(this, "after", arguments); e.push.apply(e, n(arguments[0]).toArray()); return e } }; n.prototype.ajaxComplete = function (e) { return this.bind(o, e) }; n.prototype.ajaxError = function (e) { return this.bind(o, e) }; n.prototype.ajaxSend = function (e) { return this.bind(o, e) }; n.prototype.ajaxStart = function (e) { return this.bind(o, e) }; n.prototype.ajaxStop = function (e) { return this.bind(o, e) }; n.prototype.ajaxSuccess = function (e) { return this.bind(o, e) }; n.prototype.andSelf = function () { return this.add(this.prevObject) }; n.prototype.animate = function (e, t, r, i) { var s = n.speed(t, r, i); if (n.isEmptyObject(e)) { return this.each(s.complete, [false]) } e = n.extend({}, e); return this[s.queue === false ? "each" : "queue"](function () { if (s.queue === false) { n._mark(this) } var t = n.extend({}, s), r = this.nodeType === 1, i = r && n(this).is(":hidden"), o, u, a, f, l, c, h, p, d; t.animatedProperties = {}; for (a in e) { o = n.camelCase(a); if (a !== o) { e[o] = e[a]; delete e[a] } u = e[o]; if (n.isArray(u)) { t.animatedProperties[o] = u[1]; u = e[o] = u[0] } else { t.animatedProperties[o] = t.specialEasing && t.specialEasing[o] || t.easing || "swing" } if (u === "hide" && i || u === "show" && !i) { return t.complete.call(this) } if (r && (o === "height" || o === "width")) { t.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY]; if (n.css(this, "display") === "inline" && n.css(this, "float") === "none") { if (!n.support.inlineBlockNeedsLayout) { this.style.display = "inline-block" } else { f = defaultDisplay(this.nodeName); if (f === "inline") { this.style.display = "inline-block" } else { this.style.display = "inline"; this.style.zoom = 1 } } } } } if (t.overflow != null) { this.style.overflow = "hidden" } for (a in e) { l = new n.fx(this, t, a); u = e[a]; if (rfxtypes.test(u)) { l[u === "toggle" ? i ? "show" : "hide" : u]() } else { c = rfxnum.exec(u); h = l.cur(); if (c) { p = parseFloat(c[2]); d = c[3] || (n.cssNumber[a] ? "" : "px"); if (d !== "px") { n.style(this, a, (p || 1) + d); h = (p || 1) / l.cur() * h; n.style(this, a, h + d) } if (c[1]) { p = (c[1] === "-=" ? -1 : 1) * p + h } l.custom(h, p, d) } else { l.custom(h, u, "") } } } return true }) }; n.prototype.append = function () { return this.domManip(arguments, true, function (e) { if (this.nodeType === 1) { this.appendChild(e) } }) }; n.prototype.appendTo = function (e) { var t = [], r = n(e), i = this.length === 1 && this[0].parentNode; if (i && i.nodeType === 11 && i.childNodes.length === 1 && r.length === 1) { r[original](this[0]); return this } else { for (var s = 0, o = r.length; s < o; s++) { var u = (s > 0 ? this.clone(true) : this).get(); n(r[s])[original](u); t = t.concat(u) } return this.pushStack(t, name, r.selector) } }; n.prototype.attr = function (e, t) { return n.access(this, e, t, true, n.attr) }; n.prototype.before = function () { if (this[0] && this[0].parentNode) { return this.domManip(arguments, false, function (e) { this.parentNode.insertBefore(e, this) }) } else if (arguments.length) { var e = n(arguments[0]); e.push.apply(e, this.toArray()); return this.pushStack(e, "before", arguments) } }; n.prototype.bind = function (e, r, i) { var s; if (typeof e === "object") { for (var o in e) { this[name](o, r, e[o], i) } return this } if (arguments.length === 2 || r === false) { i = r; r = t } if (name === "one") { s = function (e) { n(this).unbind(e, s); return i.apply(this, arguments) }; s.guid = i.guid || n.guid++ } else { s = i } if (e === "unload" && name !== "one") { this.one(e, r, i) } else { for (var u = 0, a = this.length; u < a; u++) { n.event.add(this[u], e, s, r) } } return this }; n.prototype.blur = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.change = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.children = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.clearQueue = function (e) { return this.queue(e || "fx", []) }; n.prototype.click = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.clone = function (e, t) { e = e == null ? false : e; t = t == null ? e : t; return this.map(function () { return n.clone(this, e, t) }) }; n.prototype.closest = function (e, t) { var r = [], i, s, o = this[0]; if (n.isArray(e)) { var u, a, f = {}, l = 1; if (o && e.length) { for (i = 0, s = e.length; i < s; i++) { a = e[i]; if (!f[a]) { f[a] = POS.test(a) ? n(a, t || this.context) : a } } while (o && o.ownerDocument && o !== t) { for (a in f) { u = f[a]; if (u.jquery ? u.index(o) > -1 : n(o).is(u)) { r.push({ selector: a, elem: o, level: l }) } } o = o.parentNode; l++ } } return r } var c = POS.test(e) || typeof e !== "string" ? n(e, t || this.context) : 0; for (i = 0, s = this.length; i < s; i++) { o = this[i]; while (o) { if (c ? c.index(o) > -1 : n.find.matchesSelector(o, e)) { r.push(o); break } else { o = o.parentNode; if (!o || !o.ownerDocument || o === t || o.nodeType === 11) { break } } } } r = r.length > 1 ? n.unique(r) : r; return this.pushStack(r, "closest", e) }; n.prototype.constructor = function (e, t) { return new n.fn.init(e, t, rootjQuery) }; n.prototype.contents = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.css = function (e, r) { if (arguments.length === 2 && r === t) { return this } return n.access(this, e, r, true, function (e, r, i) { return i !== t ? n.style(e, r, i) : n.css(e, r) }) }; n.prototype.data = function (e, r) { var i = null; if (typeof e === "undefined") { if (this.length) { i = n.data(this[0]); if (this[0].nodeType === 1) { var s = this[0].attributes, o; for (var u = 0, a = s.length; u < a; u++) { o = s[u].name; if (o.indexOf("data-") === 0) { o = n.camelCase(o.substring(5)); dataAttr(this[0], o, i[o]) } } } } return i } else if (typeof e === "object") { return this.each(function () { n.data(this, e) }) } var f = e.split("."); f[1] = f[1] ? "." + f[1] : ""; if (r === t) { i = this.triggerHandler("getData" + f[1] + "!", [f[0]]); if (i === t && this.length) { i = n.data(this[0], e); i = dataAttr(this[0], e, i) } return i === t && f[1] ? this.data(f[0]) : i } else { return this.each(function () { var t = n(this), i = [f[0], r]; t.triggerHandler("setData" + f[1] + "!", i); n.data(this, e, r); t.triggerHandler("changeData" + f[1] + "!", i) }) } }; n.prototype.dblclick = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.delay = function (e, t) { e = n.fx ? n.fx.speeds[e] || e : e; t = t || "fx"; return this.queue(t, function () { var r = this; setTimeout(function () { n.dequeue(r, t) }, e) }) }; n.prototype.delegate = function (e, t, n, r) { return this.live(t, n, r, e) }; n.prototype.dequeue = function (e) { return this.each(function () { n.dequeue(this, e) }) }; n.prototype.detach = function (e) { return this.remove(e, true) }; n.prototype.die = function (e, r, i, s) { var o, u = 0, a, f, l, c = s || this.selector, h = s ? this : n(this.context); if (typeof e === "object" && !e.preventDefault) { for (var p in e) { h[name](p, r, e[p], c) } return this } if (name === "die" && !e && s && s.charAt(0) === ".") { h.unbind(s); return this } if (r === false || n.isFunction(r)) { i = r || returnFalse; r = t } e = (e || "").split(" "); while ((o = e[u++]) != null) { a = rnamespaces.exec(o); f = ""; if (a) { f = a[0]; o = o.replace(rnamespaces, "") } if (o === "hover") { e.push("mouseenter" + f, "mouseleave" + f); continue } l = o; if (liveMap[o]) { e.push(liveMap[o] + f); o = o + f } else { o = (liveMap[o] || o) + f } if (name === "live") { for (var d = 0, v = h.length; d < v; d++) { n.event.add(h[d], "live." + liveConvert(o, c), { data: r, selector: c, handler: i, origType: o, origHandler: i, preType: l }) } } else { h.unbind("live." + liveConvert(o, c), i) } } return this }; n.prototype.domManip = function (e, r, i) { var s, o, u, a, f = e[0], l = []; if (!n.support.checkClone && arguments.length === 3 && typeof f === "string" && rchecked.test(f)) { return this.each(function () { n(this).domManip(e, r, i, true) }) } if (n.isFunction(f)) { return this.each(function (s) { var o = n(this); e[0] = f.call(this, s, r ? o.html() : t); o.domManip(e, r, i) }) } if (this[0]) { a = f && f.parentNode; if (n.support.parentNode && a && a.nodeType === 11 && a.childNodes.length === this.length) { s = { fragment: a } } else { s = n.buildFragment(e, this, l) } u = s.fragment; if (u.childNodes.length === 1) { o = u = u.firstChild } else { o = u.firstChild } if (o) { r = r && n.nodeName(o, "tr"); for (var c = 0, h = this.length, p = h - 1; c < h; c++) { i.call(r ? root(this[c], o) : this[c], s.cacheable || h > 1 && c < p ? n.clone(u, true, true) : u) } } if (l.length) { n.each(l, evalScript) } } return this }; n.prototype.each = function (e, t) { return n.each(this, e, t) }; n.prototype.empty = function () { for (var e = 0, t; (t = this[e]) != null; e++) { if (t.nodeType === 1) { n.cleanData(t.getElementsByTagName("*")) } while (t.firstChild) { t.removeChild(t.firstChild) } } return this }; n.prototype.end = function () { return this.prevObject || this.constructor(null) }; n.prototype.eq = function (e) { return e === -1 ? this.slice(e) : this.slice(e, +e + 1) }; n.prototype.error = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.extend = function () { var e, r, i, s, o, u, a = arguments[0] || {}, f = 1, l = arguments.length, c = false; if (typeof a === "boolean") { c = a; a = arguments[1] || {}; f = 2 } if (typeof a !== "object" && !n.isFunction(a)) { a = {} } if (l === f) { a = this; --f } for (; f < l; f++) { if ((e = arguments[f]) != null) { for (r in e) { i = a[r]; s = e[r]; if (a === s) { continue } if (c && s && (n.isPlainObject(s) || (o = n.isArray(s)))) { if (o) { o = false; u = i && n.isArray(i) ? i : [] } else { u = i && n.isPlainObject(i) ? i : {} } a[r] = n.extend(c, u, s) } else if (s !== t) { a[r] = s } } } } return a }; n.prototype.fadeIn = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.fadeOut = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.fadeTo = function (e, t, n, r) { return this.filter(":hidden").css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }; n.prototype.fadeToggle = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.filter = function (e) { return this.pushStack(winnow(this, e, true), "filter", e) }; n.prototype.find = function (e) { var t = this, r, i; if (typeof e !== "string") { return n(e).filter(function () { for (r = 0, i = t.length; r < i; r++) { if (n.contains(t[r], this)) { return true } } }) } var s = this.pushStack("", "find", e), o, u, a; for (r = 0, i = this.length; r < i; r++) { o = s.length; n.find(e, this[r], s); if (r > 0) { for (u = o; u < s.length; u++) { for (a = 0; a < o; a++) { if (s[a] === s[u]) { s.splice(u--, 1); break } } } } } return s }; n.prototype.first = function () { return this.eq(0) }; n.prototype.focus = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.focusin = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.focusout = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.get = function (e) { return e == null ? this.toArray() : e < 0 ? this[this.length + e] : this[e] }; n.prototype.has = function (e) { var t = n(e); return this.filter(function () { for (var e = 0, r = t.length; e < r; e++) { if (n.contains(this, t[e])) { return true } } }) }; n.prototype.hasClass = function (e) { var t = " " + e + " "; for (var n = 0, r = this.length; n < r; n++) { if (this[n].nodeType === 1 && (" " + this[n].className + " ").replace(rclass, " ").indexOf(t) > -1) { return true } } return false }; n.prototype.height = function (e) { var r = this[0]; if (!r) { return e == null ? null : this } if (n.isFunction(e)) { return this.each(function (t) { var r = n(this); r[type](e.call(this, t, r[type]())) }) } if (n.isWindow(r)) { var i = r.document.documentElement["client" + name], s = r.document.body; return r.document.compatMode === "CSS1Compat" && i || s && s["client" + name] || i } else if (r.nodeType === 9) { return Math.max(r.documentElement["client" + name], r.body["scroll" + name], r.documentElement["scroll" + name], r.body["offset" + name], r.documentElement["offset" + name]) } else if (e === t) { var o = n.css(r, type), u = parseFloat(o); return n.isNaN(u) ? o : u } else { return this.css(type, typeof e === "string" ? e : e + "px") } }; n.prototype.hide = function (e, t, r) { if (e || e === 0) { return this.animate(genFx("hide", 3), e, t, r) } else { for (var i = 0, s = this.length; i < s; i++) { if (this[i].style) { var o = n.css(this[i], "display"); if (o !== "none" && !n._data(this[i], "olddisplay")) { n._data(this[i], "olddisplay", o) } } } for (i = 0; i < s; i++) { if (this[i].style) { this[i].style.display = "none" } } return this } }; n.prototype.hover = function (e, t) { return this.mouseenter(e).mouseleave(t || e) }; n.prototype.html = function (e) { if (e === t) { return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(rinlinejQuery, "") : null } else if (typeof e === "string" && !rnocache.test(e) && (n.support.leadingWhitespace || !rleadingWhitespace.test(e)) && !wrapMap[(rtagName.exec(e) || ["", ""])[1].toLowerCase()]) { e = e.replace(rxhtmlTag, "<$1></$2>"); try { for (var r = 0, i = this.length; r < i; r++) { if (this[r].nodeType === 1) { n.cleanData(this[r].getElementsByTagName("*")); this[r].innerHTML = e } } } catch (s) { this.empty().append(e) } } else if (n.isFunction(e)) { this.each(function (t) { var r = n(this); r.html(e.call(this, t, r.html())) }) } else { this.empty().append(e) } return this }; n.prototype.index = function (e) { if (!e) { return this[0] && this[0].parentNode ? this.prevAll().length : -1 } if (typeof e === "string") { return n.inArray(this[0], n(e)) } return n.inArray(e.jquery ? e[0] : e, this) }; n.prototype.init = function (e, r, i) { var s, o, u, a; if (!e) { return this } if (e.nodeType) { this.context = this[0] = e; this.length = 1; return this } if (e === "body" && !r && document.body) { this.context = document; this[0] = document.body; this.selector = e; this.length = 1; return this } if (typeof e === "string") { if (e.charAt(0) === "<" && e.charAt(e.length - 1) === ">" && e.length >= 3) { s = [null, e, null] } else { s = quickExpr.exec(e) } if (s && (s[1] || !r)) { if (s[1]) { r = r instanceof n ? r[0] : r; a = r ? r.ownerDocument || r : document; u = rsingleTag.exec(e); if (u) { if (n.isPlainObject(r)) { e = [document.createElement(u[1])]; n.fn.attr.call(e, r, true) } else { e = [a.createElement(u[1])] } } else { u = n.buildFragment([s[1]], [a]); e = (u.cacheable ? n.clone(u.fragment) : u.fragment).childNodes } return n.merge(this, e) } else { o = document.getElementById(s[2]); if (o && o.parentNode) { if (o.id !== s[2]) { return i.find(e) } this.length = 1; this[0] = o } this.context = document; this.selector = e; return this } } else if (!r || r.jquery) { return (r || i).find(e) } else { return this.constructor(r).find(e) } } else if (n.isFunction(e)) { return i.ready(e) } if (e.selector !== t) { this.selector = e.selector; this.context = e.context } return n.makeArray(e, this) }; n.prototype.innerHeight = function () { var e = this[0]; return e && e.style ? parseFloat(n.css(e, type, "padding")) : null }; n.prototype.innerWidth = function () { var e = this[0]; return e && e.style ? parseFloat(n.css(e, type, "padding")) : null }; n.prototype.insertAfter = function (e) { var t = [], r = n(e), i = this.length === 1 && this[0].parentNode; if (i && i.nodeType === 11 && i.childNodes.length === 1 && r.length === 1) { r[original](this[0]); return this } else { for (var s = 0, o = r.length; s < o; s++) { var u = (s > 0 ? this.clone(true) : this).get(); n(r[s])[original](u); t = t.concat(u) } return this.pushStack(t, name, r.selector) } }; n.prototype.insertBefore = function (e) { var t = [], r = n(e), i = this.length === 1 && this[0].parentNode; if (i && i.nodeType === 11 && i.childNodes.length === 1 && r.length === 1) { r[original](this[0]); return this } else { for (var s = 0, o = r.length; s < o; s++) { var u = (s > 0 ? this.clone(true) : this).get(); n(r[s])[original](u); t = t.concat(u) } return this.pushStack(t, name, r.selector) } }; n.prototype.is = function (e) { return !!e && (typeof e === "string" ? n.filter(e, this).length > 0 : this.filter(e).length > 0) }; n.prototype.keydown = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.keypress = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.keyup = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.last = function () { return this.eq(-1) }; n.prototype.length = 0; n.prototype.live = function (e, r, i, s) { var o, u = 0, a, f, l, c = s || this.selector, h = s ? this : n(this.context); if (typeof e === "object" && !e.preventDefault) { for (var p in e) { h[name](p, r, e[p], c) } return this } if (name === "die" && !e && s && s.charAt(0) === ".") { h.unbind(s); return this } if (r === false || n.isFunction(r)) { i = r || returnFalse; r = t } e = (e || "").split(" "); while ((o = e[u++]) != null) { a = rnamespaces.exec(o); f = ""; if (a) { f = a[0]; o = o.replace(rnamespaces, "") } if (o === "hover") { e.push("mouseenter" + f, "mouseleave" + f); continue } l = o; if (liveMap[o]) { e.push(liveMap[o] + f); o = o + f } else { o = (liveMap[o] || o) + f } if (name === "live") { for (var d = 0, v = h.length; d < v; d++) { n.event.add(h[d], "live." + liveConvert(o, c), { data: r, selector: c, handler: i, origType: o, origHandler: i, preType: l }) } } else { h.unbind("live." + liveConvert(o, c), i) } } return this }; n.prototype.load = function (e, r, i) { if (typeof e !== "string" && _load) { return _load.apply(this, arguments) } else if (!this.length) { return this } var s = e.indexOf(" "); if (s >= 0) { var o = e.slice(s, e.length); e = e.slice(0, s) } var u = "GET"; if (r) { if (n.isFunction(r)) { i = r; r = t } else if (typeof r === "object") { r = n.param(r, n.ajaxSettings.traditional); u = "POST" } } var a = this; n.ajax({ url: e, type: u, dataType: "html", data: r, complete: function (e, t, r) { r = e.responseText; if (e.isResolved()) { e.done(function (e) { r = e }); a.html(o ? n("<div>").append(r.replace(rscript, "")).find(o) : r) } if (i) { a.each(i, [r, t, e]) } } }); return this }; n.prototype.map = function (e) { return this.pushStack(n.map(this, function (t, n) { return e.call(t, n, t) })) }; n.prototype.mousedown = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mouseenter = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mouseleave = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mousemove = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mouseout = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mouseover = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.mouseup = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.next = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.nextAll = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.nextUntil = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.not = function (e) { return this.pushStack(winnow(this, e, false), "not", e) }; n.prototype.offset = function (e) { var t = this[0], r; if (e) { return this.each(function (t) { n.offset.setOffset(this, e, t) }) } if (!t || !t.ownerDocument) { return null } if (t === t.ownerDocument.body) { return n.offset.bodyOffset(t) } try { r = t.getBoundingClientRect() } catch (i) { } var s = t.ownerDocument, o = s.documentElement; if (!r || !n.contains(o, t)) { return r ? { top: r.top, left: r.left } : { top: 0, left: 0 } } var u = s.body, a = getWindow(s), f = o.clientTop || u.clientTop || 0, l = o.clientLeft || u.clientLeft || 0, c = a.pageYOffset || n.support.boxModel && o.scrollTop || u.scrollTop, h = a.pageXOffset || n.support.boxModel && o.scrollLeft || u.scrollLeft, p = r.top + c - f, d = r.left + h - l; return { top: p, left: d } }; n.prototype.offsetParent = function () { return this.map(function () { var e = this.offsetParent || document.body; while (e && !rroot.test(e.nodeName) && n.css(e, "position") === "static") { e = e.offsetParent } return e }) }; n.prototype.one = function (e, r, i) { var s; if (typeof e === "object") { for (var o in e) { this[name](o, r, e[o], i) } return this } if (arguments.length === 2 || r === false) { i = r; r = t } if (name === "one") { s = function (e) { n(this).unbind(e, s); return i.apply(this, arguments) }; s.guid = i.guid || n.guid++ } else { s = i } if (e === "unload" && name !== "one") { this.one(e, r, i) } else { for (var u = 0, a = this.length; u < a; u++) { n.event.add(this[u], e, s, r) } } return this }; n.prototype.outerHeight = function (e) { var t = this[0]; return t && t.style ? parseFloat(n.css(t, type, e ? "margin" : "border")) : null }; n.prototype.outerWidth = function (e) { var t = this[0]; return t && t.style ? parseFloat(n.css(t, type, e ? "margin" : "border")) : null }; n.prototype.parent = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.parents = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.parentsUntil = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.position = function () { if (!this[0]) { return null } var e = this[0], t = this.offsetParent(), r = this.offset(), i = rroot.test(t[0].nodeName) ? { top: 0, left: 0 } : t.offset(); r.top -= parseFloat(n.css(e, "marginTop")) || 0; r.left -= parseFloat(n.css(e, "marginLeft")) || 0; i.top += parseFloat(n.css(t[0], "borderTopWidth")) || 0; i.left += parseFloat(n.css(t[0], "borderLeftWidth")) || 0; return { top: r.top - i.top, left: r.left - i.left } }; n.prototype.prepend = function () { return this.domManip(arguments, true, function (e) { if (this.nodeType === 1) { this.insertBefore(e, this.firstChild) } }) }; n.prototype.prependTo = function (e) { var t = [], r = n(e), i = this.length === 1 && this[0].parentNode; if (i && i.nodeType === 11 && i.childNodes.length === 1 && r.length === 1) { r[original](this[0]); return this } else { for (var s = 0, o = r.length; s < o; s++) { var u = (s > 0 ? this.clone(true) : this).get(); n(r[s])[original](u); t = t.concat(u) } return this.pushStack(t, name, r.selector) } }; n.prototype.prev = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.prevAll = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.prevUntil = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.promise = function (e, r) { function h() { if (!--u) { i.resolveWith(s, [s]) } } if (typeof e !== "string") { r = e; e = t } e = e || "fx"; var i = n.Deferred(), s = this, o = s.length, u = 1, a = e + "defer", f = e + "queue", l = e + "mark", c; while (o--) { if (c = n.data(s[o], a, t, true) || (n.data(s[o], f, t, true) || n.data(s[o], l, t, true)) && n.data(s[o], a, n._Deferred(), true)) { u++; c.done(h) } } h(); return i.promise() }; n.prototype.prop = function (e, t) { return n.access(this, e, t, true, n.prop) }; n.prototype.pushStack = function (e, t, r) { var i = this.constructor(); if (n.isArray(e)) { push.apply(i, e) } else { n.merge(i, e) } i.prevObject = this; i.context = this.context; if (t === "find") { i.selector = this.selector + (this.selector ? " " : "") + r } else if (t) { i.selector = this.selector + "." + t + "(" + r + ")" } return i }; n.prototype.queue = function (e, r) { if (typeof e !== "string") { r = e; e = "fx" } if (r === t) { return n.queue(this[0], e) } return this.each(function () { var t = n.queue(this, e, r); if (e === "fx" && t[0] !== "inprogress") { n.dequeue(this, e) } }) }; n.prototype.ready = function (e) { n.bindReady(); readyList.done(e); return this }; n.prototype.remove = function (e, t) { for (var r = 0, i; (i = this[r]) != null; r++) { if (!e || n.filter(e, [i]).length) { if (!t && i.nodeType === 1) { n.cleanData(i.getElementsByTagName("*")); n.cleanData([i]) } if (i.parentNode) { i.parentNode.removeChild(i) } } } return this }; n.prototype.removeAttr = function (e) { return this.each(function () { n.removeAttr(this, e) }) }; n.prototype.removeClass = function (e) { var r, i, s, o, u, a, f; if (n.isFunction(e)) { return this.each(function (t) { n(this).removeClass(e.call(this, t, this.className)) }) } if (e && typeof e === "string" || e === t) { r = (e || "").split(rspace); for (i = 0, s = this.length; i < s; i++) { o = this[i]; if (o.nodeType === 1 && o.className) { if (e) { u = (" " + o.className + " ").replace(rclass, " "); for (a = 0, f = r.length; a < f; a++) { u = u.replace(" " + r[a] + " ", " ") } o.className = n.trim(u) } else { o.className = "" } } } } return this }; n.prototype.removeData = function (e) { return this.each(function () { n.removeData(this, e) }) }; n.prototype.removeProp = function (e) { e = n.propFix[e] || e; return this.each(function () { try { this[e] = t; delete this[e] } catch (n) { } }) }; n.prototype.replaceAll = function (e) { var t = [], r = n(e), i = this.length === 1 && this[0].parentNode; if (i && i.nodeType === 11 && i.childNodes.length === 1 && r.length === 1) { r[original](this[0]); return this } else { for (var s = 0, o = r.length; s < o; s++) { var u = (s > 0 ? this.clone(true) : this).get(); n(r[s])[original](u); t = t.concat(u) } return this.pushStack(t, name, r.selector) } }; n.prototype.replaceWith = function (e) { if (this[0] && this[0].parentNode) { if (n.isFunction(e)) { return this.each(function (t) { var r = n(this), i = r.html(); r.replaceWith(e.call(this, t, i)) }) } if (typeof e !== "string") { e = n(e).detach() } return this.each(function () { var t = this.nextSibling, r = this.parentNode; n(this).remove(); if (t) { n(t).before(e) } else { n(r).append(e) } }) } else { return this.length ? this.pushStack(n(n.isFunction(e) ? e() : e), "replaceWith", e) : this } }; n.prototype.resize = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.scroll = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.scrollLeft = function (e) { var r, s; if (e === t) { r = this[0]; if (!r) { return null } s = getWindow(r); return s ? "pageXOffset" in s ? s[i ? "pageYOffset" : "pageXOffset"] : n.support.boxModel && s.document.documentElement[method] || s.document.body[method] : r[method] } return this.each(function () { s = getWindow(this); if (s) { s.scrollTo(!i ? e : n(s).scrollLeft(), i ? e : n(s).scrollTop()) } else { this[method] = e } }) }; n.prototype.scrollTop = function (e) { var r, s; if (e === t) { r = this[0]; if (!r) { return null } s = getWindow(r); return s ? "pageXOffset" in s ? s[i ? "pageYOffset" : "pageXOffset"] : n.support.boxModel && s.document.documentElement[method] || s.document.body[method] : r[method] } return this.each(function () { s = getWindow(this); if (s) { s.scrollTo(!i ? e : n(s).scrollLeft(), i ? e : n(s).scrollTop()) } else { this[method] = e } }) }; n.prototype.select = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.serialize = function () { return n.param(this.serializeArray()) }; n.prototype.serializeArray = function () { return this.map(function () { return this.elements ? n.makeArray(this.elements) : this }).filter(function () { return this.name && !this.disabled && (this.checked || rselectTextarea.test(this.nodeName) || rinput.test(this.type)) }).map(function (e, t) { var r = n(this).val(); return r == null ? null : n.isArray(r) ? n.map(r, function (e, n) { return { name: t.name, value: e.replace(rCRLF, "\r\n") } }) : { name: t.name, value: r.replace(rCRLF, "\r\n") } }).get() }; n.prototype.show = function (e, t, r) { var i, s; if (e || e === 0) { return this.animate(genFx("show", 3), e, t, r) } else { for (var o = 0, u = this.length; o < u; o++) { i = this[o]; if (i.style) { s = i.style.display; if (!n._data(i, "olddisplay") && s === "none") { s = i.style.display = "" } if (s === "" && n.css(i, "display") === "none") { n._data(i, "olddisplay", defaultDisplay(i.nodeName)) } } } for (o = 0; o < u; o++) { i = this[o]; if (i.style) { s = i.style.display; if (s === "" || s === "none") { i.style.display = n._data(i, "olddisplay") || "" } } } return this } }; n.prototype.siblings = function (e, t) { var r = n.map(this, fn, e), i = slice.call(arguments); if (!runtil.test(name)) { t = e } if (t && typeof t === "string") { r = n.filter(t, r) } r = this.length > 1 && !guaranteedUnique[name] ? n.unique(r) : r; if ((this.length > 1 || rmultiselector.test(t)) && rparentsprev.test(name)) { r = r.reverse() } return this.pushStack(r, name, i.join(",")) }; n.prototype.size = function () { return this.length }; n.prototype.slice = function () { return this.pushStack(slice.apply(this, arguments), "slice", slice.call(arguments).join(",")) }; n.prototype.slideDown = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.slideToggle = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.slideUp = function (e, t, n) { return this.animate(props, e, t, n) }; n.prototype.stop = function (e, t) { if (e) { this.queue([]) } this.each(function () { var e = n.timers, r = e.length; if (!t) { n._unmark(true, this) } while (r--) { if (e[r].elem === this) { if (t) { e[r](true) } e.splice(r, 1) } } }); if (!t) { this.dequeue() } return this }; n.prototype.submit = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.text = function (e) { if (n.isFunction(e)) { return this.each(function (t) { var r = n(this); r.text(e.call(this, t, r.text())) }) } if (typeof e !== "object" && e !== t) { return this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(e)) } return n.text(this) }; n.prototype.toArray = function () { return slice.call(this, 0) }; n.prototype.toggle = function (e, t, r) { var i = typeof e === "boolean"; if (n.isFunction(e) && n.isFunction(t)) { this._toggle.apply(this, arguments) } else if (e == null || i) { this.each(function () { var t = i ? e : n(this).is(":hidden"); n(this)[t ? "show" : "hide"]() }) } else { this.animate(genFx("toggle", 3), e, t, r) } return this }; n.prototype.toggleClass = function (e, t) { var r = typeof e, i = typeof t === "boolean"; if (n.isFunction(e)) { return this.each(function (r) { n(this).toggleClass(e.call(this, r, this.className, t), t) }) } return this.each(function () { if (r === "string") { var s, o = 0, u = n(this), a = t, f = e.split(rspace); while (s = f[o++]) { a = i ? a : !u.hasClass(s); u[a ? "addClass" : "removeClass"](s) } } else if (r === "undefined" || r === "boolean") { if (this.className) { n._data(this, "__className__", this.className) } this.className = this.className || e === false ? "" : n._data(this, "__className__") || "" } }) }; n.prototype.trigger = function (e, t) { return this.each(function () { n.event.trigger(e, t, this) }) }; n.prototype.triggerHandler = function (e, t) { if (this[0]) { return n.event.trigger(e, t, this[0], true) } }; n.prototype.unbind = function (e, t) { if (typeof e === "object" && !e.preventDefault) { for (var r in e) { this.unbind(r, e[r]) } } else { for (var i = 0, s = this.length; i < s; i++) { n.event.remove(this[i], e, t) } } return this }; n.prototype.undelegate = function (e, t, n) { if (arguments.length === 0) { return this.unbind("live") } else { return this.die(t, null, n, e) } }; n.prototype.unload = function (e, t) { if (t == null) { t = e; e = null } return arguments.length > 0 ? this.bind(name, e, t) : this.trigger(name) }; n.prototype.unwrap = function () { return this.parent().each(function () { if (!n.nodeName(this, "body")) { n(this).replaceWith(this.childNodes) } }).end() }; n.prototype.val = function (e) { var r, i, s = this[0]; if (!arguments.length) { if (s) { r = n.valHooks[s.nodeName.toLowerCase()] || n.valHooks[s.type]; if (r && "get" in r && (i = r.get(s, "value")) !== t) { return i } i = s.value; return typeof i === "string" ? i.replace(rreturn, "") : i == null ? "" : i } return t } var o = n.isFunction(e); return this.each(function (i) { var s = n(this), u; if (this.nodeType !== 1) { return } if (o) { u = e.call(this, i, s.val()) } else { u = e } if (u == null) { u = "" } else if (typeof u === "number") { u += "" } else if (n.isArray(u)) { u = n.map(u, function (e) { return e == null ? "" : e + "" }) } r = n.valHooks[this.nodeName.toLowerCase()] || n.valHooks[this.type]; if (!r || !("set" in r) || r.set(this, u, "value") === t) { this.value = u } }) }; n.prototype.width = function (e) { var r = this[0]; if (!r) { return e == null ? null : this } if (n.isFunction(e)) { return this.each(function (t) { var r = n(this); r[type](e.call(this, t, r[type]())) }) } if (n.isWindow(r)) { var i = r.document.documentElement["client" + name], s = r.document.body; return r.document.compatMode === "CSS1Compat" && i || s && s["client" + name] || i } else if (r.nodeType === 9) { return Math.max(r.documentElement["client" + name], r.body["scroll" + name], r.documentElement["scroll" + name], r.body["offset" + name], r.documentElement["offset" + name]) } else if (e === t) { var o = n.css(r, type), u = parseFloat(o); return n.isNaN(u) ? o : u } else { return this.css(type, typeof e === "string" ? e : e + "px") } }; n.prototype.wrap = function (e) { return this.each(function () { n(this).wrapAll(e) }) }; n.prototype.wrapAll = function (e) { if (n.isFunction(e)) { return this.each(function (t) { n(this).wrapAll(e.call(this, t)) }) } if (this[0]) { var t = n(e, this[0].ownerDocument).eq(0).clone(true); if (this[0].parentNode) { t.insertBefore(this[0]) } t.map(function () { var e = this; while (e.firstChild && e.firstChild.nodeType === 1) { e = e.firstChild } return e }).append(this) } return this }; n.prototype.wrapInner = function (e) { if (n.isFunction(e)) { return this.each(function (t) { n(this).wrapInner(e.call(this, t)) }) } return this.each(function () { var t = n(this), r = t.contents(); if (r.length) { r.wrapAll(e) } else { t.append(e) } }) }; n.fn = n.prototype; n.fn.init.prototype = n.fn; e.jQuery = e.$ = n })(window)