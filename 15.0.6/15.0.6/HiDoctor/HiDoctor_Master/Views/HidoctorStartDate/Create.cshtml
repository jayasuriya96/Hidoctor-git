@*divHidoctor@model MVCModels.HiDoctor_Master.UserModel*@

@{
    Layout = null;
}
<style>
     .e-grid .e-groupdroparea {
        background-color: #0072c6 !important;
        color: white !important;
        margin-top: 15px !important;
        font-weight: bold !important;
    }

    .e-headercelldiv {
        font-size: 14px !important;
        color: black !important;
        margin-top: 3px !important;
    }
</style>
<script>
    $('link[href="/Content/hidoctor.css?v=12.8.6.5"]').remove();
</script>
<link href="~/Content/Bootstrap/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/Bootstrap/bootstrap.js" type="text/javascript"></script>

@*<div class="col-lg-3" id="divleft" class="treebg">
        <img src="../Areas/HiDoctor_Activity/Content/images/Web/hd/gr.png" id="imggr" style="display: none; cursor: pointer"
            onclick="fnOpenTree()" />
        <img src="../Areas/HiDoctor_Activity/Content/images/Web/hd/less.png" id="imgless" onclick="fnCloseTree()"
            style="cursor: pointer" />
        <span>Show / Hide Tree</span>
        <div id="usertree" style="height: 700px;">
            <div class="dv-controls-load">
                <img src="../Areas/HiDoctor_Activity/Content/images/Web/hd/load.gif" />
                Loading tree
            </div>
        </div>
    </div>*@
@*<div class='col-xs-12'>*@
<div class='col-xs-3 leftNav' id='leftNav' style="margin-top:12px;">
    <div id="usertree" style="float: left; height: auto; width: 100%">
    </div>
    @*<span id="spnTreeResize" onclick="fnUserTreeResize(this);"><i class="fa fa-chevron-circle-right fa-lg"></i></span>*@
    <div style="width: 1px;"></div>
</div>
@*</div>*@
<div class='col-xs-9 rghtInputandRpt' style="float: left" id="divMain">
    <div style="display: none;" id="divToggle">
        <span id="spnTreeToggle" style="text-decoration: underline; cursor: pointer; padding: 5px"
              onclick="fnToggleTree()">Hide Tree</span> | <span id="spnInputToggle" style="text-decoration: underline; cursor: pointer; padding: 5px"
                                                                onclick="fnToggleInput()">Hide Input</span>
    </div>
</div>
<div id="dataDiv" class="col-lg-9">
    <div id="dvuserHeaderDetails"></div>

    <input type="hidden" id="hdnUserCode" />
    <div class="page-header">
        <h3 id="userNameHeader"></h3>
    </div>



    <table id="tblinput">
        <tr>
            <td>
                <label class="control-label">HiDoctor Start Date:</label>
            </td>
            <td>
                <input type="text" id="txtstartDate" class='datepicker input-large' style="margin-left: -62px;" />
                <input type="hidden" id="hdnUserCode" />
            </td>
        </tr>
        <tr></tr>
        <tr>
            <td>
                <input type="button" name="Save" value="Save" id="btnSave" onclick="fnSubmit()" class="btn btn-primary"  style="margin-top: 19px; margin-left: 137px;"/>
                <div></div>
            </td>
            <td>
                <input type="button" name="Cancel" value="Cancel" id="btnCancel" onclick="fnClearAll()" class="btn btn-primary" style="margin-top: 19px; margin-left: 25px;" />
                <div ></div>
            </td>
        </tr>
    </table>
    <br />
    <div id="divHidoctor"></div>
</div>
  
<div style="clear: both"></div>
<div id="dvloading" style="display: none">
    <img src="../../Content/images/loader1.gif" />
</div>
</div>

<script type="text/javascript" src="../../Areas/HiDoctor/Scripts/HD/common.js?v=@HiDoctor.BuildNumber.BuildNo"></script>
<script type="text/javascript" src="../../Areas/HiDoctor_Master/Scripts/HD_Master/HidoctorStartDate.js?v=@HiDoctor.BuildNumber.BuildNo"></script>
<script type="text/javascript">


    var currentUserCode_g='';
    var userCodes = "";
    var selKeys ="";
    $(document).ready(function () {
        AjaxGlobalHandler.Initiate();
        debugger;
        //try {
        //    debugger;
           
            $(".datepicker").datepicker({
                dateFormat: 'dd/mm/yy',
            });
            currentUserCode_g = @Html.Raw(Json.Encode(ViewBag.User_Code));

    //        $("#leftNav").show();
    //         fnTreePosiition("usertree");
    //        //fnBindUserTreeNew("usertree");
    //        fnGetUserTreeByUserWithCheckBox(currentUserCode_g, "dvUserTree", "dvFilteredNode");
    //        $('#dvPreviousNode').click(function () { fnBindUsersWithOneLevelParentmethod(); });
    //        $('#txtSearchNode').bind("keypress", function (e) {
    //            if (e.keyCode == 13) {
    //                fnSearchUsersNew();
    //                return false;
    //            }
    //        });
    //        HidoctorStartDate();
    //        // $("#dvTree").show();
    //        $('#divInput').hide();
    //        $('#divToggle').hide();
    //        $("#divMain").addClass('col-xs-9');
    //        $('#txtFrom').monthpicker();
    //        $('#txtTo').monthpicker();
    //        $('#dvAjaxLoad').hide()
    //    }
    //    catch (err) {
    //      $("#dvAjaxLoad").hide();
    //    }
    //});
    //$(document).ready(function () {
    //    AjaxGlobalHandler.Initiate();
    //    try {
    //        fnGetHidoctorStartDate();
    //        $(".datepicker").datepicker({
    //            dateFormat: 'dd/mm/yy',
    //        });
    //    }
    //    catch (err) {
    //        $("#dvAjaxLoad").hide();
    //    }
    //    $("#divPageHeader").html('HiDoctor Start Date');
    //});
            //fnGetHidoctorStartDate();
            //$(".datepicker").datepicker({
            //    dateFormat: 'dd/mm/yy',
            //    catch (err) {
            //        $("#dvAjaxLoad").hide();
            //    }
            //});
       // $("#divPageHeader").html('HiDoctor Start Date');
        try {
                debugger;

                $("#leftNav").show();
                fnTreePositionForMasterDataMD("usertree");
                fnGetUserTreeByUserWithCheckBox(currentUserCode_g, "dvUserTree", "dvFilteredNode");
                //$('#dvPreviousNode').click(function () { fnBindUsersWithOneLevelParentNewMD(); });
                $('#txtSearchNode').bind("keypress", function (e) {
                    if (e.keyCode == 13) {
                        fnSearchUsersNewMD();
                        return false;
                    }
                });
                HidoctorStartDate();
                $("#dvAjaxLoad").hide();
                // $('#divInput').hide();
            }
            catch (err) {
                $("#dvAjaxLoad").hide();
            }
    });
   



        function fnUserTreePostInit() {
            // fnRootNodeDisable();
        }
        function fnTreePositionForMasterDataMD(id) {
            debugger;
            var tblContent = "";
            tblContent += "<div id='treeNav'>";
            tblContent += "<div id='dvNodeSearch'>";
            tblContent += "<div class='input-group col-xs-8'>";
            tblContent += "<input type='text' id='txtSearchNode' placeholder='Search' class='form-control'/>";
            tblContent += "<span class='input-group-addon' onclick='fnSearchUsersNewMD();'><i class='fa fa-search'></i></span></div>";
            tblContent += "<span onclick='fnShowFullTreeClickMD();' id='dvFullTree' class='pull-right' style='margin-right: 4%;cursor:pointer;' title='Click here to show all users'><i class='fa fa-th-list fa-2'></i></span>";
            tblContent += "<span onclick='fnLoadInitialTreeMD();' id='dvLoadTree' class='pull-right' style='display: none; margin-right: 4%;cursor:pointer;' title='Click here to show all users' ><i class='fa fa-th-list fa-2'></i></span>";
            tblContent += "<div class='clearfix'></div></div>";
            tblContent += "<div id='dvFilteredNode' class='dvFilteredNode' style='display: none;'></div>";
            tblContent += "<div id='dvMainTree'>";
            //tblContent += "<div id='dvPreviousNode' class='dvPreviousNode' onclick='fnBindUsersWithOneLevelParentNewMD();'>";
            //tblContent += "<i class='fa fa-arrow-up '></i></div>";
            tblContent += "<div id='dvUserTree' class='dvNewUserTree' style='height:650px'><img src='../Areas/HiDoctor_Activity/Content/images/Web/hd/load.gif'/>Loading tree</div>";
            tblContent += "<div class='clearfix' style='height: 676px' ></div>";
            tblContent += "</div></div>";
            $('#' + id).html(tblContent);
        }
        function fnShowFullTreeClickMD() {
            debugger;
            $('#dvPreviousNode').hide();
            $('#dvFullTree').hide();
            $('#dvLoadTree').show();
            $('#dvLoadTree').attr("title", "Click here to show users");
            fnGetUserTreeByUserWithCheckBox(currentUserCode_g, "dvUserTree", "dvFilteredNode", "NO");
        }
        function fnLoadInitialTreeMD() {
            debugger;
            $('#dvFullTree').show();
            $('#dvLoadTree').hide();
            $('#dvFullTree').attr("title", "Click here to show all users");
            fnGetUserTreeByUserWithCheckBox(currentUserCode_g, "dvUserTree", "dvFilteredNode");
        }
        function fnBindUsersWithOneLevelParentNewMD() {
            debugger;
            var userCode = $("#dvUserTree").dynatree("getTree").tnRoot.childList[0].data.key;
            fnGetUserTreeByUserWithOnelevelParentNew(userCode, "dvUserTree", "dvFilteredNode");
        }
        function fnSearchUsersNewMD() {
            debugger;
            if ($.trim($('#txtSearchNode').val()) == '') {
                if(selKeys.length==0){
                    fnGetUserTreeByUserWithCheckBox(currentUserCode_g, "dvUserTree", "dvFilteredNode");
                }else{
                    fnGetUserTreeByUserwithcheckboxMD(currentUserCode_g, "dvUserTree", "dvFilteredNode");
                }
           
           
            }
            else {
                fnGetUsersByUserNameEmployeeNameMD($('#txtSearchNode').val(), "dvUserTree", "dvFilteredNode");
            }
        }
        function fnGetUsersByUserNameEmployeeNameMD(userName, treeId, filterId) {
            debugger;
            $.ajax({
                type: "POST",
                url: 'HiDoctor_Master/HidoctorStartDate/GetUsersByUserNameEmployeeNameMD',
                data: "userName=" + userName + "&treeId=" + treeId + "&filterId=" + filterId + "",
                success: function (result) {
                    debugger;
                    if (result != "") {
                        $('#' + filterId).html(result);
                        $('#' + treeId).hide();
                        $('#' + filterId).show();

                    }
                    else {
                        debugger;
                        fnGenerateUserTree("dvUserTree");
                        $('#' + treeId).show();
                        $('#' + filterId).hide();
                    }
                },
                error: function () {
                },
                complete: function () {
                }
            });
        }
        function fnBindTreeWithSelectedUserChecked(userCode,treeId,filterId){
            debugger;
            if(userCode!=""){
                fnGetUserTreeByUserwithcheckboxMD(userCode, treeId,filterId);
            }
        }
        function fnGetUserTreeByUserwithcheckboxMD(userCode, treeId, filterId) {
            debugger;
            if (userCode == "") {
                userCode = currentUserCode_g;
            }
            //if (userCode == curUserCode_g) {
            //    $('#dvPreviousNode').hide();
            //}
            //else {
            //    $('#dvPreviousNode').show();
            //}
            $('#' + treeId).block({
                message: '<h3>Loading...</h3>',
                css: { border: '1px solid #ddd' }
            });
            $.ajax({
                type: "POST",
                url: 'Master/UserTreeGenerationByUserCode',
                data: "userCode=" + userCode + "&includeOneLevelParent=NO",
                success: function (jsData) {
                    if (jsData != '') {
                        $('#' + filterId).hide();
                        $("#" + treeId).show();
                        strTree = jsData;
                        $("#" + treeId).html(' ');
                        $('#' + treeId).dynatree('destroy');
                        $('#' + treeId).empty();
                        $("#" + treeId).html(strTree);

                        $("#" + treeId).dynatree({
                            checkbox: true,
                            onActivate: function (node) {
                                fnUserTreeNodeClick(node);
                            },
                            onClick: function (node, event) {
                                // Close menu on click
                                //if ($(event.target).hasClass("parent")) {
                                //    alert("You clicked " + node + ",  url=" + node.url);
                                //}
                                if ($(".contextMenu:visible").length > 0) {
                                    $(".contextMenu").hide();
                                }
                            },
                            onSelect: function (select, node) {
                                //// Get a list of all selected nodes, and convert to a key array:
                                fnUserTreeSelect(select, node);
                            },
                            //onLazyRead: function (node) {
                            //    // In real life we would call something like this:

                            //    // .. but here we use a local file instead:
                            //    //node.appendAjax({
                            //    //    url: "sample-data2.json",
                            //    //    // We don't want the next line in production code:
                            //    //    debugLazyDelay: 750
                            //    //});
                            //    fnAddNode(node);
                            //},
                            onCreate: function (node, span) {
                                bindUserContextMenu(span);
                            },
                            onKeydown: function (node, event) {
                                // Eat keyboard events, when a menu is open

                            },
                            onDeactivate: function (node) {
                            },
                            strings: {
                                loading: "Loading…",
                                loadError: "Load error!"
                            },
                            onDblClick: function (node, event) {
                                fnUserTreeNodeDblClick(node);
                            },
                            onPostInit: function (node, event) {
                                fnUserTreePostInit(node);
                            }
                        });
                 
                   
                        $("#dvAjaxLoad").hide();
                        $("span.childIcon").unbind("click");
                        $("span.childIcon").live("click", function (e) {
                            //alert("Edit " + $.ui.dynatree.getNode(e.target));
                            fnShowChildNodes(e.target);
                        });
                    }
                },
                error: function () {
                    $('#' + treeId).unblock();
                },
                complete: function () {
                    var testKey=selKeys;
                    for (var i = 0; i < testKey.length; i++) {
                        $("#"+treeId).dynatree("getRoot").visit(function (node) {
                            if(testKey[i]==node.data.key){
                                node.select(true);
                            }
                        });
                    }
                    $('#' + treeId).unblock();
                }
                //}
            });
        }
        function fnToggleTree() {
            if ($("#spnTreeToggle").html() == "Hide Tree") {
                $('#usertree').hide();
                $('#leftNav').removeClass('col-xs-5');
                $('#leftNav').removeClass('col-xs-4');
                $('#leftNav').removeClass('col-xs-3');
                $("#divMain").removeClass('col-xs-9');
                $("#divMain").removeClass('col-xs-8');
                $("#divMain").removeClass('col-xs-7');
                $("#divMain").addClass('col-xs-11');
                $("#spnTreeToggle").html('Show Tree');

                //Expand the Tree
                $('#spnTreeResize').attr('title', 'Click here to expand tree');
                $('#spnTreeResize').html('<i class="fa fa-chevron-circle-right fa-lg"></i>');
            }
            else if ($("#spnTreeToggle").html() == "Show Tree") {
                $('#usertree').show();
                $('#leftNav').addClass('col-xs-3');
                $('#divMain').removeClass('col-xs-7');
                $('#divMain').removeClass('col-xs-8');
                $('#divMain').removeClass('col-xs-9');
                $("#divMain").addClass('col-xs-9');
                $("#spnTreeToggle").html('Hide Tree');
            }
        }

        function fnToggleInput() {
            if ($("#spnInputToggle").html() == "Hide Input") {
                $("#divInput").slideUp();
                $("#spnInputToggle").html("Show Input");
            }
            else if ($("#spnInputToggle").html() == "Show Input") {
                $("#spnInputToggle").html("Hide Input");
                $("#divInput").slideDown();
            }
        }

        //Used To Resize the Tree
        function fnUserTreeResize(obj) {
            if (treeExpandLevel == 2) {
                treeExpandLevel = -1;
            }
            else {
                treeExpandLevel = parseInt(treeExpandLevel) + 1;
            }
            fnExpandCollapseUserTree(treeExpandLevel, 'leftNav', 'treeNav', obj, 'divMain', 'usertree');
        }
</script>


<div id="myModal" class="modal fade" role="dialog" style="margin-left:35%">
    @*<div class="modal-dialog">*@

        <!-- Modal content-->
        <div class="modal-content" style ="width:53%">
            <div class="modal-header">
              @*  <button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">Info</h4>
            </div>
            <div id ="users" class="modal-body" style="overflow-y:scroll;height:350px">
             
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        @*</div>*@

    </div>
</div>