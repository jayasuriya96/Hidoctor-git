(function (e) { var t = { init: function (t) { return this.each(function () { var n = e(this), r = n.data("monthpicker"), i = t && t.year ? t.year : (new Date).getFullYear(), s = e.extend({ pattern: "mmm-yyyy", selectedMonth: null, selectedMonthName: "", selectedYear: i, startYear: i - 10, finalYear: i + 10, monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], id: "monthpicker_" + (Math.random() * Math.random()).toString().replace(".", ""), openOnFocus: true, disabledMonths: [] }, t); s.dateSeparator = s.pattern.replace(/(mmm|mm|m|yyyy|yy|y)/ig, ""); if (!r) { e(this).data("monthpicker", { target: n, settings: s }); if (s.openOnFocus === true) { n.bind("focus", function () { n.monthpicker("show") }) } n.monthpicker("mountWidget", s); n.bind("monthpicker-click-month", function (e, t, r) { n.monthpicker("setValue", s); n.monthpicker("hide") }); e(document).mousedown(function (e) { if (!e.target.className || e.target.className.indexOf("mtz-monthpicker") < 0) { n.monthpicker("hide") } }) } }) }, show: function (t) { var n = e("#" + this.data("monthpicker").settings.id); var r = e("#" + this.data("monthpicker").target.attr("id") + ":eq(0)"); n.css("top", r.offset().top + r.outerHeight()); n.css("left", r.offset().left); n.show(); n.find("select").focus(); this.trigger("monthpicker-show") }, hide: function () { if (e("#" + this.data("monthpicker") != undefined)) { var t = e("#" + this.data("monthpicker").settings.id); if (t.is(":visible")) { t.hide(); this.trigger("monthpicker-hide") } } }, setValue: function (e) { var t = e.selectedMonth, n = e.selectedYear; if (e.pattern.indexOf("mmm") >= 0) { t = e.selectedMonthName } else if (e.pattern.indexOf("mm") >= 0 && e.selectedMonth < 10) { t = "0" + e.selectedMonth } if (e.pattern.indexOf("yyyy") < 0) { n = n.toString().substr(2, 2) } if (e.pattern.indexOf("y") > e.pattern.indexOf(e.dateSeparator)) { this.val(t + e.dateSeparator + n) } else { this.val(n + e.dateSeparator + t) } }, disableMonths: function (t) { var n = this.data("monthpicker").settings, r = e("#" + n.id); n.disabledMonths = t; r.find(".mtz-monthpicker-month").each(function () { var n = parseInt(e(this).data("month")); if (e.inArray(n, t) >= 0) { e(this).addClass("ui-state-disabled") } else { e(this).removeClass("ui-state-disabled") } }) }, mountWidget: function (t) { var n = this, r = e('<div id="' + t.id + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" />'), i = e('<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all mtz-monthpicker" />'), s = e('<select class="mtz-monthpicker mtz-monthpicker-year" />'), o = e('<table class="mtz-monthpicker" />'), u = e('<tbody class="mtz-monthpicker" />'), a = e('<tr class="mtz-monthpicker" />'), f = ""; selectedYear = t.selectedYear, c = null; r.css({ position: "absolute", zIndex: 999999, whiteSpace: "nowrap", width: "250px", overflow: "hidden", textAlign: "center", display: "none", top: n.offset().top + n.outerHeight(), left: n.offset().left }); for (var l = t.startYear; l <= t.finalYear; l++) { var c = e('<option class="mtz-monthpicker" />').attr("value", l).append(l); if (t.selectedYear === l) { c.attr("selected", "selected") } s.append(c) } i.append(s).appendTo(r); for (var l = 1; l <= 12; l++) { f = e('<td class="ui-state-default mtz-monthpicker mtz-monthpicker-month" style="padding:5px;cursor:default;" />').attr("data-month", l); f.append(t.monthNames[l - 1]); a.append(f).appendTo(u); if (l % 3 === 0) { a = e('<tr class="mtz-monthpicker" />') } } o.append(u).appendTo(r); r.find(".mtz-monthpicker-month").bind("click", function () { var r = parseInt(e(this).data("month")); if (e.inArray(r, t.disabledMonths) < 0) { t.selectedMonth = e(this).data("month"); t.selectedMonthName = e(this).text(); n.trigger("monthpicker-click-month", e(this).data("month")) } }); r.find(".mtz-monthpicker-year").bind("change", function () { t.selectedYear = e(this).val(); n.trigger("monthpicker-change-year", e(this).val()) }); r.appendTo("body") }, destroy: function () { return this.each(function () { e(this).removeData("monthpicker") }) } }; e.fn.monthpicker = function (n) { if (t[n]) { return t[n].apply(this, Array.prototype.slice.call(arguments, 1)) } else if (typeof n === "object" || !n) { return t.init.apply(this, arguments) } else { e.error("Method " + n + " does not exist on jQuery.mtz.monthpicker") } } })(jQuery)