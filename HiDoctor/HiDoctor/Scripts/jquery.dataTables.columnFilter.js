(function (e) { e.fn.columnFilter = function (t) { function c(e, t, n, r, i) { if (typeof t == "undefined") return new Array; if (typeof n == "undefined") n = true; if (typeof r == "undefined") r = true; if (typeof i == "undefined") i = true; var s; if (r == true) s = e.aiDisplay; else s = e.aiDisplayMaster; var o = new Array; for (var u = 0, a = s.length; u < a; u++) { var f = s[u]; var l = w.fnGetData(f); var c = l[t]; if (i == true && c.length == 0) continue; else if (n == true && jQuery.inArray(c, o) > -1) continue; else o.push(c) } return o.sort() } function h(e) { if (S.bUseColVis) return e; else return w.fnSettings().oApi._fnVisibleToColumnIndex(w.fnSettings(), e) } function p(t, o, u, a, f, c) { var p = "text_filter"; if (a) p = "number_filter"; i = i.replace(/(^\s*)|(\s*$)/g, ""); var d = t.fnSettings().aoPreSearchCols[r].sSearch; var v = "search_init "; var m = i; if (d != "" && d != "^") { if (a && d.charAt(0) == "^") m = d.substr(1); else m = d; v = "" } var g = e('<input type="text" class="' + v + p + '" value="' + m + '"/>'); if (c != undefined && c != -1) { g.attr("maxlength", c) } s.html(g); if (a) s.wrapInner('<span class="filter_column filter_number" />'); else s.wrapInner('<span class="filter_column filter_text" />'); n[r] = i; var y = r; if (a && !t.fnSettings().oFeatures.bServerSide) { g.keyup(function () { t.fnFilter("^" + this.value, h(y), true, false); l() }) } else { g.keyup(function () { if (t.fnSettings().oFeatures.bServerSide && f != 0) { var n = t.fnSettings().aoPreSearchCols[y].sSearch; var r = e(this).data("dt-iLastFilterLength"); if (typeof r == "undefined") r = 0; var i = this.value.length; if (Math.abs(i - r) < f) { return } else { e(this).data("dt-iLastFilterLength", i) } } t.fnFilter(this.value, h(y), o, u); l() }) } g.focus(function () { if (e(this).hasClass("search_init")) { e(this).removeClass("search_init"); this.value = "" } }); g.blur(function () { if (this.value == "") { e(this).addClass("search_init"); this.value = n[y] } }) } function d(t) { s.html(b(0)); var n = t.attr("id") + "_range_from_" + r; var i = e('<input type="text" class="number_range_filter" id="' + n + '" rel="' + r + '"/>'); s.append(i); s.append(b(1)); var o = t.attr("id") + "_range_to_" + r; var u = e('<input type="text" class="number_range_filter" id="' + o + '" rel="' + r + '"/>'); s.append(u); s.append(b(2)); s.wrapInner('<span class="filter_column filter_number_range" />'); var f = r; a.push(r); t.dataTableExt.afnFiltering.push(function (e, r, i) { if (t.attr("id") != e.sTableId) return true; if (document.getElementById(n) == null) return true; var s = document.getElementById(n).value * 1; var u = document.getElementById(o).value * 1; var a = r[h(f)] == "-" ? 0 : r[h(f)] * 1; if (s == "" && u == "") { return true } else if (s == "" && a <= u) { return true } else if (s <= a && "" == u) { return true } else if (s <= a && a <= u) { return true } return false }); e("#" + n + ",#" + o, s).keyup(function () { var e = document.getElementById(n).value * 1; var r = document.getElementById(o).value * 1; if (e != 0 && r != 0 && e > r) return; t.fnDraw(); l() }) } function v(t) { var n = o.split(/[}{]/); s.html(""); var i = t.attr("id") + "_range_from_" + r; var u = e('<input type="text" class="date_range_filter" id="' + i + '" rel="' + r + '"/>'); u.datepicker(); var f = t.attr("id") + "_range_to_" + r; var c = e('<input type="text" class="date_range_filter" id="' + f + '" rel="' + r + '"/>'); for (ti = 0; ti < n.length; ti++) { if (n[ti] == S.sDateFromToken) { s.append(u) } else { if (n[ti] == S.sDateToToken) { s.append(c) } else { s.append(n[ti]) } } } s.wrapInner('<span class="filter_column filter_date_range" />'); c.datepicker(); var p = r; a.push(r); t.dataTableExt.afnFiltering.push(function (n, r, i) { if (t.attr("id") != n.sTableId) return true; var s = u.datepicker("getDate"); var o = c.datepicker("getDate"); if (s == null && o == null) { return true } var a = null; try { if (r[h(p)] == null || r[h(p)] == "") return false; a = e.datepicker.parseDate(e.datepicker.regional[""].dateFormat, r[h(p)]) } catch (f) { return false } if (a == null) return false; if (s == null && a <= o) { return true } else if (s <= a && o == null) { return true } else if (s <= a && a <= o) { return true } return false }); e("#" + i + ",#" + f, s).change(function () { t.fnDraw(); l() }) } function m(t, n, i, s, o, u, a) { if (n == null) n = c(t.fnSettings(), i, true, false, true); var f = i; var h = t.fnSettings().aoPreSearchCols[r].sSearch; if (h == null || h == "") h = a; var p = '<select class="search_init select_filter"><option value="" class="search_init">' + o + "</option>"; var d = 0; var v = n.length; for (d = 0; d < v; d++) { if (typeof n[d] != "object") { var m = ""; if (escape(n[d]) == h || escape(n[d]) == escape(h)) m = "selected "; p += "<option " + m + ' value="' + escape(n[d]) + '">' + n[d] + "</option>" } else { var m = ""; if (u) { if (n[d].value == h) m = "selected "; p += "<option " + m + 'value="' + n[d].value + '">' + n[d].label + "</option>" } else { if (escape(n[d].value) == h) m = "selected "; p += "<option " + m + 'value="' + escape(n[d].value) + '">' + n[d].label + "</option>" } } } var g = e(p + "</select>"); s.html(g); s.wrapInner('<span class="filter_column filter_select" />'); g.change(function () { if (e(this).val() != "") { e(this).removeClass("search_init") } else { e(this).addClass("search_init") } if (u) t.fnFilter(e(this).val(), i, u); else t.fnFilter(unescape(e(this).val()), i); l() }); if (h != null && h != "") t.fnFilter(unescape(h), i) } function g(e, t, n, o) { var u = e.fnSettings(); if (t == null && u.sAjaxSource != "" && !u.oFeatures.bServerSide) { u.aoDrawCallback.push({ fn: function (t, r, i) { return function () { if (u.iDraw == 2 && u.sAjaxSource != null && u.sAjaxSource != "" && !u.oFeatures.bServerSide) { return m(e, null, h(t), r, i, n, o) } } }(r, s, i), sName: "column_filter_" + r }) } m(e, t, h(r), s, i, n, o) } function y(t, n) { if (n == null) n = c(t.fnSettings(), r, true, true, true); var o = r; var u = "", a, f = n.length; var h = i.replace("%", "Perc").replace("&", "AND").replace("$", "DOL").replace("£", "STERL").replace("@", "AT").replace(/\s/g, "_"); h = h.replace(/[^a-zA-Z 0-9]+/g, ""); var p = i; if (S.sFilterButtonText != null || S.sFilterButtonText != undefined) { p = S.sFilterButtonText } var d = 10; var v = 12; var m = Math.floor(f / v); if (f % v > 0) { m = m + 1 } var g = 100 / m - 2; var y = d * m; if (m == 1) { g = 20 } var b = '<div style="float:left; min-width: ' + g + '%; " >'; var w = "</div>"; var E = t.attr("id") + h; var x = "chkBtnOpen" + E; var T = E + "-flt-toggle"; u += '<button id="' + x + '" class="checkbox_filter" > ' + p + "</button>"; u += '<div id="' + T + '" ' + 'title="' + i + '" ' + 'class="toggle-check ui-widget-content ui-corner-all"  style="width: ' + y + '%; " >'; u += b; for (a = 0; a < f; a++) { if (a % v == 0 && a != 0) { u += w + b } u += '<input class="search_init checkbox_filter" type="checkbox" id= "' + n[a] + '" name= "' + h + '" value="' + n[a] + '" >' + n[a] + "<br/>"; var N = e(u); s.html(N); s.wrapInner('<span class="filter_column filter_checkbox" />'); N.change(function () { var r = ""; var i = "|"; var s = e('input:checkbox[name="' + h + '"]:checked').size(); e('input:checkbox[name="' + h + '"]:checked').each(function (t) { if (t == 0 && s == 1 || t != 0 && t == s - 1) { i = "" } r = r.replace(/^\s+|\s+$/g, ""); r = r + e(this).val() + i; i = "|" }); for (var u = 0; u < f; u++) { if (r != "") { e("#" + n[u]).removeClass("search_init") } else { e("#" + n[u]).addClass("search_init") } } t.fnFilter(r, o, true, false); l() }) } e("#" + x).button(); e("#" + T).dialog({ autoOpen: false, hide: "blind", buttons: [{ text: "Reset", click: function () { e('input:checkbox[name="' + h + '"]:checked').each(function (t) { e(this).attr("checked", false); e(this).addClass("search_init") }); t.fnFilter("", o, true, false); l(); return false } }, { text: "Close", click: function () { e(this).dialog("close") } }] }); e("#" + x).click(function () { e("#" + T).dialog("open"); var t = e(this); e("#" + T).dialog("widget").position({ my: "top", at: "bottom", of: t }); return false }); var C = l; l = function () { var t = e("#" + x); e("#" + T).dialog("widget").position({ my: "top", at: "bottom", of: t }); C() } } function b(e) { switch (e) { case 0: return o.substring(0, o.indexOf("{from}")); case 1: return o.substring(o.indexOf("{from}") + 6, o.indexOf("{to}")); default: return o.substring(o.indexOf("{to}") + 4) } } var n, r, i, s; var o = "From {from} to {to}"; var u = new Array; var a = new Array; var f = null; var l = function () { }; var w = this; var E = { sPlaceHolder: "foot", sRangeSeparator: "~", iFilteringDelay: 500, aoColumns: null, sRangeFormat: "From {from} to {to}", sDateFromToken: "from", sDateToToken: "to" }; var S = e.extend(E, t); return this.each(function () { if (!w.fnSettings().oFeatures.bFilter) return; n = new Array; var t = w.fnSettings().aoFooter[0]; var f = w.fnSettings().nTFoot; var l = "tr"; if (S.sPlaceHolder == "head:after") { var c = e("tr:first", w.fnSettings().nTHead).detach(); if (w.fnSettings().bSortCellsTop) { c.prependTo(e(w.fnSettings().nTHead)); t = w.fnSettings().aoHeader[1] } else { c.appendTo(e(w.fnSettings().nTHead)); t = w.fnSettings().aoHeader[0] } l = "tr:last"; f = w.fnSettings().nTHead } else if (S.sPlaceHolder == "head:before") { if (w.fnSettings().bSortCellsTop) { var c = e("tr:first", w.fnSettings().nTHead).detach(); c.appendTo(e(w.fnSettings().nTHead)); t = w.fnSettings().aoHeader[1] } else { t = w.fnSettings().aoHeader[0] } l = "tr:first"; f = w.fnSettings().nTHead } e(t).each(function (t) { r = t; var n = { type: "text", bRegex: false, bSmart: true, iMaxLenght: -1, iFilterLength: 0 }; if (S.aoColumns != null) { if (S.aoColumns.length < r || S.aoColumns[r] == null) return; n = S.aoColumns[r] } i = e(e(this)[0].cell).text(); if (n.sSelector == null) { s = e(e(this)[0].cell) } else { s = e(n.sSelector); if (s.length == 0) s = e(e(this)[0].cell) } if (n != null) { if (n.sRangeFormat != null) o = n.sRangeFormat; else o = S.sRangeFormat; switch (n.type) { case "null": break; case "number": p(w, true, false, true, n.iFilterLength, n.iMaxLenght); break; case "select": if (n.bRegex != true) n.bRegex = false; g(w, n.values, n.bRegex, n.selected); break; case "number-range": d(w); break; case "date-range": v(w); break; case "checkbox": y(w, n.values); break; case "text": default: bRegex = n.bRegex == null ? false : n.bRegex; bSmart = n.bSmart == null ? false : n.bSmart; p(w, bRegex, bSmart, false, n.iFilterLength, n.iMaxLenght); break } } }); for (j = 0; j < a.length; j++) { var h = function () { var t = w.attr("id"); return e("#" + t + "_range_from_" + a[j]).val() + S.sRangeSeparator + e("#" + t + "_range_to_" + a[j]).val() }; u.push(h) } if (w.fnSettings().oFeatures.bServerSide) { var m = w.fnSettings().fnServerData; w.fnSettings().fnServerData = function (t, n, r) { for (j = 0; j < a.length; j++) { var i = a[j]; for (k = 0; k < n.length; k++) { if (n[k].name == "sSearch_" + i) n[k].value = u[j]() } } n.push({ name: "sRangeSeparator", value: S.sRangeSeparator }); if (m != null) { try { m(t, n, r, w.fnSettings()) } catch (s) { m(t, n, r) } } else { e.getJSON(t, n, function (e) { r(e) }) } } } }) } })(jQuery)