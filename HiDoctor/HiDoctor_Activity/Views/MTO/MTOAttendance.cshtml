@{
    Layout = "~/Views/Shared/_batchMobileLayOut.cshtml";
}
<link href="~/Areas/HiDoctor_Activity/Content/mdtimepicker.css" rel="stylesheet" />
<style>

</style>
<form>
    <div class="form-row">
        <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix" style="text-align: center;margin-top: 10px;" id="punchdiv">
            <button type="button" class="btn btn-info" id="Punch" onclick="fnMTOPunchTime();">
                Punch Start Time
            </button>
        </div>
        <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix" style="display:none" id="stime">
            <label>Start Time</label>
            <div class="col-lg-12 col-md-12 col-xs-12 clearfix">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <span style="word-break: break-word;" id="spnstrttime"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix" id="attch">
            <label>Attachment</label>
            <div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Attfile">
                <div class="panel panel-default" id="Attfile_0">
                    <div class="panel-body">
                        <input type="file" class="form-control-file" id="mapfile">
                        <span><a style="display:none;word-break: break-word;" id="spnfilename"></a></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Attendence" style="margin-top:10px;">
          
            <div class="panel panel-default" id="Acc_0">
                <div class="panel-body">
                    <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">
                        <label>Attendance Activity</label>
                        <div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Activitytype">
                            <input class="form-control" type="text" name="activity" id="Actname">
                            <input class="form-control" type="hidden" name="activityCode" id="hdncode">
                        </div>
                    </div>
                    <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">
                        <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix" style="padding:0px">
                            <label>Working Time</label>
                        </div>
                        <div class="col-lg-6 col-md-6 col-xs-6 clearfix">
                            <input class="form-control Frompicker" type="text" id="Frompicker" placeholder="From Time">
                        </div>
                        <div class="col-lg-6 col-md-6 col-xs-6 clearfix">
                            <input class="form-control Topicker" type="text" id="Topicker" placeholder="To Time">
                        </div>
                    </div>
                    <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">
                        <label>Remarks</label>
                        <div class="col-lg-12 col-md-12 col-xs-12 clearfix">
                            <input class="form-control" type="text" id="ActRemark" maxlength="300">
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Add_0" style="text-align: center;">
                        <button type="button" class="btn btn-primary" id="AddAcc_0" onclick="fngetAttDetails();">Add</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">
            <label>General Remarks</label>
            <div class="col-sm-12 col-md-12 col-xs-12 clearfix" style="padding:0px;">
                <textarea class="form-control" cols="25" rows="3" id="Gremark" maxlength="300"></textarea>
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-xs-12 clearfix" style="text-align: center;">
            <button type="button" class="btn btn-primary" id="Back" onclick="fnBack()">Back</button>
            <button type="button" class="btn btn-primary" id="ActDraft" onclick="fnAttachmentcheck(0)">Draft</button>
            <button type="button" class="btn btn-primary" id="Actsubmit" onclick="fnEndPunch()">Submit</button>
          
        </div>
    </div>
</form>
<div class="modal" id="myModal">
    <div class="modal-dialog" style="-webkit-box-shadow:none;background:none;border:0px;">
        <div class="modal-content">
            <div class="modal-header">
                <label class="modal-title">Punch Time</label>
                <button type="button" class="close" id="closemodel" onclick="$('#myModal').hide()">&times;</button>
            </div>
            <div class="modal-body clearfix">
                <div class="col-lg-12 col-md-12 col-xs-12 clearfix" style="padding: 15px;">
                    <div class="col-lg-1 col-md-1 col-xs-1 clearfix" style="padding: 0px;">
                        <i class="fa fa-clock-o" aria-hidden="true" style="font-size: 23px;"></i>
                    </div>
                    <div class="col-lg-11 col-md-11 col-xs-11 clearfix" style="padding: 0px;">
                        <input class="form-control" type="text" id="punchintime" placeholder="Start Time" readonly="">
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-xs-12 clearfix">
                    <button type="button" id="punchtime" class="btn btn-primary" onclick="fnMTOInsertPunchTime()">Punch</button>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="modal" id="PunchEndTime">
    <div class="modal-dialog" style="-webkit-box-shadow:none;background:none;border:0px;">
        <div class="modal-content">
            <div class="modal-header">
                <label class="modal-title">Punch Time</label>
                <button type="button" class="close" id="closemodel" onclick="$('#PunchEndTime').hide()">&times;</button>
            </div>
            <div class="modal-body clearfix">
                <div class="col-lg-12 col-md-12 col-xs-12 clearfix" style="padding: 15px;">
                    <div class="col-lg-1 col-md-1 col-xs-1 clearfix" style="padding: 0px;">
                        <i class="fa fa-clock-o" aria-hidden="true" style="font-size: 23px;"></i>
                    </div>
                    <div class="col-lg-11 col-md-11 col-xs-11 clearfix" style="padding: 0px;">
                        <input class="form-control" type="text" id="PunchEnd" placeholder="End Time" readonly="">
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-xs-12 clearfix">
                    <button type="button" id="Endpunch" class="btn btn-primary" onclick="fnAttachmentcheck(1)">Punch</button>
                </div>
            </div>
        </div>

    </div>
</div>
<script src="~/Areas/HiDoctor_Activity/Scripts/mdtimepicker.js"></script>
<script>
    var CompanyId = '';
    var LoginRegionCode = '';
    var LoginUserCode = '';
    var subDomainName = '';
    var MTO_Date='';
    var Activity='';
    var Att=0;
    var inputValues = [];
    var MTO_ID=0;
    var Lid='';
    var AttIntime='';
    var Lat ='';
    var Long ='';
    var isValid=true;
    var fileData = new FormData();
    var fileUpload = '';
    var files = '';
    var file = '';
    $(document).ready(function () {
        debugger;
        subDomainName=@Html.Raw(Json.Encode(ViewBag.subDomainName));
        LoginRegionCode=@Html.Raw(Json.Encode(ViewBag.LoginRegionCode));
        LoginUserCode=@Html.Raw(Json.Encode(ViewBag.LoginUserCode));
        CompanyId=@Html.Raw(Json.Encode(ViewBag.CompanyId));
        MTO_Date=@Html.Raw(Json.Encode(ViewBag.MTO_Date));
        MTO_ID=@Html.Raw(Json.Encode(ViewBag.MTO_ID));
        Lid=@Html.Raw(Json.Encode(ViewBag.LID));
        $('.Frompicker').mdtimepicker();
        $('.Topicker').mdtimepicker();
        fngetAttendancetype();
        if (MTO_ID != 0) {
            $('#punchdiv').hide();
        }
        else{
          //  $('#Actsubmit').hide();
            //$('#ActDraft').hide();
        }
        getLocation();
    });
    function bytesToSize(bytes) {
        //var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        //if (bytes == 0) return '0 Byte';
        //var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
        //return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
        return (bytes / 1048576).toFixed(3);
    }
    function getLocation() {
        debugger
        // navigator.geolocation.getCurrentPosition(showPosition,showError);
        navigator.geolocation.getCurrentPosition(function(position){
            Lat='';
            Long='';
            Lat= position.coords.latitude;
            Long= position.coords.longitude;
            console.log(position);
        });
    }
    function fnuserstatus()
    {
        var result='';
        $.ajax({
            type: 'POST',
            data: 'subDomainName=' + subDomainName + "&CompanyId=" + CompanyId + "&Usercode=" +LoginUserCode,
            url: '../../HiDoctor_Activity/MTO/GetUserStatus',
            async:false,
            success: function (res) {
                debugger;
                if(res == 1)
                    result = true;
                else 
                    result = false;
            }
        })
        return result;
    }
    function fngetAttendancetype() {
        
        var _objData = new Object();
        _objData.User_Code = LoginUserCode;
        _objData.subDomainName = subDomainName;
        _objData.MTODate=MTO_Date;
        $.ajax(
                   {
                       type: 'POST',
                       data: _objData,
                       async:false,
                       url: '../../HiDoctor_Activity/MTO/GetAttendancetype',
                       success: function (response) {
                           debugger;
                           if (response != null && response.length > 0) {

                               //Sale product autofill
                               var doc = "[";
                               for (var i = 0; i < response.length; i++) {
                                  // var activityName = response[i].Activity_Name + "(" + response[i].Project_Name + ")";
                                   doc += "{label:" + '"' + "" + response[i].Activity_Name + "" + '",' + "id:" + '"' + "" + response[i].Activity_Code  +'"' + "}";
                                   if (i < response.length - 1) {
                                       doc += ",";
                                   }
                               }

                               doc += "];";
                               Activity = eval(doc);
                               if(MTO_ID !=0)
                               {
                                   fngetMTOAttDraftDetails()
                               }
                           }
                           else
                           {
                               swal("You are not having any Attendance Types you cannot able to enter attendance","", "info");
                               //$('#ActDraft').hide();
                               //$('#Actsubmit').hide();
                           }

                          
                       },
                       error: function () {

                       }
                   });
    }
    function fngetMTOAttDraftDetails()
    {
        if (navigator.onLine == true) {
            debugger;
            var Userstatus = fnuserstatus();
            debugger
            if (Userstatus) {
                var _objData = new Object();
                _objData.MTO_ID=MTO_ID;
                _objData.subDomainName = subDomainName;
                $.ajax(
                           {
                               type: 'POST',
                               data: _objData,
                               url: '../../HiDoctor_Activity/MTO/GetMTOAttDraftDetails',
                               success: function (response) {
                                   var Header=response.Header;
                                   var Details=response.Details;
                                   if(Details.length>0)
                                   {
                                       for(var i=0;i<Details.length;i++)
                                       {
                                           if(i==0)
                                           {
                                               $('#Acc_0 #Actname').val(Details[0].Activity_Name);
                                               $('#Acc_0 #hdncode').val(Details[0].Activity_Code);
                                               $('#Acc_0 #Frompicker').val(Details[0].From_Time);
                                               $('#Acc_0 #Topicker').val(Details[0].To_Time);
                                               $('#Acc_0 #ActRemark').val(Details[0].Remark);
                                           }
                                           else{
                                               fngetAttDetails();
                                               $('#Acc_'+Att+' #Actname').val(Details[i].Activity_Name);
                                               $('#Acc_'+Att+' #hdncode').val(Details[i].Activity_Code);
                                               $('#Acc_'+Att+' #Frompicker').val(Details[i].From_Time);
                                               $('#Acc_'+Att+' #Topicker').val(Details[i].To_Time);
                                               $('#Acc_'+Att+' #ActRemark').val(Details[i].Remark);
                                           }
                                       }
                                   }
                                   if(Header.length>0)
                                   {
                                       $('#Gremark').val(Header[0].GeneralRemarks);
                                       AttIntime=Header[0].In_time;
                                   }
                               },
                               error:function()
                               {

                               }
                           });
                fnGetAttachment();

            }
            else {
                swal("Info!", "Your account has been deactivated.", "info");
            }
          
        }
        else {
            swal("", "Please connect to the internet.", "");
            return false;
        }
    }
    function fnGetAttachment()
    {
        $.ajax(
               {
                   type: 'POST',
                   data: 'subDomainName=' + subDomainName + '&MTO_ID=' + MTO_ID,
                   url: '../../HiDoctor_Activity/MTO/GetMtoAttachment',
                   success: function (response) {
                       debugger;
                       if (response.length != 0) {
                           $('#spnfilename').show();
                           $('#spnfilename').html(response[0].File_Name);
                           $('#spnfilename').attr('href', response[0].File_Path);
                       }
                       else {
                           $('#mapfile').show();
                           $('#spnfilename').hide();
                       }
                   }
               })
    }
    function fnReChkSplChar(id) {
        debugger;
        //Remark
        if ($('#' + id).val() != "") {
            var specialCharregex = new RegExp("^[-a-zA-Z0-9 _().,\n\r\r\n]+$");
            if (!specialCharregex.test($('#' + id).val())) {
                return false;
            }
            else {
                return true;
            }
        }
        return true

    }
    function fnRemove(val){
        debugger;

        var remove = $("#" + val.id).parent().parent().parent().attr('id');
        var index = inputValues.indexOf($('#'+remove+' #Actname').val());
        if (index > -1) {
            inputValues.splice(index, 1);
        }
        $('#'+remove).remove();
    }
    function fngetAttDetails()
    {
        var Userstatus= fnuserstatus();
        if(Userstatus){
            debugger;
            $('#Add_'+Att).html('');
            $('#Add_'+Att).html('<button type="button" class="btn btn-danger" id="AddAcc_'+(Att)+'" onclick="fnRemove(this);">Remove</button>');
            Att=Att+1;
            var str='';
            str+='<div class="panel panel-default" id="Acc_'+Att+'">';
            str+='<div class="panel-body">';
            str+='<div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">';
            str+='<label>Attendance Activity</label>';
            str+='<div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Activitytype">';
            str+='<input class="form-control" type="text" name="activity" id="Actname">';
            str+='<input class="form-control" type="hidden" name="activity" id="hdncode">';
            str+='</div>';
            str+='</div>';
            str+='<div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">';
            str+='<div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix" style="padding:0px">';
            str+='<label>Working Time</label>';
            str+='</div>';
            str+='<div class="col-lg-6 col-md-6 col-xs-6 clearfix">';
            str+='<input class="form-control Frompicker" type="text" id="Frompicker" placeholder="From Time">';
            str+='</div>';
            str+='<div class="col-lg-6 col-md-6 col-xs-6 clearfix">';
            str+='<input class="form-control Topicker" type="text" id="Topicker" placeholder="To Time">';
            str+='</div>';
            str+='</div>';
            str+='<div class="form-group col-lg-12 col-md-12 col-xs-12 clearfix">';
            str+='<label>Remarks</label>';
            str+='<div class="col-lg-12 col-md-12 col-xs-12 clearfix">';
            str+='<input class="form-control" type="text" id="ActRemark" maxlength="300">';
            str+='</div>';
            str+='</div>';
            str+='<div class="col-lg-12 col-md-12 col-xs-12 clearfix" id="Add_'+Att+'" style="text-align: center;">';
            str+='<button type="button" class="btn btn-primary" id="AddAcc_'+Att+'" onclick="fngetAttDetails();">Add</button>';
            str+='</div>';
            str+='</div>';
            str+='</div>';
            $('#Attendence').append(str);
            $('.Frompicker').mdtimepicker();
            $('.Topicker').mdtimepicker();
        }
        else
        {
            swal("", "Your account has been deactivated.", "");
        }
    }
    function fnAttachmentcheck(val) {
       
        if (navigator.onLine == true) {
            var Userstatus = fnuserstatus();
            debugger
            if (Userstatus) {
                if ($("#mapfile").val() != '' || $("#spnfilename").html() != '') {
                    if ($("#mapfile").val() != '' && $("#spnfilename").html() != '') {
                        swal({
                            title: "Are you sure?",
                            text: "Do you want to replace the old attachment with new attachment?",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn-primary",
                            confirmButtonText: "Yes",
                            cancelButtonText: "No",
                            closeOnConfirm: true,
                            closeOnCancel: false
                        },
                      function (isConfirm) {
                          debugger
                          if (isConfirm) {
                              $("#spnfilename").html(' ');
                              if ($("#mapfile").val() != "") {
                                  fileUpload = $("#mapfile").get(0);
                                  files = fileUpload.files;
                              }
                              if (files.length > 0) {
                                  if (bytesToSize(document.getElementById("mapfile").files[0].size) > 5) {
                                      swal('File Size Must be Less than 5 MB !', "", "info");
                                      return false;
                                  }
                                  else {
                                      fileData.append(files[0].name, files[0]);
                                  }
                              }
                          }
                          else {
                              $('#mapfile').val('')
                          }
                          fnInsetAttendance(val);
                      });
                    }
                    else {
                        if ($("#mapfile").val() != '') {
                            file = $("#mapfile").val();
                        }
                        else if ($("#spnfilename").html() !='') {
                            file = $("#spnfilename").html();
                        }
                        if ($("#mapfile").val() != "") {
                            fileUpload = $("#mapfile").get(0);
                            files = fileUpload.files;
                        }
                        if (files.length > 0) {
                            if (bytesToSize(document.getElementById("mapfile").files[0].size) > 5) {
                                swal('File Size Must be Less than 5 MB !', "", "info");
                                return false;
                            }
                            else {
                                fileData.append(files[0].name, files[0]);
                            }
                        }
                        fnInsetAttendance(val);
                    }
                }
                else{
                    fnInsetAttendance(val);
                }
            }
            else {
                swal("Info!", "Your account has been deactivated.", "info");
            }
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    function fnInsetAttendance(val)
    {
        if (navigator.onLine == true) {
            var Userstatus= fnuserstatus();
            if(Userstatus)
            {
                //$('#ActDraft').prop('disabled', true);
                //$('#Actsubmit').prop('disabled', true);
                debugger;
                var Attendance = [];
                var result=true;
                var loopCount = $('#Attendence > div').map(function () {
                    return this.id;
                });
                for (var i = 0; i < loopCount.length; i++) {
                    var Att = {
                        "AttendanceType": $('#' + loopCount[i] +' #Actname').val(),
                        "AttendanceCode": $('#' + loopCount[i] +' #hdncode').val(),
                        "FromTime": $('#' + loopCount[i] +' #Frompicker').val(),
                        "ToTime": $('#' + loopCount[i] +' #Topicker').val(),
                        "Remark": $('#' + loopCount[i] +' #ActRemark').val()
                    }
                    if (Att.AttendanceType != '') {
                        var Count = $.grep(Attendance, function (v) {
                            return v.AttendanceType == $('#' + loopCount[i] +' #Actname').val();
                        });
                        var lst = $.grep(Activity, function (v) {
                            return v.label == $('#' + loopCount[i] +' #Actname').val();
                        });
                        if (lst.length == 0) {
                            result=false;
                            swal('Please select  valid Attendance Type', "", "info");
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
                        if (Count.length !=0) {
                            result=false;
                            swal(''+Count[0].AttendanceType+' attendance type is already entered', "", "info");
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
                        if(Att.FromTime =='')
                        {
                            result=false;
                            swal('Please Select From Time For '+Att.AttendanceType+'', "", "info");
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
                        else if(Att.ToTime =='')
                        {
                            result=false;
                            swal('Please Select To Time For '+Att.AttendanceType+'', "", "info");
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
                        var Remark = fnReChkSplChar(loopCount[i] +' #ActRemark');
                        if (Remark == false) {
                            swal('Special characters are not allowed in Remarks except - _ . , ( )', "", "info");
                            result = false;
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
                        else  if (Date.parse("2001/01/01 " + Att.FromTime) > Date.parse("2001/01/01 " + Att.ToTime)) {
                            result=false;
                            swal('Start time cannot be greater than end time.', "", "info"); 
                            $('#ActDraft').prop('disabled', false);
                            $('#Actsubmit').prop('disabled', false);
                            return false;
                        }
               
                        Attendance.push(Att);
                

                    }
                }
                var endtime = $('#PunchEnd').val();
                if (val==1) {
                    if ($('#PunchEnd').val() == '') {
                        swal('Please Enter End Time', "", "info");
                        result = false;
                        $('#ActDraft').prop('disabled', false);
                        $('#Actsubmit').prop('disabled', false);
                        return false;
                    }
                    if (Date.parse("2001/01/01 " + AttIntime) > Date.parse("2001/01/01 " + endtime)) {
                        swal('Punch End time should be greater than Punch Start time ' + AttIntime + '.', "", "info");
                        result = false;
                        $('#ActDraft').prop('disabled', false);
                        $('#Actsubmit').prop('disabled', false);
                        return false;
                    }
                }
                var Remark = fnReChkSplChar('Gremark');
                if (Remark == false) {
                    swal('Special characters are not allowed in general remarks except - _ . , ( )', "", "info");
                    result = false;
                    $('#ActDraft').prop('disabled', false);
                    $('#Actsubmit').prop('disabled', false);
                    return false;
                }
      
                if(result==true)
                {
                    if(Attendance.length==0)
                    {
                        swal('Please Select Atleast one Activity', "", "info");
                        $('#ActDraft').prop('disabled', false);
                        $('#Actsubmit').prop('disabled', false);
                        return false;
                    }
                 
                    var GRemaks = $('#Gremark').val();
                    var _objData = new Object();
                    _objData.subDomainName = subDomainName;
                    _objData.Region_Code = LoginRegionCode;
                    _objData.User_Code = LoginUserCode;
                    _objData.MTODate = MTO_Date;
                    _objData.MTO_Id = MTO_ID;
                    _objData.MTOValue =val;
                    _objData.OutTime = $('#PunchEnd').val() == '' ? null : $('#PunchEnd').val();
                    _objData.Attendance = JSON.stringify(Attendance);
                    _objData.GRemaks = GRemaks;
                    _objData.Latitude = Lat;
                    _objData.Longitude = Long;
                    $.ajax({
                        type: 'POST',
                        data: _objData,
                        url: '../../HiDoctor_Activity/MTO/GetInsetAttendance',
                        success: function (response) {
                            debugger;
                            if(response!= 0)
                            {
                                if ($("#mapfile").val() != ''){
                                    fnMTOAttachment(response, fileData);
                                }
                                else{
                                    swal({
                                        title: "Attendance Activity Saved Successfully",
                                        showCancelButton: false,
                                        closeOnConfirm: false,
                                    }, function (inputValue) {
                                        if (inputValue === false) return false;
                                        window.location.href = '../MTO/MTOMobile?Lid='+Lid;
                                    });                   
                                }
                                $('#ActDraft').prop('disabled', false);
                                $('#Actsubmit').prop('disabled', false);
                            }
                        },
                        error: function () {

                        }
                    });
                }
                else
                {
                    $('#ActDraft').prop('disabled', false);
                    $('#Actsubmit').prop('disabled', false);
                }
            }
            else
            {
                swal("", "Your account has been deactivated.", "");
            }
        } 
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    function fnMTOAttachment(response, fileData) {
        debugger
        if (navigator.onLine == true){
            $.ajax({
                url: '../../HiDoctor_Activity/MTO/UploadFieldAttachment',
                type: "POST",
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  
                data: fileData,
                success: function (result) {
                    debugger
                    if (result[0] != "Failed") {
                        fnInsertMTOAttachment(response, result)
                        console.log(result);
                    }
                    else {
                        swal('Attachment Upload Failed', "", "info");
                        return false;
                    }
                },
                error: function (err) {
                }
            });
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    function fnInsertMTOAttachment(MTOID,result)
    {
        if (navigator.onLine == true){
            var Userstatus = fnuserstatus();
            debugger
            if (Userstatus) {
                var Fname = result[1];
                var FPath = result[0];
                $.ajax({
                    type: 'POST',
                    data: 'subDomainName=' + subDomainName + "&MTOId=" + MTOID + "&Filename=" + Fname + "&FilePath=" + FPath + "&LoginUserCode=" + LoginUserCode,
                    url: '../../HiDoctor_Activity/MTO/InsertFileDetails',
                    success: function (res) {
                        debugger
                        if (res != 0) {
                            swal({
                                title: "Attendance Activity Saved Successfully",
                                showCancelButton: false,
                                closeOnConfirm: false,
                            }, function (inputValue) {
                                if (inputValue === false) return false;
                                window.location.href = '../MTO/MTOMobile?Lid=' + Lid;
                            });
                        }
                        else {
                            swal('Attachment Upload Failed', "", "info");
                            return false;
                        }
                    }
                })
            }
            else {
                swal("Info!", "Your account has been deactivated.", "info");
            }
        
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    var selector = 'input[name=activity]';
    var test='';
    $(document).on('keydown.autocomplete', selector, function () {
        $(this).autocomplete({
            delay: 45,
            source:Activity,
            minLength: 1,
            select: function (event, ui) {
                debugger;
                var hd= $(this).parent().parent().parent().parent().attr('id');
                $('#'+hd+ this.id).val(ui.item.label);
                $('#'+hd+' #hdncode').val(ui.item.id);
               // test= fnAutoCompleteChange(ui.item.label,$(this));
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                debugger;
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        });
    });
    function fnAutoCompleteChange(val, id) {
        debugger;
        $('#Attendence :input').map(function () {
            var type = $(this).prop("name");

            if (type == "activity") {
                inputValues.push($(this).val());
            }
        });
        var check = $.grep(inputValues, function (v) {
            return v == val;
        });
        if (check != null && check.length > 1) {
            swal('Attendance Activity Already Selected !', "", "info");
            id.val('');
            return false;
        }
        else {
            $('#applybtn').removeAttr('disabled');
            return true;
        }
    }
    function fnBack()
    {
        if (navigator.onLine == true){
            var Userstatus= fnuserstatus();
            if(Userstatus){
                window.location.href = '../MTO/MTOMobile?Lid='+Lid;
            }
            else
            {
                swal("", "Your account has been deactivated.", "");
            }
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    function fnMTOPunchTime()
    {
        if (navigator.onLine == true){
            var Userstatus= fnuserstatus();
            if(Userstatus){
                $('#myModal').show();
                $('#punchintime').mdtimepicker();
            }
            else
            {
                swal("", "Your account has been deactivated.", "");
            }
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    function fnMTOInsertPunchTime()
    {
        if (navigator.onLine == true){
            var Userstatus= fnuserstatus();
            if (Userstatus) {
                $('#punchtime').prop('disabled', true);
                var InTime = $('#punchintime').val();
                if (InTime == '')
                {
                    swal("Please enter Start Time", "", "info");
                    $('#punchtime').prop('disabled', false);
                    return false;
                }
                var _objData = new Object();
                _objData.subDomainName = subDomainName;
                _objData.Region_Code = LoginRegionCode;
                _objData.User_Code = LoginUserCode;
                _objData.MTODate = MTO_Date;
                _objData.MTO_ID = MTO_ID;
                _objData.InTime = InTime;
                _objData.OutTime = null;
                _objData.StoreName = null;
                _objData.Activity = 2;
                _objData.Latitude = Lat;
                _objData.Longitude = Long;
                $.ajax(
               {
                   type: 'POST',
                   data: _objData,
                   url: '../../HiDoctor_Activity/MTO/GetMTOPunchTime',
                   success: function (response) {
                       debugger;
                       if (response != 0) {
                           MTO_ID = response;
                           AttIntime= $('#punchintime').val();
                           $('#myModal').hide();
                           $('#punchdiv').hide();
                           $('#Actsubmit').show();
                           $('#ActDraft').show();
                           $('#punchtime').prop('disabled', false);
                           $('#stime').show();
                           $('#spnstrttime').html(InTime);
                           // fnsaveuserlocation(MTO_ID);
                       }
                   }, error: function () {

                   }
               });
            }
            else {
                swal("Info!", "Your account has been deactivated.", "info");
            }
        }
        else {
            swal("Please connect to the internet", "", "");
            return false;
        }
    }
    //function fnsaveuserlocation(MTO_ID) {
    //    debugger;
    //    $.ajax({
    //        type: 'POST',
    //        data: 'subDomainName=' + subDomainName + '&MTO_ID=' + MTO_ID + '&Latitude=' + Lat + '&Longitude=' + Long,
    //        url: '../../HiDoctor_Activity/MTO/SaveMTOLatLong',
    //        success: function (response) {
    //            debugger;
    //            if (response)
    //                alert('Success');
    //            else
    //                alert('Error');
    //        }
    //    });
    //}
    //fnInsetAttendance(1)
    function fnEndPunch()
    {
        $('#PunchEndTime').show();
        $('#PunchEnd').mdtimepicker();
    }
</script>